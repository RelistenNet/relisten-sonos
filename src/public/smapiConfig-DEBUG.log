2018-03-02 18:58:42,749 [INFO] SONOS.sonos.workflow.result - Summary Report Files: log_files/smapiConfig/SummaryReport.html and log_files/smapiConfig/smapiConfig.txt
2018-03-02 18:58:42,749 [INFO] SONOS.sonos.workflow.result - Detailed Debug Log File: log_files/smapiConfig/smapiConfig-DEBUG.log
2018-03-02 18:58:42,750 [INFO] SONOS.sonos.workflow.basicsuite.BasicWorkflowTestSuite - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:42,750 [INFO] SONOS.sonos.workflow.basicsuite.BasicWorkflowTestSuite - Current Working Directory: /Users/dsaewitz/y/relisten/PythonSelfTest/smapi/content_workflow
2018-03-02 18:58:42,750 [INFO] SONOS.sonos.workflow.basicsuite.BasicWorkflowTestSuite - Result file: log_files/smapiConfig/SummaryReport.html
2018-03-02 18:58:43,221 [INFO] SONOS.sonos.workflow.basicsuite.BasicWorkflowTestSuite - Service Name: Relisten


2018-03-02 18:58:44,082 [INFO] SONOS.sonos.workflow.result - **************************************************
2018-03-02 18:58:44,082 [INFO] SONOS.sonos.workflow.result - Start *test suite* 'smapiConfig' at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:44,082 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:44,082 [INFO] SONOS.sonos.workflow.result - Start *test fixture* GetUserInfoTest at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:44,083 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:44,083 [INFO] SONOS.sonos.workflow.result - Start *test case* test_getUserInfo at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:44,083 [INFO] SONOS.sonos.workflow.fixture.GetUserInfoTest - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:44,083 [INFO] SONOS.sonos.workflow.fixture.GetUserInfoTest - Start Test Case: 1 GetUserInfoTest test_getUserInfo
2018-03-02 18:58:44,083 [SKIP] SONOS.sonos.workflow.fixture.GetUserInfoTest - Service must support getUserInfo for this test to run. (expression is False)
2018-03-02 18:58:44,083 [SKIP] SONOS.sonos.workflow.fixture.GetUserInfoTest - 1 GetUserInfoTest test_getUserInfo
2018-03-02 18:58:44,083 [INFO] SONOS.sonos.workflow.fixture.GetUserInfoTest - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:44,084 [INFO] SONOS.sonos.workflow.result - End *test case* test_getUserInfo at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:44,084 [INFO] SONOS.sonos.workflow.result - End *test fixture* GetUserInfoTest at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:44,084 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:44,084 [INFO] SONOS.sonos.workflow.result - Start *test fixture* UpdateTestContent at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:44,084 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:44,084 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:44,085 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:44,085 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:44,085 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 18:58:44,087 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:44,087 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:44,503 [DEBUG] SONOS.suds.client - waited 415 (ms) on server reply
2018-03-02 18:58:44,526 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:44,706 [PASS] SONOS.sonos.workflow.fixture.UpdateTestContent - getMetdata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 415 (ms)
 } is not None)
2018-03-02 18:58:44,707 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:44,707 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 2 UpdateTestContent test_combinatorial_get_test_content_157871190233786656879113168554635043975 (mediaCollection){
   id = "Artist:dead-and-co"
   itemType = "artist"
   displayType = "list"
   title = "Dead and Company"
   summary = "Dead and Company"
   canPlay = False
 })
2018-03-02 18:58:44,707 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:44,707 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 2 UpdateTestContent test_combinatorial_get_test_content_157871190233786656879113168554635043975
2018-03-02 18:58:44,708 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:44,708 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:44,708 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:44,708 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:44,708 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:dead-and-co, 0, 10000, None)
2018-03-02 18:58:44,710 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:dead-and-co</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:44,711 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:45,102 [DEBUG] SONOS.suds.client - waited 390 (ms) on server reply
2018-03-02 18:58:45,103 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>4</count>
            <total>4</total>
            <mediaCollection>
               <id>Year:dead-and-co:2015</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015</title>
               <summary>2015</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:dead-and-co:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:dead-and-co:2017</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2017</title>
               <summary>2017</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:dead-and-co:2018</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2018</title>
               <summary>2018</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:45,110 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:45,111 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 3 UpdateTestContent test_combinatorial_get_test_content_247608434757809851915419310081557197706 (mediaCollection){
   id = "Year:dead-and-co:2015"
   itemType = "container"
   displayType = "list"
   title = "2015"
   summary = "2015"
   canPlay = False
 })
2018-03-02 18:58:45,111 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:45,111 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 3 UpdateTestContent test_combinatorial_get_test_content_247608434757809851915419310081557197706
2018-03-02 18:58:45,111 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:45,112 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:45,112 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:45,112 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:45,112 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:dead-and-co:2015, 0, 10000, None)
2018-03-02 18:58:45,114 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:dead-and-co:2015</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:45,115 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:45,406 [DEBUG] SONOS.suds.client - waited 291 (ms) on server reply
2018-03-02 18:58:45,411 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>22</count>
            <total>22</total>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-10-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-10-29 – Times Union Center – Albany, New York [15]</title>
               <summary>2015-10-29</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-10-31</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-10-31 – Madison Square Garden – New York, New York [3]</title>
               <summary>2015-10-31</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-01</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-01 – Madison Square Garden – New York, New York [8]</title>
               <summary>2015-11-01</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-05</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-05 – Wells Fargo Center – Philadelphia, Pennsylvania [9]</title>
               <summary>2015-11-05</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-06 – Verizon Center – Washington, Washington, D.C. [2]</title>
               <summary>2015-11-06</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-07</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-07 – Madison Square Garden – New York, New York [4] [SBD]</title>
               <summary>2015-11-07</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-10</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-10 – DCU Center – Worcester, Massachusetts [17]</title>
               <summary>2015-11-10</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-11</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-11 – First Niagara Center – Buffalo, New York [2]</title>
               <summary>2015-11-11</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-13 – Nationwide Arena – Columbus, Ohio [4]</title>
               <summary>2015-11-13</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-14</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-14 – Greensboro Coliseum – Greensboro, North Carolina [15]</title>
               <summary>2015-11-14</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-17 – Philips Arena – Atlanta, Georgia [6]</title>
               <summary>2015-11-17</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-18 – Bridgestone Arena – Nashville, Tennessee [2]</title>
               <summary>2015-11-18</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-20 – Scottrade Center – St. Louis, Missouri [4]</title>
               <summary>2015-11-20</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-21 – Target Center – Minneapolis, Minnesota [1]</title>
               <summary>2015-11-21</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-24 – 1st Bank Center – Broomfield, Colorado [1]</title>
               <summary>2015-11-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-25 – 1st Bank Center – Broomfield, Colorado [3] [SBD]</title>
               <summary>2015-11-25</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-27 – MGM Grand Garden Arena – Las Vegas, Nevada [2]</title>
               <summary>2015-11-27</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-11-28</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-11-28 – MGM Grand Garden Arena – Las Vegas, Nevada [2]</title>
               <summary>2015-11-28</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-12-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-12-27 – Bill Graham Civic Auditorium – San Francisco, California [2]</title>
               <summary>2015-12-27</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-12-28</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-12-28 – Bill Graham Civic Auditorium – San Francisco, California [2]</title>
               <summary>2015-12-28</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-12-30</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-12-30 – The Forum – Inglewood, California [4]</title>
               <summary>2015-12-30</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:dead-and-co:2015:2015-12-31</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2015-12-31 – The Forum – Inglewood, California [7]</title>
               <summary>2015-12-31</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:45,443 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:45,444 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 4 UpdateTestContent test_combinatorial_get_test_content_88281033089592695106565156656022849141 (mediaCollection){
   id = "Shows:dead-and-co:2015:2015-10-29"
   itemType = "container"
   displayType = "list"
   title = "2015-10-29 – Times Union Center – Albany, New York [15]"
   summary = "2015-10-29"
   canPlay = False
 })
2018-03-02 18:58:45,444 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:45,444 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 4 UpdateTestContent test_combinatorial_get_test_content_88281033089592695106565156656022849141
2018-03-02 18:58:45,444 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:45,444 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:45,445 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:45,445 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:45,445 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:dead-and-co:2015:2015-10-29, 0, 10000, None)
2018-03-02 18:58:45,447 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:dead-and-co:2015:2015-10-29</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:45,447 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:45,835 [DEBUG] SONOS.suds.client - waited 388 (ms) on server reply
2018-03-02 18:58:45,842 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>15</count>
            <total>15</total>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72347</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>AKG568ebs&gt;LunatecV3(35db Gain)&gt;MarantzPMD671 [AUD]</title>
               <summary>AKG568ebs&gt;LunatecV3(35db Gain)&gt;MarantzPMD671&gt;CF&gt;WAVE&gt;CDeditor&gt;FLAC(8)&gt;TLH 16bit/44.1 khz</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72307</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>AKG 451ck8 mics&gt;Sony D5(as preamp)&gt;Sony M10 @24bit/48kHz [AUD]</title>
               <summary>Dead &amp; Co
Times Union Center
Albany, NY
Thursday October 29, 2015


Source: AKG 451ck8 mics&gt;Sony D5(as preamp)&gt;Sony M10 @24bit/48kHz
Location: Section 128 Row G seat 6 on a 5 foot stand DFC with shotguns pointed directly at the main stacks.
Lineage: Sony M10&gt;Sound Forge Studio 9.0 for tracking, mastering, and conversion to 16bit/44.1kHz&gt;CDR&gt;FreeRip v2.0 FLAC level 8
Taped, converted, mastered and uploaded by Mark Van Blunk MVB

Setlist:
Set 1: Playin&apos; in the Band, Cold Rain &amp; Snow, Tennessee Jed, Feel Like A Stranger, He&apos;s Gone&gt;BirdSong&gt;Music Never Stopped.
Set 2: Lost Sailor&gt; Saint of Circumstance, Help on the Way&gt;Slipknot, Franklin&apos;s Tower, Drums&gt;Space&gt;The Other One&gt;Stella Blue&gt;Not Fade Away.
Encore: Touch of Grey</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72356</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Neumann KM150&apos;s&gt;Sonosax SX-M2&gt;SD744t [AUD]</title>
               <summary>Set One:

01 Playing In The Band&gt;Jam&gt;
02 Cold Rain &amp; Snow
03 Tennessee Jed
04 Feel Like A Stanger
05 He&apos;s Gone&gt;
06 Bird Song
07 The Music Never Stopped


Set Two:

01 Lost Sailor&gt;
02 Saint Of Circumstance&gt;
03 Help On The Way&gt;
04 Slipknot!&gt;
05 Franklin&apos;s Tower&gt;
06 Drums&gt;
07 Space&gt;
08 The Other One
09 Stella Blue&gt;
10 Not Fade Away
11 Encore Break
12 Touch Of Grey</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72344</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>16 bit: (FOB) Microtech Gefell M21 &gt; NBob active cables &gt; Naiant PFA &gt; Sound Devices 722 [AUD]</title>
               <summary/>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72277</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Neumann SKM140(AK40&apos;s/LC3&apos;s/KM100&apos;s)&gt;GAKables xlr&gt;Lunatec V2&gt;GAKables xlr&gt;Apogee Mini-Me@24/48&gt;AES/EBU&gt;Sound Devices 722 @24bit/48kHz [AUD]</title>
               <summary>Dead &amp; Company ~ skm140&gt;v2&gt;mini-me&gt;sd722@24/48&gt;16bit ~
Set1: 85:01
d1t01. crowd/tuning/intro jam&gt;
d1t02. Playing In The Band-&gt;
d1t03. Cold Rain &amp; Snow
d1t04. Tennessee Jed
d1t05. Feel Like A Stranger
d1t06. He&apos;s Gone-&gt;
d1t07. Bird Song-&gt;
d2t01. The Music Never Stopped

Set2: 101:54
d2t02. crowd/tuning
d2t03. Lost Sailor-&gt;
d2t04. Saint Of Circumstance
d2t05. Help On The Way-&gt;
d2t06. Slipknot!-&gt;
d2t07. Franklin&apos;s Tower
d2t08. Drumz-&gt;
d2109. Space-&gt;
d3t01. The Other One-&gt;
d3t02. Stella Blue-&gt;
d3t03. Not Fade Away
d3t04. encore break
d3t05. Touch Of Grey


Dead &amp; Company is:

Mickey Hart - drums &amp; percussion
Bill Kreutzmann - drums &amp; percussion
Bob Weir - rhythm guitar &amp; vocals
John Mayer - lead guitar &amp; vocals
Oteil Burbridge - bass &amp; vocals
Jeff Chimenti - keyboards &amp; vocals</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72271</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Neumann SKM140(AK40&apos;s/LC3&apos;s/KM100&apos;s)&gt;GAKables xlr&gt;Lunatec V2&gt;GAKables xlr&gt;Apogee Mini-Me@24/48&gt;AES/EBU&gt;Sound Devices 722 @24bit/48kHz [AUD]</title>
               <summary>SKM140&gt;V2&gt;Mini-Me&gt;SD722@24/48&gt;16bit ~
Set1: 85:01
d1t01. crowd/tuning/intro jam&gt;
d1t02. Playing In The Band-&gt;
d1t03. Cold Rain &amp; Snow
d1t04. Tennessee Jed
d1t05. Feel Like A Stranger
d1t06. He&apos;s Gone-&gt;
d1t07. Bird Song-&gt;
d2t01. The Music Never Stopped

Set2: 101:54
d2t02. crowd/tuning
d2t03. Lost Sailor-&gt;
d2t04. Saint Of Circumstance
d2t05. Help On The Way-&gt;
d2t06. Slipknot!-&gt;
d2t07. FRanklin&apos;s Tower
d2t08. Drumz-&gt;
d2109. Space-&gt;
d3t01. The Other One-&gt;
d3t02. Stella Blue-&gt;
d3t03. Not Fade Away
d3t04. encore break
d3t05. Touch Of Grey

Dead &amp; Company is:

Mickey Hart - drums &amp; percussion
Bill Kreutzmann - drums &amp; percussion
Bob Weir - rhythm guitar &amp; vocals
John Mayer - lead guitar &amp; vocals
Oteil Burbridge - bass &amp; vocals
Jeff Chimenti - keyboards &amp; vocals</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72273</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Audience [AUD]</title>
               <summary>1st Set (83:40)

Playing In The Band&gt;
Cold Rain and Snow
Tennessee Jed
Feel Like A Stranger
He&apos;s Gone&gt;
Bird Song&gt;
The Music Never Stopped

2nd Set (100:35)

Lost Sailor&gt;
Saint Of Circumstance
Help On The Way&gt;
Slipknot&gt;
Franklins Tower&gt;
Rhythem Devils&gt;
Space&gt;
The Other One&gt;
Stella Blue&gt;
Not Fade Away

Encore

Touch of grey</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72253</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>24 bit: (FOB) Microtech Gefell M21 &gt; NBob active cables &gt; Naiant PFA &gt; Sound Devices 722 [AUD]</title>
               <summary/>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72304</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Neumann SKM140(AK40&apos;s/LC3&apos;s/KM100&apos;s)&gt;GAKables xlr&gt;Lunatec V2&gt;GAKables xlr&gt;Apogee Mini-Me@24/48&gt;AES/EBU&gt;Sound Devices 722 @24bit/48kHz [AUD]</title>
               <summary>**24bit version** skm140&gt;v2&gt;mini-me&gt;sd722@24/48&gt;flac24 ~
Set1: 85:01
t01. crowd/tuning/intro jam&gt;
t02. Playing In The Band-&gt;
t03. Cold Rain &amp; Snow
t04. Tennessee Jed
t05. Feel Like A Stranger
t06. He&apos;s Gone-&gt;
t07. Bird Song-&gt;
t08. The Music Never Stopped

Set2: 101:54
t01. crowd/tuning
t02. Lost Sailor-&gt;
t03. Saint Of Circumstance
t04. Help On The Way-&gt;
t05. Slipknot!-&gt;
t06. Franklin&apos;s Tower
t07. Drumz-&gt;
t08. Space-&gt;
t09. The Other One-&gt;
t10. Stella Blue-&gt;
t11. Not Fade Away
t12. encore break
t13. Touch Of Grey

Dead &amp; Company is:

Mickey Hart - drums &amp; percussion
Bill Kreutzmann - drums &amp; percussion
Bob Weir - rhythm guitar &amp; vocals
John Mayer - lead guitar &amp; vocals
Oteil Burbridge - bass &amp; vocals
Jeff Chimenti - keyboards &amp; vocals</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72311</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Schoeps MK4V&apos;s&gt;VST62iu&gt;V2&gt;M10 [AUD]</title>
               <summary>Set One:

01 Playing In The Band&gt;Jam&gt;
02 Cold Rain &amp; Snow
03 Tennessee Jed
04 Feel Like A Stanger
05 He&apos;s Gone&gt;
06 Bird Song
07 The Music Never Stopped


Set Two:

01 Lost Sailor&gt;
02 Saint Of Circumstance&gt;
03 Help On The Way&gt;
04 Slipknot!&gt;
05 Franklin&apos;s Tower&gt;
06 Drums&gt;
07 Space&gt;
08 The Other One
09 Stella Blue&gt;
10 Not Fade Away
11 Encore Break
12 Touch Of Grey</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72259</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>(OTS/Center) Neumann U89i (XY 90degrees)&gt; AETA PSP-3 + Neumann AK40/LC3/KM100 (DIN)&gt; Apogee Minime&gt; (Oade Concert Modified) Edirol R-44 (24/48 on a SDHC Card). [AUD]</title>
               <summary>Set1:
01 Playing In The Band-&gt;
02 Cold Rain &amp; Snow
03 Tennessee Jed
04 Feel Like A Stranger
05 He&apos;s Gone-&gt;
06 Bird Song-&gt;
07 The Music Never Stopped

Set2:
01 Lost Sailor-&gt;
02 Saint Of Circumstance
03 Help On The Way-&gt;
04 Slipknot!-&gt;
05 Franklin&apos;s Tower
06 Drumz-&gt;
07 Space-&gt;
08 The Other One-&gt;
09 Stella Blue-&gt;
10 Not Fade Away
11 encore break
12 Touch Of Grey</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72263</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>2015-10-29 [AUD]</title>
               <summary>&lt;div&gt;2015/10/29 | Times Union Center - Albany, NY&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Playing In The Band&lt;/div&gt;&lt;div&gt;Cold Rain &amp; Snow&lt;/div&gt;&lt;div&gt;Tennessee Jed&lt;/div&gt;&lt;div&gt;Feel Like A Stranger&lt;/div&gt;&lt;div&gt;He&apos;s Gone- &gt;&lt;/div&gt;&lt;div&gt;Bird Song -&gt;&lt;/div&gt;&lt;div&gt;The Music Never Stopped&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Lost Sailor -&gt;&lt;/div&gt;&lt;div&gt;Saint Of Circumstance&lt;/div&gt;&lt;div&gt;Help On The Way -&gt;&lt;/div&gt;&lt;div&gt;Slipknot! -&gt;&lt;/div&gt;&lt;div&gt;Franklin&apos;s Tower&lt;/div&gt;&lt;div&gt;Drums -&gt;&lt;/div&gt;&lt;div&gt;Space -&gt;&lt;/div&gt;&lt;div&gt;The Other One -&gt;&lt;/div&gt;&lt;div&gt;Stella Blue -&gt;&lt;/div&gt;&lt;div&gt;Not Fade Away -&gt;&lt;/div&gt;&lt;div&gt;NFA Chant&lt;/div&gt;&lt;div&gt;Touch Of Grey&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2 source audience matrix - mixed using Audacity - 16bit .flac output&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Source 1: AKG 451ck8 mics&gt;Sony D5(as preamp)&gt;Sony M10 @24bit/48kHz | Taped by Mark Van Blunk&lt;/div&gt;&lt;div&gt;Source 2: Neumann KM150&apos;s&gt;Sonosax SX-M2&gt;SD744t | Taped by Keith Litzenberger&lt;/div&gt;</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72292</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>AKG460 ck8-&gt;Darktrain Silver Cables-&gt;Edirol R-44-&gt;24/48 wav [AUD]</title>
               <summary>Dead &amp; Company
Times Union Center
Albany, NY
October 29, 2015

Source: AKG 460 A60 CK8-&gt; Darktrain Silver Cables-&gt;Edirol R-44-&gt;24/48 wav
Lineage: SD Card-&gt; Soundforge 8-&gt; Traders Little Helper Dither 16/44.1
Location OTS Sec 5 DFC
Taped and Transferred by: Brian Goldstein   briancgoldstein@yahoo.com


Set I

01 Playing In The Band&gt;Jam&gt;
02 Cold Rain &amp; Snow
03 Tennessee Jed
04 Feel Like A Stranger
05 He&apos;s Gone&gt;
06 Bird Song
07 The Music Never Stopped


Set II

01 Lost Sailor&gt;
02 Saint Of Circumstance&gt;
03 Help On The Way&gt;
04 Slipknot!&gt;
05 Franklin&apos;s Tower&gt;
06 Drums&gt;
07 Space&gt;
08 The Other One
09 Stella Blue&gt;
10 Not Fade Away
11 Encore Break
12 Touch Of Grey</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72317</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Aud &gt; Nakamichi CM700&apos;s W CP701&apos;s &gt; Tascam HDP2 [AUD]</title>
               <summary>Dead And Company
Times Union Center
Albany, NY 
2015-10-29

Bob Weir
John Mayer
Oteil Burbridge
Mickey Hart
Bill Kreutzmann
Jeff Chimenti

Source: Aud &gt; Nakamichi CM700&apos;s W CP701&apos;s &gt; Tascam HDP2 
Lineage: CF 24/48 &gt; Soundforge Pro - Editing &gt; Traders Little Helper - Convert to Flac   
Uploaded By: JT/NY

Set I
01) Intro.
02) Playing in the Band &gt;
03) Cold Rain And Snow
04) Tennessee Jed
05) Feel Like a Stranger
06) He&apos;s Gone &gt;
07) Bird Song
08) The Music Never Stopped

Set II
09) Lost Sailor &gt;
10) Saint of Circumstance &gt;
11) Help On The Way &gt;
12) Slipknot &gt;
13) Franklins Tower
14) Drums
15) Space
16) The Other One &gt;
17) Stella Blue &gt;
18) Not Fade Away
19) Encore Break

Encore:
20) Touch Of Grey

Suggested Disc Splits:
Disc 1: T01-T06 Set I
Disc 2: T07-T13 Set II
Disc 3: T14-T20 Set II</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:dead-and-co:2015:2015-10-29:72266</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>AKG483 (DINa) &gt; Sound Device USBPRE2 &gt; Sony M-10 @24bit/48Khz 11 FT, DFC, OTS [AUD]</title>
               <summary>)
Set 1:
01 Tuning
02 Playing In The Band
03 Cold Rain &amp; Snow
04 Tennessee Jed
05 Feel Like A Stanger
06 He&apos;s Gone &gt;
07 Bird Song
08 The Music Never Stopped


Set Two:
01 Lost Sailor &gt;
02 Saint Of Circumstance
03 Help On The Way &gt;
04 Slipknot &gt;
05 Franklin&apos;s Tower&gt;
06 Drums&gt;
07 Space&gt;
08 The Other One
09 Stella Blue&gt;
10 Not Fade Away

Encore:
11 Touch Of Grey</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:45,864 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:45,865 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 5 UpdateTestContent test_combinatorial_get_test_content_163325570179592668243595901866868615383 (mediaCollection){
   id = "Show:dead-and-co:2015:2015-10-29:72347"
   itemType = "album"
   displayType = "list"
   title = "AKG568ebs>LunatecV3(35db Gain)>MarantzPMD671 [AUD]"
   summary = "AKG568ebs>LunatecV3(35db Gain)>MarantzPMD671>CF>WAVE>CDeditor>FLAC(8)>TLH 16bit/44.1 khz"
   canPlay = True
 })
2018-03-02 18:58:45,865 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:45,865 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 5 UpdateTestContent test_combinatorial_get_test_content_163325570179592668243595901866868615383
2018-03-02 18:58:45,865 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:45,865 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:45,866 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:45,866 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:45,866 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Show:dead-and-co:2015:2015-10-29:72347, 0, 10000, None)
2018-03-02 18:58:45,867 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Show:dead-and-co:2015:2015-10-29:72347</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:45,867 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:46,257 [DEBUG] SONOS.suds.client - waited 389 (ms) on server reply
2018-03-02 18:58:46,264 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>18</count>
            <total>18</total>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493463</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>01.playingintheband.flac 15:48</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>948</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493464</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>02.coldrainandsnow.flac 7:44</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>464</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493465</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>03.tennesseejed.flac 10:14</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>614</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493466</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>04.feellikeastranger.flac 13:32</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>812</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493467</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>05.hesgone.flac 11:52</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>712</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493468</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>06.birdsong.flac 14:43</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>883</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493469</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>07.themusicneverstopped.flac 9:44</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>584</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493470</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>08.lostsailor.flac 10:15</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>615</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493471</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>09.saintofcircumstance.flac 9:52</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>592</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493472</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>10.helpontheway.flac 5:05</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>305</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493473</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>11.slipknot.flac 6:44</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>404</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493474</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>12.franklinstower.flac 10:02</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>602</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493475</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>13.rhythemdevils.flac 11:30</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>690</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493476</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>14.space.flac 9:18</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>558</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493477</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>15.theotherone.flac 9:25</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>565</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493478</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>16.stellablue.flac 8:57</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>537</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493479</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>17.notfadeaway.flac 11:26</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>686</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72347:1493480</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>18.touchofgrey.flac 7:57</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72347</albumId>
                  <duration>477</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:46,297 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,297 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 6 UpdateTestContent test_combinatorial_get_test_content_319745265116649732970576064242591353408 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493463"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "01.playingintheband.flac 15:48"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 948
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,298 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,298 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 6 UpdateTestContent test_combinatorial_get_test_content_319745265116649732970576064242591353408
2018-03-02 18:58:46,298 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,298 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,298 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,298 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,299 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,299 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 7 UpdateTestContent test_combinatorial_get_test_content_68945519381262990648957152397745830391 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493464"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "02.coldrainandsnow.flac 7:44"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 464
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,299 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,299 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 7 UpdateTestContent test_combinatorial_get_test_content_68945519381262990648957152397745830391
2018-03-02 18:58:46,299 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,300 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,300 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,300 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,300 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,300 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 8 UpdateTestContent test_combinatorial_get_test_content_180124253453044344024513060253415716157 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493465"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "03.tennesseejed.flac 10:14"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 614
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,300 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,301 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 8 UpdateTestContent test_combinatorial_get_test_content_180124253453044344024513060253415716157
2018-03-02 18:58:46,301 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,301 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,301 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,301 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,301 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,302 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 9 UpdateTestContent test_combinatorial_get_test_content_127799496494874274680107149726786661998 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493466"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "04.feellikeastranger.flac 13:32"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 812
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,302 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,302 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 9 UpdateTestContent test_combinatorial_get_test_content_127799496494874274680107149726786661998
2018-03-02 18:58:46,302 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,302 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,303 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,303 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,303 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,303 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 10 UpdateTestContent test_combinatorial_get_test_content_190763806454161799382526787017720345762 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493467"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "05.hesgone.flac 11:52"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 712
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,303 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,303 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 10 UpdateTestContent test_combinatorial_get_test_content_190763806454161799382526787017720345762
2018-03-02 18:58:46,304 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,304 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,304 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,304 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,304 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,304 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 11 UpdateTestContent test_combinatorial_get_test_content_281047952332647083017830348694815697987 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493468"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "06.birdsong.flac 14:43"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 883
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,305 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,305 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 11 UpdateTestContent test_combinatorial_get_test_content_281047952332647083017830348694815697987
2018-03-02 18:58:46,305 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,305 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,305 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,305 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,305 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,306 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 12 UpdateTestContent test_combinatorial_get_test_content_156439338159128247338746031450163625446 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493469"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "07.themusicneverstopped.flac 9:44"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 584
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,306 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,306 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 12 UpdateTestContent test_combinatorial_get_test_content_156439338159128247338746031450163625446
2018-03-02 18:58:46,306 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,306 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,307 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,307 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 11 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,307 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,307 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 13 UpdateTestContent test_combinatorial_get_test_content_120730615527968023333964357641140840044 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493470"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "08.lostsailor.flac 10:15"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 615
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,307 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,308 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 13 UpdateTestContent test_combinatorial_get_test_content_120730615527968023333964357641140840044
2018-03-02 18:58:46,308 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,308 [INFO] SONOS.sonos.workflow.result - End *test iteration* 11 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,308 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,308 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 12 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,308 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,309 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 14 UpdateTestContent test_combinatorial_get_test_content_167517958016944108985319843796255798998 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493471"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "09.saintofcircumstance.flac 9:52"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 592
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,309 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,309 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 14 UpdateTestContent test_combinatorial_get_test_content_167517958016944108985319843796255798998
2018-03-02 18:58:46,309 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,309 [INFO] SONOS.sonos.workflow.result - End *test iteration* 12 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,310 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,310 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 13 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,310 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,310 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 15 UpdateTestContent test_combinatorial_get_test_content_162629477391345431877445513502564439823 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493472"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "10.helpontheway.flac 5:05"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 305
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,310 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,310 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 15 UpdateTestContent test_combinatorial_get_test_content_162629477391345431877445513502564439823
2018-03-02 18:58:46,311 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,311 [INFO] SONOS.sonos.workflow.result - End *test iteration* 13 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,311 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,311 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 14 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,311 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,311 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 16 UpdateTestContent test_combinatorial_get_test_content_304018249490381166629343665882025204865 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493473"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "11.slipknot.flac 6:44"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 404
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,312 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,312 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 16 UpdateTestContent test_combinatorial_get_test_content_304018249490381166629343665882025204865
2018-03-02 18:58:46,312 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,312 [INFO] SONOS.sonos.workflow.result - End *test iteration* 14 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,312 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,312 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 15 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,313 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,313 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 17 UpdateTestContent test_combinatorial_get_test_content_290878390448330642027925717177654107904 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493474"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "12.franklinstower.flac 10:02"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 602
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,313 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,313 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 17 UpdateTestContent test_combinatorial_get_test_content_290878390448330642027925717177654107904
2018-03-02 18:58:46,313 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,313 [INFO] SONOS.sonos.workflow.result - End *test iteration* 15 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,314 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,314 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 16 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,314 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,314 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 18 UpdateTestContent test_combinatorial_get_test_content_313919770852815047570939561184355754488 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493475"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "13.rhythemdevils.flac 11:30"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 690
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,315 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,315 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 18 UpdateTestContent test_combinatorial_get_test_content_313919770852815047570939561184355754488
2018-03-02 18:58:46,315 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,315 [INFO] SONOS.sonos.workflow.result - End *test iteration* 16 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,315 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,315 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 17 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,315 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,316 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 19 UpdateTestContent test_combinatorial_get_test_content_79795733919046019826177461183218695516 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493476"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "14.space.flac 9:18"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 558
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,316 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,316 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 19 UpdateTestContent test_combinatorial_get_test_content_79795733919046019826177461183218695516
2018-03-02 18:58:46,316 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,316 [INFO] SONOS.sonos.workflow.result - End *test iteration* 17 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,316 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,316 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 18 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,316 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,317 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 20 UpdateTestContent test_combinatorial_get_test_content_15058926350952653074737603323602089127 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493477"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "15.theotherone.flac 9:25"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 565
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,317 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,317 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 20 UpdateTestContent test_combinatorial_get_test_content_15058926350952653074737603323602089127
2018-03-02 18:58:46,317 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,317 [INFO] SONOS.sonos.workflow.result - End *test iteration* 18 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,317 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,318 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 19 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,318 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,318 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 21 UpdateTestContent test_combinatorial_get_test_content_47460137603670111183932571758829975993 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493478"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "16.stellablue.flac 8:57"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 537
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,338 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,339 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 21 UpdateTestContent test_combinatorial_get_test_content_47460137603670111183932571758829975993
2018-03-02 18:58:46,339 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,339 [INFO] SONOS.sonos.workflow.result - End *test iteration* 19 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,339 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,339 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 20 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,340 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,340 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 22 UpdateTestContent test_combinatorial_get_test_content_220373156114317216402386978859999687212 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493479"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "17.notfadeaway.flac 11:26"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 686
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,340 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,340 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 22 UpdateTestContent test_combinatorial_get_test_content_220373156114317216402386978859999687212
2018-03-02 18:58:46,340 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,340 [INFO] SONOS.sonos.workflow.result - End *test iteration* 20 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,341 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,341 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 21 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,341 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,341 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 23 UpdateTestContent test_combinatorial_get_test_content_123362373791402697754893443074512431840 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72347:1493480"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "18.touchofgrey.flac 7:57"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72347"
         duration = 477
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:46,342 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,342 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 23 UpdateTestContent test_combinatorial_get_test_content_123362373791402697754893443074512431840
2018-03-02 18:58:46,342 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,343 [INFO] SONOS.sonos.workflow.result - End *test iteration* 21 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,344 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,344 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 22 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,344 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,345 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 24 UpdateTestContent test_combinatorial_get_test_content_63385284383340697163958905092269893637 (mediaCollection){
   id = "Show:dead-and-co:2015:2015-10-29:72307"
   itemType = "album"
   displayType = "list"
   title = "AKG 451ck8 mics>Sony D5(as preamp)>Sony M10 @24bit/48kHz [AUD]"
   summary = "Dead & Co
Times Union Center
Albany, NY
Thursday October 29, 2015


Source: AKG 451ck8 mics>Sony D5(as preamp)>Sony M10 @24bit/48kHz
Location: Section 128 Row G seat 6 on a 5 foot stand DFC with shotguns pointed directly at the main stacks.
Lineage: Sony M10>Sound Forge Studio 9.0 for tracking, mastering, and conversion to 16bit/44.1kHz>CDR>FreeRip v2.0 FLAC level 8
Taped, converted, mastered and uploaded by Mark Van Blunk MVB

Setlist:
Set 1: Playin' in the Band, Cold Rain & Snow, Tennessee Jed, Feel Like A Stranger, He's Gone>BirdSong>Music Never Stopped.
Set 2: Lost Sailor> Saint of Circumstance, Help on the Way>Slipknot, Franklin's Tower, Drums>Space>The Other One>Stella Blue>Not Fade Away.
Encore: Touch of Grey"
   canPlay = True
 })
2018-03-02 18:58:46,345 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:46,346 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 24 UpdateTestContent test_combinatorial_get_test_content_63385284383340697163958905092269893637
2018-03-02 18:58:46,346 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:46,346 [INFO] SONOS.sonos.workflow.result - End *test iteration* 22 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:46,347 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:46,347 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 23 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:46,347 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Show:dead-and-co:2015:2015-10-29:72307, 0, 10000, None)
2018-03-02 18:58:46,349 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Show:dead-and-co:2015:2015-10-29:72307</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:46,350 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:47,738 [DEBUG] SONOS.suds.client - waited 1.387 (seconds) on server reply
2018-03-02 18:58:47,745 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>18</count>
            <total>18</total>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492689</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29i 01_ Playin&apos; 16:22</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>982</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492690</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29i 02_ Cold Rain and Snow 7:44</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>464</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492691</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29i 03_ Tenn Jed 10:14</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>614</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492692</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29i 04_ Stranger_ 13:29</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>809</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492693</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29i 05_ He&apos;s Gone 10:46</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>646</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492694</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29i 06_ Bird Song 15:56</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>956</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492695</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29i 07_ Music Never Stopped 9:58</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>598</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492696</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 08_ Intro_ Tunning 1:47</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>107</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492697</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 09_ Lost Sailor 8:26</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>506</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492698</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 10_ Saint of Circumstance 10:09</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>609</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492699</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 11_ Help on The Way_Slipknot 11:48</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>708</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492700</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 12_ Franklin&apos;s Tower 9:57</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>597</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492701</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 13_ Drums 12:58</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>778</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492702</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 14_ Space_ 3:18</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>198</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492703</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 15_ The Othe One 14:08</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>848</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492704</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 16_ Stella Blue 8:57</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>537</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492705</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 17_ Not Fade Away 11:26</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>686</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:dead-and-co:2015:2015-10-29:72307:1492706</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dead&amp;Co2015-10-29ii 18_ E_ Touch of Grey 8:08</title>
               <trackMetadata>
                  <albumId>Show:dead-and-co:2015:2015-10-29:72307</albumId>
                  <duration>488</duration>
                  <artistId>Artist:dead-and-co</artistId>
                  <artist>Dead and Company</artist>
                  <album>10/29/15 – Times Union Center – Albany, New York</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:47,781 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,782 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 25 UpdateTestContent test_combinatorial_get_test_content_338269431444959801093014569340797037948 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72307:1492689"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Dead&Co2015-10-29i 01_ Playin' 16:22"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72307"
         duration = 982
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:47,782 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:47,782 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 25 UpdateTestContent test_combinatorial_get_test_content_338269431444959801093014569340797037948
2018-03-02 18:58:47,782 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,782 [INFO] SONOS.sonos.workflow.result - End *test iteration* 23 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,782 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:47,783 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 24 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,783 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,783 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 26 UpdateTestContent test_combinatorial_get_test_content_85072297638425199321416527685676443612 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72307:1492690"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Dead&Co2015-10-29i 02_ Cold Rain and Snow 7:44"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72307"
         duration = 464
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:47,783 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:47,784 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 26 UpdateTestContent test_combinatorial_get_test_content_85072297638425199321416527685676443612
2018-03-02 18:58:47,784 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,784 [INFO] SONOS.sonos.workflow.result - End *test iteration* 24 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,784 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:47,784 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 25 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,784 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,785 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 27 UpdateTestContent test_combinatorial_get_test_content_225814108656134332511464589562845991088 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72307:1492691"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Dead&Co2015-10-29i 03_ Tenn Jed 10:14"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72307"
         duration = 614
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:47,785 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:47,785 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 27 UpdateTestContent test_combinatorial_get_test_content_225814108656134332511464589562845991088
2018-03-02 18:58:47,785 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,785 [INFO] SONOS.sonos.workflow.result - End *test iteration* 25 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,785 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:47,785 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 26 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,786 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,786 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 28 UpdateTestContent test_combinatorial_get_test_content_185893797858714866260181089191769303397 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72307:1492692"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Dead&Co2015-10-29i 04_ Stranger_ 13:29"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72307"
         duration = 809
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:47,786 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:47,786 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 28 UpdateTestContent test_combinatorial_get_test_content_185893797858714866260181089191769303397
2018-03-02 18:58:47,786 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,787 [INFO] SONOS.sonos.workflow.result - End *test iteration* 26 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,787 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:47,787 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 27 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,787 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,787 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 29 UpdateTestContent test_combinatorial_get_test_content_245725010191771281554203542873189810981 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72307:1492693"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Dead&Co2015-10-29i 05_ He's Gone 10:46"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72307"
         duration = 646
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:47,787 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:47,788 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 29 UpdateTestContent test_combinatorial_get_test_content_245725010191771281554203542873189810981
2018-03-02 18:58:47,788 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,788 [INFO] SONOS.sonos.workflow.result - End *test iteration* 27 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,788 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:47,788 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 28 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,788 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,789 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 30 UpdateTestContent test_combinatorial_get_test_content_339194505452506120371743826099701374441 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72307:1492694"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Dead&Co2015-10-29i 06_ Bird Song 15:56"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72307"
         duration = 956
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:47,789 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:47,789 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 30 UpdateTestContent test_combinatorial_get_test_content_339194505452506120371743826099701374441
2018-03-02 18:58:47,789 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,789 [INFO] SONOS.sonos.workflow.result - End *test iteration* 28 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,790 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:47,790 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 29 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,790 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,790 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - Test Case: 31 UpdateTestContent test_combinatorial_get_test_content_327427603181285371912040581075589572952 (mediaMetadata){
   id = "Track:dead-and-co:2015:2015-10-29:72307:1492695"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Dead&Co2015-10-29i 07_ Music Never Stopped 9:58"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:dead-and-co:2015:2015-10-29:72307"
         duration = 598
         artistId = "Artist:dead-and-co"
         artist = "Dead and Company"
         album = "10/29/15 – Times Union Center – Albany, New York"
      }
 })
2018-03-02 18:58:47,790 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - No test content needs updating. (expression is False)
2018-03-02 18:58:47,791 [SKIP] SONOS.sonos.workflow.fixture.UpdateTestContent - 31 UpdateTestContent test_combinatorial_get_test_content_327427603181285371912040581075589572952
2018-03-02 18:58:47,791 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,791 [INFO] SONOS.sonos.workflow.result - End *test iteration* 29 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,791 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:47,791 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 30 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,792 [INFO] SONOS.sonos.workflow.fixture.UpdateTestContent - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,792 [INFO] SONOS.sonos.workflow.result - End *test iteration* 30 of test case test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:47,792 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_get_test_content at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:47,793 [INFO] SONOS.sonos.workflow.result - End *test fixture* UpdateTestContent at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,793 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:47,793 [INFO] SONOS.sonos.workflow.result - Start *test fixture* SMAPIMethodValidation at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:47,793 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:47,793 [INFO] SONOS.sonos.workflow.result - Start *test case* test_createitem at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,793 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,793 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Start Test Case: 34 SMAPIMethodValidation test_createitem
2018-03-02 18:58:47,794 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Service must support adding/removing favorites tracks and/or albums and/or artists([Capabilities]:favoritesTracks/favoritesAlbums/favoritesArtists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:47,794 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - 34 SMAPIMethodValidation test_createitem
2018-03-02 18:58:47,794 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,794 [INFO] SONOS.sonos.workflow.result - End *test case* test_createitem at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,794 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:47,794 [INFO] SONOS.sonos.workflow.result - Start *test case* test_deleteitem at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,794 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,795 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Start Test Case: 35 SMAPIMethodValidation test_deleteitem
2018-03-02 18:58:47,795 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Service must support adding/removing favorites tracks and/or albums and/or artists([Capabilities]:favoritesTracks/favoritesAlbums/favoritesArtists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:47,795 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - 35 SMAPIMethodValidation test_deleteitem
2018-03-02 18:58:47,795 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,795 [INFO] SONOS.sonos.workflow.result - End *test case* test_deleteitem at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:47,795 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:47,795 [INFO] SONOS.sonos.workflow.result - Start *test case* test_getlastupdate at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:47,795 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:47,796 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Start Test Case: 36 SMAPIMethodValidation test_getlastupdate
2018-03-02 18:58:47,796 [DEBUG] SONOS.sonos.smapi.smapiclient - getLastUpdate()
2018-03-02 18:58:47,797 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getLastUpdate/>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:47,797 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getLastUpdate"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:48,324 [DEBUG] SONOS.suds.client - waited 526 (ms) on server reply
2018-03-02 18:58:48,325 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getLastUpdateResponse xmlns="http://www.sonos.com/Services/1.1">
         <getLastUpdateResult>
            <favorites>0</favorites>
            <catalog>0</catalog>
            <pollInterval>60</pollInterval>
         </getLastUpdateResult>
      </getLastUpdateResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:48,328 [PASS] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - getLastUpdate should return something other than None. ((lastUpdate){
   favorites = "0"
   catalog = "0"
   pollInterval = 60
   timer = 526 (ms)
 } is not None)
2018-03-02 18:58:48,328 [PASS] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - 36 SMAPIMethodValidation test_getlastupdate
2018-03-02 18:58:48,328 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:48,328 [INFO] SONOS.sonos.workflow.result - End *test case* test_getlastupdate at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:48,329 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:48,329 [INFO] SONOS.sonos.workflow.result - Start *test case* test_getmediametadata at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:48,329 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:48,329 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Start Test Case: 37 SMAPIMethodValidation test_getmediametadata
2018-03-02 18:58:48,329 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Service must provide a valid track ID and/or stream ID ([Test Content]:track/stream in the config file) for this test to run. (expression is False)
2018-03-02 18:58:48,329 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - 37 SMAPIMethodValidation test_getmediametadata
2018-03-02 18:58:48,330 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:48,330 [INFO] SONOS.sonos.workflow.result - End *test case* test_getmediametadata at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:48,330 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:48,330 [INFO] SONOS.sonos.workflow.result - Start *test case* test_getmetadata at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:48,330 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:48,330 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Start Test Case: 38 SMAPIMethodValidation test_getmetadata
2018-03-02 18:58:48,331 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 18:58:48,333 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:48,333 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:49,324 [DEBUG] SONOS.suds.client - waited 990 (ms) on server reply
2018-03-02 18:58:49,346 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:49,523 [PASS] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - getMetadata(root) should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 990 (ms)
 } is not None)
2018-03-02 18:58:49,523 [PASS] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - getMetadata should return a 'count' value smaller than or equal to the requested 'count' value. (expression is True)
2018-03-02 18:58:49,523 [PASS] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - getMetadata should return an 'index' value equal to the requested 'index' value. (expression is True)
2018-03-02 18:58:49,523 [PASS] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - 38 SMAPIMethodValidation test_getmetadata
2018-03-02 18:58:49,523 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:49,523 [INFO] SONOS.sonos.workflow.result - End *test case* test_getmetadata at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:49,524 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:49,524 [INFO] SONOS.sonos.workflow.result - Start *test case* test_getsessionid at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:49,524 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:49,524 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Start Test Case: 39 SMAPIMethodValidation test_getsessionid
2018-03-02 18:58:49,524 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Service must use session ID authentication ([Authentication Type]:sessionID in the config file) for this test to run. (expression is False)
2018-03-02 18:58:49,524 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - 39 SMAPIMethodValidation test_getsessionid
2018-03-02 18:58:49,525 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:49,525 [INFO] SONOS.sonos.workflow.result - End *test case* test_getsessionid at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:49,525 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:49,525 [INFO] SONOS.sonos.workflow.result - Start *test case* test_rateitem at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:49,525 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:49,525 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Start Test Case: 40 SMAPIMethodValidation test_rateitem
2018-03-02 18:58:50,480 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Service must support Ratings for this testto run. (expression is False)
2018-03-02 18:58:50,480 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - 40 SMAPIMethodValidation test_rateitem
2018-03-02 18:58:50,480 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,480 [INFO] SONOS.sonos.workflow.result - End *test case* test_rateitem at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,480 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,480 [INFO] SONOS.sonos.workflow.result - Start *test case* test_search at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,480 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,481 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Start Test Case: 41 SMAPIMethodValidation test_search
2018-03-02 18:58:50,481 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,481 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - 41 SMAPIMethodValidation test_search
2018-03-02 18:58:50,481 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,481 [INFO] SONOS.sonos.workflow.result - End *test case* test_search at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,482 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,482 [INFO] SONOS.sonos.workflow.result - Start *test case* test_setplayedseconds at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,482 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,482 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Start Test Case: 42 SMAPIMethodValidation test_setplayedseconds
2018-03-02 18:58:50,482 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - Service must provide a valid track ID ([Test Content]:track in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,482 [SKIP] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - 42 SMAPIMethodValidation test_setplayedseconds
2018-03-02 18:58:50,483 [INFO] SONOS.sonos.workflow.fixture.SMAPIMethodValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,483 [INFO] SONOS.sonos.workflow.result - End *test case* test_setplayedseconds at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,483 [INFO] SONOS.sonos.workflow.result - End *test fixture* SMAPIMethodValidation at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,483 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:50,483 [INFO] SONOS.sonos.workflow.result - Start *test fixture* CreatePlaylist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,483 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,483 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_create_playlist_in_folder_with_seed at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,484 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,484 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_create_playlist_in_folder_with_seed at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,484 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,484 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - Test Case: 76 CreatePlaylist test_combinatorial_create_playlist_in_folder_with_seed_231875841406471188684628014653110133315 (u'self.smapiservice.get_test_track_id()', u'self.smapiservice.get_search_term_track()', u'track'))
2018-03-02 18:58:50,484 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,484 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - 76 CreatePlaylist test_combinatorial_create_playlist_in_folder_with_seed_231875841406471188684628014653110133315
2018-03-02 18:58:50,485 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,485 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_create_playlist_in_folder_with_seed at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,485 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,485 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_create_playlist_in_folder_with_seed at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,485 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,485 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - Test Case: 77 CreatePlaylist test_combinatorial_create_playlist_in_folder_with_seed_74690823491100721475079917764657004479 (u'self.smapiservice.get_test_album_id()', u'self.smapiservice.get_search_term_album()', u'artist'))
2018-03-02 18:58:50,486 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,486 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - 77 CreatePlaylist test_combinatorial_create_playlist_in_folder_with_seed_74690823491100721475079917764657004479
2018-03-02 18:58:50,486 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,486 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_create_playlist_in_folder_with_seed at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,486 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,486 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_create_playlist_in_folder_with_seed at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,486 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,486 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_create_playlist_in_folder_with_seed at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,486 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_create_playlist_in_folder_with_seed at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,487 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,487 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_create_playlist_with_seed at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,487 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,487 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_create_playlist_with_seed at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,487 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,487 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - Test Case: 79 CreatePlaylist test_combinatorial_create_playlist_with_seed_231875841406471188684628014653110133315 (u'self.smapiservice.get_test_track_id()', u'self.smapiservice.get_search_term_track()', u'track'))
2018-03-02 18:58:50,488 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,488 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - 79 CreatePlaylist test_combinatorial_create_playlist_with_seed_231875841406471188684628014653110133315
2018-03-02 18:58:50,488 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,488 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_create_playlist_with_seed at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,488 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,488 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_create_playlist_with_seed at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,488 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,489 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - Test Case: 80 CreatePlaylist test_combinatorial_create_playlist_with_seed_74690823491100721475079917764657004479 (u'self.smapiservice.get_test_album_id()', u'self.smapiservice.get_search_term_album()', u'artist'))
2018-03-02 18:58:50,489 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,489 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - 80 CreatePlaylist test_combinatorial_create_playlist_with_seed_74690823491100721475079917764657004479
2018-03-02 18:58:50,489 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,489 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_create_playlist_with_seed at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,489 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,489 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_create_playlist_with_seed at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,490 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,490 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_create_playlist_with_seed at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,490 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_create_playlist_with_seed at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,490 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,490 [INFO] SONOS.sonos.workflow.result - Start *test case* test_create_empty_playlist_in_folder at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,490 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,490 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - Start Test Case: 82 CreatePlaylist test_create_empty_playlist_in_folder
2018-03-02 18:58:50,490 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,491 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - 82 CreatePlaylist test_create_empty_playlist_in_folder
2018-03-02 18:58:50,491 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,491 [INFO] SONOS.sonos.workflow.result - End *test case* test_create_empty_playlist_in_folder at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,491 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,491 [INFO] SONOS.sonos.workflow.result - Start *test case* test_create_empty_playlist_in_nonexisting_folder at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,491 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,491 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - Start Test Case: 83 CreatePlaylist test_create_empty_playlist_in_nonexisting_folder
2018-03-02 18:58:50,491 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,492 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - 83 CreatePlaylist test_create_empty_playlist_in_nonexisting_folder
2018-03-02 18:58:50,492 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,492 [INFO] SONOS.sonos.workflow.result - End *test case* test_create_empty_playlist_in_nonexisting_folder at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,492 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,492 [INFO] SONOS.sonos.workflow.result - Start *test case* test_create_empty_playlist_with_invalid_name at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,492 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,492 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - Start Test Case: 84 CreatePlaylist test_create_empty_playlist_with_invalid_name
2018-03-02 18:58:50,492 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,493 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - 84 CreatePlaylist test_create_empty_playlist_with_invalid_name
2018-03-02 18:58:50,493 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,493 [INFO] SONOS.sonos.workflow.result - End *test case* test_create_empty_playlist_with_invalid_name at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,493 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,493 [INFO] SONOS.sonos.workflow.result - Start *test case* test_create_empty_root_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,493 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,493 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - Start Test Case: 85 CreatePlaylist test_create_empty_root_playlist
2018-03-02 18:58:50,493 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,493 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - 85 CreatePlaylist test_create_empty_root_playlist
2018-03-02 18:58:50,494 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,494 [INFO] SONOS.sonos.workflow.result - End *test case* test_create_empty_root_playlist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,494 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,494 [INFO] SONOS.sonos.workflow.result - Start *test case* test_create_playlist_with_seed_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,494 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,494 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - Start Test Case: 86 CreatePlaylist test_create_playlist_with_seed_playlist
2018-03-02 18:58:50,494 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,494 [SKIP] SONOS.sonos.workflow.fixture.CreatePlaylist - 86 CreatePlaylist test_create_playlist_with_seed_playlist
2018-03-02 18:58:50,495 [INFO] SONOS.sonos.workflow.fixture.CreatePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,495 [INFO] SONOS.sonos.workflow.result - End *test case* test_create_playlist_with_seed_playlist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,495 [INFO] SONOS.sonos.workflow.result - End *test fixture* CreatePlaylist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,495 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:50,495 [INFO] SONOS.sonos.workflow.result - Start *test fixture* DeletePlaylist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,495 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,495 [INFO] SONOS.sonos.workflow.result - Start *test case* test_properties_for_not_deletable_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,495 [INFO] SONOS.sonos.workflow.fixture.DeletePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,496 [INFO] SONOS.sonos.workflow.fixture.DeletePlaylist - Start Test Case: 162 DeletePlaylist test_properties_for_not_deletable_playlist
2018-03-02 18:58:50,496 [SKIP] SONOS.sonos.workflow.fixture.DeletePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,496 [SKIP] SONOS.sonos.workflow.fixture.DeletePlaylist - 162 DeletePlaylist test_properties_for_not_deletable_playlist
2018-03-02 18:58:50,496 [INFO] SONOS.sonos.workflow.fixture.DeletePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,496 [INFO] SONOS.sonos.workflow.result - End *test case* test_properties_for_not_deletable_playlist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,496 [INFO] SONOS.sonos.workflow.result - End *test fixture* DeletePlaylist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,497 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:50,497 [INFO] SONOS.sonos.workflow.result - Start *test fixture* RenamePlaylist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,497 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,497 [INFO] SONOS.sonos.workflow.result - Start *test case* test_rename_non_editable_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,497 [INFO] SONOS.sonos.workflow.fixture.RenamePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,497 [INFO] SONOS.sonos.workflow.fixture.RenamePlaylist - Start Test Case: 324 RenamePlaylist test_rename_non_editable_playlist
2018-03-02 18:58:50,497 [SKIP] SONOS.sonos.workflow.fixture.RenamePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,498 [SKIP] SONOS.sonos.workflow.fixture.RenamePlaylist - 324 RenamePlaylist test_rename_non_editable_playlist
2018-03-02 18:58:50,498 [INFO] SONOS.sonos.workflow.fixture.RenamePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,498 [INFO] SONOS.sonos.workflow.result - End *test case* test_rename_non_editable_playlist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,498 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,498 [INFO] SONOS.sonos.workflow.result - Start *test case* test_rename_playlist_to_invalidname at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,498 [INFO] SONOS.sonos.workflow.fixture.RenamePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,498 [INFO] SONOS.sonos.workflow.fixture.RenamePlaylist - Start Test Case: 325 RenamePlaylist test_rename_playlist_to_invalidname
2018-03-02 18:58:50,498 [SKIP] SONOS.sonos.workflow.fixture.RenamePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,499 [SKIP] SONOS.sonos.workflow.fixture.RenamePlaylist - 325 RenamePlaylist test_rename_playlist_to_invalidname
2018-03-02 18:58:50,499 [INFO] SONOS.sonos.workflow.fixture.RenamePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,499 [INFO] SONOS.sonos.workflow.result - End *test case* test_rename_playlist_to_invalidname at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,499 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,499 [INFO] SONOS.sonos.workflow.result - Start *test case* test_rename_playlist_to_validname at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,499 [INFO] SONOS.sonos.workflow.fixture.RenamePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,499 [INFO] SONOS.sonos.workflow.fixture.RenamePlaylist - Start Test Case: 326 RenamePlaylist test_rename_playlist_to_validname
2018-03-02 18:58:50,499 [SKIP] SONOS.sonos.workflow.fixture.RenamePlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,499 [SKIP] SONOS.sonos.workflow.fixture.RenamePlaylist - 326 RenamePlaylist test_rename_playlist_to_validname
2018-03-02 18:58:50,500 [INFO] SONOS.sonos.workflow.fixture.RenamePlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,500 [INFO] SONOS.sonos.workflow.result - End *test case* test_rename_playlist_to_validname at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,500 [INFO] SONOS.sonos.workflow.result - End *test fixture* RenamePlaylist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,500 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:50,500 [INFO] SONOS.sonos.workflow.result - Start *test fixture* AddToPlaylist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,500 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,500 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,501 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,501 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,501 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,501 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - Test Case: 650 AddToPlaylist test_combinatorial_add_content_to_playlist_78803141948148221689497143233259330283 (u'self.smapiservice.get_test_track_id()', u'track'))
2018-03-02 18:58:50,501 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,501 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - 650 AddToPlaylist test_combinatorial_add_content_to_playlist_78803141948148221689497143233259330283
2018-03-02 18:58:50,501 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,501 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,502 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,502 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,502 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,502 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - Test Case: 651 AddToPlaylist test_combinatorial_add_content_to_playlist_92681499919455952973129434357727117034 (u'self.smapiservice.get_test_album_id()', u'album'))
2018-03-02 18:58:50,502 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,502 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - 651 AddToPlaylist test_combinatorial_add_content_to_playlist_92681499919455952973129434357727117034
2018-03-02 18:58:50,502 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,502 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,503 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,503 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,503 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,529 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - Test Case: 652 AddToPlaylist test_combinatorial_add_content_to_playlist_217199673987649500830907331948014778782 (u'playlist', u'playlist'))
2018-03-02 18:58:50,529 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,529 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - 652 AddToPlaylist test_combinatorial_add_content_to_playlist_217199673987649500830907331948014778782
2018-03-02 18:58:50,529 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,530 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,530 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,530 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,530 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,530 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,530 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_add_content_to_playlist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,530 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,530 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,531 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,531 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,531 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,531 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - Test Case: 654 AddToPlaylist test_combinatorial_cannot_add_content_to_noneditable_playlist_78803141948148221689497143233259330283 (u'self.smapiservice.get_test_track_id()', u'track'))
2018-03-02 18:58:50,531 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,531 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - 654 AddToPlaylist test_combinatorial_cannot_add_content_to_noneditable_playlist_78803141948148221689497143233259330283
2018-03-02 18:58:50,532 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,532 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,532 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,532 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,532 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,532 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - Test Case: 655 AddToPlaylist test_combinatorial_cannot_add_content_to_noneditable_playlist_92681499919455952973129434357727117034 (u'self.smapiservice.get_test_album_id()', u'album'))
2018-03-02 18:58:50,532 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,532 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - 655 AddToPlaylist test_combinatorial_cannot_add_content_to_noneditable_playlist_92681499919455952973129434357727117034
2018-03-02 18:58:50,533 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,533 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,533 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,533 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,533 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,533 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - Test Case: 656 AddToPlaylist test_combinatorial_cannot_add_content_to_noneditable_playlist_217199673987649500830907331948014778782 (u'playlist', u'playlist'))
2018-03-02 18:58:50,533 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,534 [SKIP] SONOS.sonos.workflow.fixture.AddToPlaylist - 656 AddToPlaylist test_combinatorial_cannot_add_content_to_noneditable_playlist_217199673987649500830907331948014778782
2018-03-02 18:58:50,534 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,534 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,534 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,534 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,534 [INFO] SONOS.sonos.workflow.fixture.AddToPlaylist - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,534 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,534 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_cannot_add_content_to_noneditable_playlist at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,535 [INFO] SONOS.sonos.workflow.result - End *test fixture* AddToPlaylist at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,535 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:50,535 [INFO] SONOS.sonos.workflow.result - Start *test fixture* ReorderPlaylistContainer at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,535 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,535 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,535 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,535 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,535 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,536 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1307 ReorderPlaylistContainer test_combinatorial_can_move_tracks_123815105787715806173406836448580219111 (u'0,1,2', u'END', u'UP', u'Can move contiguous tracks to the end of an existing playlist'))
2018-03-02 18:58:50,536 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,536 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1307 ReorderPlaylistContainer test_combinatorial_can_move_tracks_123815105787715806173406836448580219111
2018-03-02 18:58:50,536 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,536 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,536 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,536 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,536 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,537 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1308 ReorderPlaylistContainer test_combinatorial_can_move_tracks_257867091715467498001275013981620705500 (u'0,4', u'END', u'UP', u'Can move discontiguous tracks to the end of an existing playlist'))
2018-03-02 18:58:50,537 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,537 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1308 ReorderPlaylistContainer test_combinatorial_can_move_tracks_257867091715467498001275013981620705500
2018-03-02 18:58:50,537 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,537 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,537 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,537 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,537 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,538 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1309 ReorderPlaylistContainer test_combinatorial_can_move_tracks_217538751555170306116123116766739804815 (u'6,7,8', u'0', u'DOWN', u'Can move contiguous tracks to beginning of an existing playlist'))
2018-03-02 18:58:50,538 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,538 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1309 ReorderPlaylistContainer test_combinatorial_can_move_tracks_217538751555170306116123116766739804815
2018-03-02 18:58:50,538 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,538 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,538 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,538 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,539 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,539 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1310 ReorderPlaylistContainer test_combinatorial_can_move_tracks_301136521442178991188764502148437687674 (u'5,9', u'0', u'DOWN', u'Can move discontiguous tracks to the beginning of an existing playlist'))
2018-03-02 18:58:50,539 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,539 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1310 ReorderPlaylistContainer test_combinatorial_can_move_tracks_301136521442178991188764502148437687674
2018-03-02 18:58:50,539 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,539 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,540 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,540 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,540 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,540 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1311 ReorderPlaylistContainer test_combinatorial_can_move_tracks_166241789251193602764331413776439152740 (u'2,3', u'', u'DOWN', u'Can move tracks to the beginning of an existing playlist with an empty TO location'))
2018-03-02 18:58:50,540 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,540 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1311 ReorderPlaylistContainer test_combinatorial_can_move_tracks_166241789251193602764331413776439152740
2018-03-02 18:58:50,540 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,541 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,541 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,541 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,541 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,541 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1312 ReorderPlaylistContainer test_combinatorial_can_move_tracks_190327261525867372678990451106171322154 (u'5,6,7', 4, u'DOWN', u'Can move contiguous tracks to the middle of an existing playlist'))
2018-03-02 18:58:50,541 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,541 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1312 ReorderPlaylistContainer test_combinatorial_can_move_tracks_190327261525867372678990451106171322154
2018-03-02 18:58:50,541 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,542 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,542 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,542 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,542 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,542 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1313 ReorderPlaylistContainer test_combinatorial_can_move_tracks_92701258397780261026621721013681637114 (u'6,7', 8, u'UP', u'Can move contiguous tracks to the middle of an existing playlist'))
2018-03-02 18:58:50,542 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,542 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1313 ReorderPlaylistContainer test_combinatorial_can_move_tracks_92701258397780261026621721013681637114
2018-03-02 18:58:50,543 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,543 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,543 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,543 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,543 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,543 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1314 ReorderPlaylistContainer test_combinatorial_can_move_tracks_248728061713560243005958170034649575344 (u'5,7,9', 4, u'DOWN', u'Can move discontiguous tracks to the middle of an existing playlist'))
2018-03-02 18:58:50,543 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,543 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1314 ReorderPlaylistContainer test_combinatorial_can_move_tracks_248728061713560243005958170034649575344
2018-03-02 18:58:50,544 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,544 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,544 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,544 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,544 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,544 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1315 ReorderPlaylistContainer test_combinatorial_can_move_tracks_227314661117508811775164643929849416373 (u'5,7,9', 10, u'UP', u'Can move discontiguous tracks to the end of an existing playlist'))
2018-03-02 18:58:50,544 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,544 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1315 ReorderPlaylistContainer test_combinatorial_can_move_tracks_227314661117508811775164643929849416373
2018-03-02 18:58:50,545 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,545 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,545 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,545 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,545 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,545 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1316 ReorderPlaylistContainer test_combinatorial_can_move_tracks_178433578387948936236008591984179918727 (u'0-2,4', 6, u'UP', u'Can move combo of ranges and individual tracks to the middle of an existing playlist'))
2018-03-02 18:58:50,545 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,545 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1316 ReorderPlaylistContainer test_combinatorial_can_move_tracks_178433578387948936236008591984179918727
2018-03-02 18:58:50,546 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,546 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,546 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,546 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,546 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,546 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1317 ReorderPlaylistContainer test_combinatorial_can_move_tracks_52549789401627678575979862339835764472 (u'1,3-5', 6, u'UP', u'Can move combo of ranges and individual tracks to the middle of an existing playlist'))
2018-03-02 18:58:50,546 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,546 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1317 ReorderPlaylistContainer test_combinatorial_can_move_tracks_52549789401627678575979862339835764472
2018-03-02 18:58:50,547 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,547 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,547 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,547 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 11 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,547 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,547 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1318 ReorderPlaylistContainer test_combinatorial_can_move_tracks_7329268808020993467895662382473902579 (u'0-2,4-6', u'END', u'UP', u'Can move combo of ranges and individual tracks to the end of an existing playlist'))
2018-03-02 18:58:50,547 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,548 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1318 ReorderPlaylistContainer test_combinatorial_can_move_tracks_7329268808020993467895662382473902579
2018-03-02 18:58:50,548 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,548 [INFO] SONOS.sonos.workflow.result - End *test iteration* 11 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,548 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,548 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 12 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,548 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,548 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1319 ReorderPlaylistContainer test_combinatorial_can_move_tracks_174233127971397934326551509135062850406 (u'2-4,5-7', u'', u'DOWN', u'Can move combo of ranges and individual tracks to the beginning of an existing playlist'))
2018-03-02 18:58:50,549 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,549 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1319 ReorderPlaylistContainer test_combinatorial_can_move_tracks_174233127971397934326551509135062850406
2018-03-02 18:58:50,549 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,549 [INFO] SONOS.sonos.workflow.result - End *test iteration* 12 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,549 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,549 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 13 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,549 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,549 [INFO] SONOS.sonos.workflow.result - End *test iteration* 13 of test case test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,550 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_can_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,550 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:50,550 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,550 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,550 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,550 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,550 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1321 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_309398607997526809828234010384898174253 (u'0,1,2', u'PASTEND', u'Cannot move tracks past the end of an existing playlist'))
2018-03-02 18:58:50,551 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,551 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1321 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_309398607997526809828234010384898174253
2018-03-02 18:58:50,551 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,551 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,551 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,551 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,551 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,551 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1322 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_47731222299493752925301566217031627005 (u'6,7,8', u'BEFORESTART', u'Cannot move tracks before the beginning of an existing playlist'))
2018-03-02 18:58:50,552 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,552 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1322 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_47731222299493752925301566217031627005
2018-03-02 18:58:50,552 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,552 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,552 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,552 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,552 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,553 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1323 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_92286202966071461810354591258237179634 (u'', u'5', u'Cannot move tracks in an existing playlist with empty indices'))
2018-03-02 18:58:50,553 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,553 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1323 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_92286202966071461810354591258237179634
2018-03-02 18:58:50,553 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,553 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,553 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,553 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,554 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,554 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1324 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_140924730606268537765776842945276245251 (u'-3', u'6', u'Cannot move tracks in an existing playlist with invalid indices'))
2018-03-02 18:58:50,554 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,554 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1324 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_140924730606268537765776842945276245251
2018-03-02 18:58:50,554 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,554 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,554 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,555 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,555 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,555 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1325 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_301096672733174262710814826501671530713 (u'1,4-9,5-10', u'3', u'Cannot move tracks in an existing playlist with overlapping indices'))
2018-03-02 18:58:50,555 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,555 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1325 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_301096672733174262710814826501671530713
2018-03-02 18:58:50,555 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,555 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,556 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,556 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,556 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,556 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1326 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_146604112781483576722803204880526645386 (u'a,b-c', u'4', u'Cannot move tracks in an existing playlist with alpha indices'))
2018-03-02 18:58:50,556 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,556 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1326 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_146604112781483576722803204880526645386
2018-03-02 18:58:50,556 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,557 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,557 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,557 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,557 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,557 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1327 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_223407869629675306902358175214567897889 (u'4,5', u'NOTMINE', u'Cannot move tracks in a playlist that is not owned by user'))
2018-03-02 18:58:50,557 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,557 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1327 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_223407869629675306902358175214567897889
2018-03-02 18:58:50,557 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,558 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,558 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,558 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,558 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,558 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Test Case: 1328 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_105323776750449159915765541006635459884 (u'2,3', u'NOTPLAYLIST', u"Cannot move tracks in something that isn't a playlist"))
2018-03-02 18:58:50,558 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - Service must support user content playlists ([Capabilities]:usercontentPlaylists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:50,558 [SKIP] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - 1328 ReorderPlaylistContainer test_combinatorial_cannot_move_tracks_105323776750449159915765541006635459884
2018-03-02 18:58:50,559 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,559 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,559 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:50,559 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:50,559 [INFO] SONOS.sonos.workflow.fixture.ReorderPlaylistContainer - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:50,559 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,559 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_cannot_move_tracks at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:50,559 [INFO] SONOS.sonos.workflow.result - End *test fixture* ReorderPlaylistContainer at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:50,559 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:50,560 [INFO] SONOS.sonos.workflow.result - Start *test fixture* Albumart at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:51,182 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:51,182 [INFO] SONOS.sonos.workflow.result - Start *test case* test_custom_browse_icon_configuration at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:51,182 [INFO] SONOS.sonos.workflow.fixture.Albumart - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:51,182 [INFO] SONOS.sonos.workflow.fixture.Albumart - Start Test Case: 2636 Albumart test_custom_browse_icon_configuration
2018-03-02 18:58:54,180 [SKIP] SONOS.sonos.workflow.fixture.Albumart - Image substitution rules for custom browse icons should be found in the presentation map file. (expression is False)
2018-03-02 18:58:54,180 [SKIP] SONOS.sonos.workflow.fixture.Albumart - 2636 Albumart test_custom_browse_icon_configuration
2018-03-02 18:58:54,180 [INFO] SONOS.sonos.workflow.fixture.Albumart - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:54,180 [INFO] SONOS.sonos.workflow.result - End *test case* test_custom_browse_icon_configuration at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:54,181 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:54,181 [INFO] SONOS.sonos.workflow.result - Start *test case* test_custom_browse_icon_schema at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:54,181 [INFO] SONOS.sonos.workflow.fixture.Albumart - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:54,181 [INFO] SONOS.sonos.workflow.fixture.Albumart - Start Test Case: 2637 Albumart test_custom_browse_icon_schema
2018-03-02 18:58:55,933 [WARN] SONOS.sonos.workflow.fixture.Albumart - Cannot find node with XPath .//PresentationMap[@type='BrowseIconSizeMap'] in Presentation Map
2018-03-02 18:58:55,933 [SKIP] SONOS.sonos.workflow.fixture.Albumart - Cannot find node with XPath .//PresentationMap[@type='BrowseIconSizeMap'] in Presentation Map
2018-03-02 18:58:55,933 [SKIP] SONOS.sonos.workflow.fixture.Albumart - 2637 Albumart test_custom_browse_icon_schema
2018-03-02 18:58:55,934 [INFO] SONOS.sonos.workflow.fixture.Albumart - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:55,934 [INFO] SONOS.sonos.workflow.result - End *test case* test_custom_browse_icon_schema at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:55,934 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:55,934 [INFO] SONOS.sonos.workflow.result - Start *test case* test_hi_res_album_art_configuration at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:55,934 [INFO] SONOS.sonos.workflow.fixture.Albumart - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:55,934 [INFO] SONOS.sonos.workflow.fixture.Albumart - Start Test Case: 2638 Albumart test_hi_res_album_art_configuration
2018-03-02 18:58:56,181 [SKIP] SONOS.sonos.workflow.fixture.Albumart - Image substitution rules for album art should be found in the presentation map file. (expression is False)
2018-03-02 18:58:56,181 [SKIP] SONOS.sonos.workflow.fixture.Albumart - 2638 Albumart test_hi_res_album_art_configuration
2018-03-02 18:58:56,181 [INFO] SONOS.sonos.workflow.fixture.Albumart - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,181 [INFO] SONOS.sonos.workflow.result - End *test case* test_hi_res_album_art_configuration at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,182 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:56,182 [INFO] SONOS.sonos.workflow.result - Start *test case* test_token_inside_substitution at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,182 [INFO] SONOS.sonos.workflow.fixture.Albumart - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,182 [INFO] SONOS.sonos.workflow.fixture.Albumart - Start Test Case: 2639 Albumart test_token_inside_substitution
2018-03-02 18:58:56,420 [WARN] SONOS.sonos.workflow.fixture.Albumart - Image substitution rules for album art should be found in the presentation map file. (expression is False)
2018-03-02 18:58:56,421 [SKIP] SONOS.sonos.workflow.fixture.Albumart - Image substitution rules for album art should be found in the presentation map file. (expression is False)
2018-03-02 18:58:56,421 [SKIP] SONOS.sonos.workflow.fixture.Albumart - 2639 Albumart test_token_inside_substitution
2018-03-02 18:58:56,421 [INFO] SONOS.sonos.workflow.fixture.Albumart - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,421 [INFO] SONOS.sonos.workflow.result - End *test case* test_token_inside_substitution at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,422 [INFO] SONOS.sonos.workflow.result - End *test fixture* Albumart at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,422 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:56,422 [INFO] SONOS.sonos.workflow.result - Start *test fixture* Ratings at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,422 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:56,422 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_all_ratings at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,423 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:56,423 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_all_ratings at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,658 [INFO] SONOS.sonos.workflow.fixture.Ratings - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,658 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_all_ratings at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,659 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_all_ratings at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,659 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:56,659 [INFO] SONOS.sonos.workflow.result - Start *test case* test_meta_data at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,660 [INFO] SONOS.sonos.workflow.fixture.Ratings - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,660 [INFO] SONOS.sonos.workflow.fixture.Ratings - Start Test Case: 5276 Ratings test_meta_data
2018-03-02 18:58:56,660 [SKIP] SONOS.sonos.workflow.fixture.Ratings - Service must support Ratings for this test to run. (expression is False)
2018-03-02 18:58:56,660 [SKIP] SONOS.sonos.workflow.fixture.Ratings - 5276 Ratings test_meta_data
2018-03-02 18:58:56,661 [INFO] SONOS.sonos.workflow.fixture.Ratings - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,661 [INFO] SONOS.sonos.workflow.result - End *test case* test_meta_data at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,661 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:56,661 [INFO] SONOS.sonos.workflow.result - Start *test case* test_res_ratings_icons at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,661 [INFO] SONOS.sonos.workflow.fixture.Ratings - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,661 [INFO] SONOS.sonos.workflow.fixture.Ratings - Start Test Case: 5277 Ratings test_res_ratings_icons
2018-03-02 18:58:56,662 [SKIP] SONOS.sonos.workflow.fixture.Ratings - Service must support Ratings for this test to run. (expression is False)
2018-03-02 18:58:56,662 [SKIP] SONOS.sonos.workflow.fixture.Ratings - 5277 Ratings test_res_ratings_icons
2018-03-02 18:58:56,662 [INFO] SONOS.sonos.workflow.fixture.Ratings - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,662 [INFO] SONOS.sonos.workflow.result - End *test case* test_res_ratings_icons at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,662 [INFO] SONOS.sonos.workflow.result - End *test fixture* Ratings at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,663 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:56,663 [INFO] SONOS.sonos.workflow.result - Start *test fixture* Favorites at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,663 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:56,663 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_add_to_favorites at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,663 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:56,663 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_add_to_favorites at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,663 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,663 [INFO] SONOS.sonos.workflow.fixture.Favorites - Test Case: 10552 Favorites test_combinatorial_add_to_favorites_202912945011388656941625456444385316711 (u'self.smapiservice.get_support_favorites_track()', u'self.smapiservice.get_test_track_id()', u'self.smapiservice.get_favorite_tracks_container_id()'))
2018-03-02 18:58:56,664 [SKIP] SONOS.sonos.workflow.fixture.Favorites - Service must support adding/removing favorite tracks and/or albums([Capabilities]:favoritesTracks in the config file) for this test to run. (expression is False)
2018-03-02 18:58:56,664 [SKIP] SONOS.sonos.workflow.fixture.Favorites - 10552 Favorites test_combinatorial_add_to_favorites_202912945011388656941625456444385316711
2018-03-02 18:58:56,664 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,664 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_add_to_favorites at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,664 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:56,665 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_add_to_favorites at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,665 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,665 [INFO] SONOS.sonos.workflow.fixture.Favorites - Test Case: 10553 Favorites test_combinatorial_add_to_favorites_318262203569584814813756028558191412357 (u'self.smapiservice.get_support_favorites_album()', u'self.smapiservice.get_test_album_id()', u'self.smapiservice.get_favorite_albums_container_id()'))
2018-03-02 18:58:56,665 [SKIP] SONOS.sonos.workflow.fixture.Favorites - Service must support adding/removing favorite tracks and/or albums([Capabilities]:favoritesTracks in the config file) for this test to run. (expression is False)
2018-03-02 18:58:56,665 [SKIP] SONOS.sonos.workflow.fixture.Favorites - 10553 Favorites test_combinatorial_add_to_favorites_318262203569584814813756028558191412357
2018-03-02 18:58:56,666 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,666 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_add_to_favorites at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,666 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:56,666 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_add_to_favorites at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,666 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,666 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_add_to_favorites at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,666 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_add_to_favorites at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,667 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:56,667 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_remove_from_favorites at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,667 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:56,667 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_remove_from_favorites at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,667 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,667 [INFO] SONOS.sonos.workflow.fixture.Favorites - Test Case: 10555 Favorites test_combinatorial_remove_from_favorites_202912945011388656941625456444385316711 (u'self.smapiservice.get_support_favorites_track()', u'self.smapiservice.get_test_track_id()', u'self.smapiservice.get_favorite_tracks_container_id()'))
2018-03-02 18:58:56,668 [SKIP] SONOS.sonos.workflow.fixture.Favorites - Service must support adding/removing favorite tracks and/or albums([Capabilities]:favoritesTracks in the config file) for this test to run. (expression is False)
2018-03-02 18:58:56,668 [SKIP] SONOS.sonos.workflow.fixture.Favorites - 10555 Favorites test_combinatorial_remove_from_favorites_202912945011388656941625456444385316711
2018-03-02 18:58:56,668 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,668 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_remove_from_favorites at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,668 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:56,668 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_remove_from_favorites at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,668 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,669 [INFO] SONOS.sonos.workflow.fixture.Favorites - Test Case: 10556 Favorites test_combinatorial_remove_from_favorites_318262203569584814813756028558191412357 (u'self.smapiservice.get_support_favorites_album()', u'self.smapiservice.get_test_album_id()', u'self.smapiservice.get_favorite_albums_container_id()'))
2018-03-02 18:58:56,669 [SKIP] SONOS.sonos.workflow.fixture.Favorites - Service must support adding/removing favorite tracks and/or albums([Capabilities]:favoritesTracks in the config file) for this test to run. (expression is False)
2018-03-02 18:58:56,669 [SKIP] SONOS.sonos.workflow.fixture.Favorites - 10556 Favorites test_combinatorial_remove_from_favorites_318262203569584814813756028558191412357
2018-03-02 18:58:56,669 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,669 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_remove_from_favorites at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,670 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:56,670 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_remove_from_favorites at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,670 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,670 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_remove_from_favorites at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,670 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_remove_from_favorites at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,670 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:56,670 [INFO] SONOS.sonos.workflow.result - Start *test case* test_getlastupdate_with_change at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,671 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,671 [INFO] SONOS.sonos.workflow.fixture.Favorites - Start Test Case: 10558 Favorites test_getlastupdate_with_change
2018-03-02 18:58:56,671 [SKIP] SONOS.sonos.workflow.fixture.Favorites - Service must support adding/removing favorites tracks and/or albums and/or artists([Capabilities]:favoritesTracks/favoritesAlbums/favoritesArtists in the config file) for this test to run. (expression is False)
2018-03-02 18:58:56,671 [SKIP] SONOS.sonos.workflow.fixture.Favorites - 10558 Favorites test_getlastupdate_with_change
2018-03-02 18:58:56,671 [INFO] SONOS.sonos.workflow.fixture.Favorites - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:56,671 [INFO] SONOS.sonos.workflow.result - End *test case* test_getlastupdate_with_change at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,671 [INFO] SONOS.sonos.workflow.result - End *test fixture* Favorites at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:56,672 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 18:58:56,672 [INFO] SONOS.sonos.workflow.result - Start *test fixture* Browse at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,672 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:58:56,672 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:58 PM 


2018-03-02 18:58:56,672 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:56,672 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:56,672 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 18:58:56,674 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:56,674 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:57,098 [DEBUG] SONOS.suds.client - waited 423 (ms) on server reply
2018-03-02 18:58:57,141 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:57,327 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetdata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 423 (ms)
 } is not None)
2018-03-02 18:58:57,327 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:57,327 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21110 Browse test_combinatorial_browse_results_pagination_189683732810003785473237872954217389610 (mediaCollection){
   id = "Artist:zero"
   itemType = "artist"
   displayType = "list"
   title = "Zero"
   summary = "Zero"
   canPlay = False
 })
2018-03-02 18:58:57,327 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:58:57,621 [PASS] SONOS.sonos.workflow.fixture.Browse - displayType (list) returned in metadata should be listed in presentation map (expression is True)
2018-03-02 18:58:57,622 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:zero, 0, 10000, None)
2018-03-02 18:58:57,624 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:zero</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:57,624 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:57,902 [DEBUG] SONOS.suds.client - waited 277 (ms) on server reply
2018-03-02 18:58:57,907 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>26</count>
            <total>26</total>
            <mediaCollection>
               <id>Year:zero:1984</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984</title>
               <summary>1984</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1985</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985</title>
               <summary>1985</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1986</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986</title>
               <summary>1986</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1987</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987</title>
               <summary>1987</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1988</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988</title>
               <summary>1988</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1989</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989</title>
               <summary>1989</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1990</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990</title>
               <summary>1990</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1991</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991</title>
               <summary>1991</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1992</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992</title>
               <summary>1992</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1993</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993</title>
               <summary>1993</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1994</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1994</title>
               <summary>1994</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1995</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1995</title>
               <summary>1995</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1996</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1996</title>
               <summary>1996</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1997</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1997</title>
               <summary>1997</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1998</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1998</title>
               <summary>1998</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1999</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1999</title>
               <summary>1999</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2000</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2000</title>
               <summary>2000</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2004</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2004</title>
               <summary>2004</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2005</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2005</title>
               <summary>2005</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2006</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2006</title>
               <summary>2006</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2007</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2007</title>
               <summary>2007</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2008</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2008</title>
               <summary>2008</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2011</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2011</title>
               <summary>2011</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2012</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2012</title>
               <summary>2012</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2013</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2013</title>
               <summary>2013</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:57,948 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Year:zero:1984"
         itemType = "container"
         displayType = "list"
         title = "1984"
         summary = "1984"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1985"
         itemType = "container"
         displayType = "list"
         title = "1985"
         summary = "1985"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1986"
         itemType = "container"
         displayType = "list"
         title = "1986"
         summary = "1986"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1987"
         itemType = "container"
         displayType = "list"
         title = "1987"
         summary = "1987"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1988"
         itemType = "container"
         displayType = "list"
         title = "1988"
         summary = "1988"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1989"
         itemType = "container"
         displayType = "list"
         title = "1989"
         summary = "1989"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1990"
         itemType = "container"
         displayType = "list"
         title = "1990"
         summary = "1990"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1991"
         itemType = "container"
         displayType = "list"
         title = "1991"
         summary = "1991"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1992"
         itemType = "container"
         displayType = "list"
         title = "1992"
         summary = "1992"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1993"
         itemType = "container"
         displayType = "list"
         title = "1993"
         summary = "1993"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1994"
         itemType = "container"
         displayType = "list"
         title = "1994"
         summary = "1994"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1995"
         itemType = "container"
         displayType = "list"
         title = "1995"
         summary = "1995"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1996"
         itemType = "container"
         displayType = "list"
         title = "1996"
         summary = "1996"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1997"
         itemType = "container"
         displayType = "list"
         title = "1997"
         summary = "1997"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1998"
         itemType = "container"
         displayType = "list"
         title = "1998"
         summary = "1998"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1999"
         itemType = "container"
         displayType = "list"
         title = "1999"
         summary = "1999"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2000"
         itemType = "container"
         displayType = "list"
         title = "2000"
         summary = "2000"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2004"
         itemType = "container"
         displayType = "list"
         title = "2004"
         summary = "2004"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2005"
         itemType = "container"
         displayType = "list"
         title = "2005"
         summary = "2005"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2006"
         itemType = "container"
         displayType = "list"
         title = "2006"
         summary = "2006"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2007"
         itemType = "container"
         displayType = "list"
         title = "2007"
         summary = "2007"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2008"
         itemType = "container"
         displayType = "list"
         title = "2008"
         summary = "2008"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2011"
         itemType = "container"
         displayType = "list"
         title = "2011"
         summary = "2011"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2012"
         itemType = "container"
         displayType = "list"
         title = "2012"
         summary = "2012"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2013"
         itemType = "container"
         displayType = "list"
         title = "2013"
         summary = "2013"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2016"
         itemType = "container"
         displayType = "list"
         title = "2016"
         summary = "2016"
         canPlay = False
      },
   index = 0
   count = 26
   total = 26
   timer = 277 (ms)
 } is not None)
2018-03-02 18:58:57,949 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:58:57,949 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:zero, 0, 10000, None)
2018-03-02 18:58:57,950 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:zero</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:57,951 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:58,244 [DEBUG] SONOS.suds.client - waited 293 (ms) on server reply
2018-03-02 18:58:58,250 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>26</count>
            <total>26</total>
            <mediaCollection>
               <id>Year:zero:1984</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984</title>
               <summary>1984</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1985</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985</title>
               <summary>1985</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1986</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986</title>
               <summary>1986</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1987</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987</title>
               <summary>1987</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1988</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988</title>
               <summary>1988</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1989</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989</title>
               <summary>1989</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1990</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990</title>
               <summary>1990</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1991</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991</title>
               <summary>1991</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1992</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992</title>
               <summary>1992</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1993</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993</title>
               <summary>1993</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1994</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1994</title>
               <summary>1994</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1995</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1995</title>
               <summary>1995</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1996</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1996</title>
               <summary>1996</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1997</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1997</title>
               <summary>1997</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1998</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1998</title>
               <summary>1998</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1999</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1999</title>
               <summary>1999</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2000</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2000</title>
               <summary>2000</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2004</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2004</title>
               <summary>2004</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2005</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2005</title>
               <summary>2005</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2006</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2006</title>
               <summary>2006</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2007</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2007</title>
               <summary>2007</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2008</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2008</title>
               <summary>2008</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2011</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2011</title>
               <summary>2011</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2012</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2012</title>
               <summary>2012</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2013</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2013</title>
               <summary>2013</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:58,292 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Year:zero:1984"
         itemType = "container"
         displayType = "list"
         title = "1984"
         summary = "1984"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1985"
         itemType = "container"
         displayType = "list"
         title = "1985"
         summary = "1985"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1986"
         itemType = "container"
         displayType = "list"
         title = "1986"
         summary = "1986"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1987"
         itemType = "container"
         displayType = "list"
         title = "1987"
         summary = "1987"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1988"
         itemType = "container"
         displayType = "list"
         title = "1988"
         summary = "1988"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1989"
         itemType = "container"
         displayType = "list"
         title = "1989"
         summary = "1989"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1990"
         itemType = "container"
         displayType = "list"
         title = "1990"
         summary = "1990"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1991"
         itemType = "container"
         displayType = "list"
         title = "1991"
         summary = "1991"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1992"
         itemType = "container"
         displayType = "list"
         title = "1992"
         summary = "1992"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1993"
         itemType = "container"
         displayType = "list"
         title = "1993"
         summary = "1993"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1994"
         itemType = "container"
         displayType = "list"
         title = "1994"
         summary = "1994"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1995"
         itemType = "container"
         displayType = "list"
         title = "1995"
         summary = "1995"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1996"
         itemType = "container"
         displayType = "list"
         title = "1996"
         summary = "1996"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1997"
         itemType = "container"
         displayType = "list"
         title = "1997"
         summary = "1997"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1998"
         itemType = "container"
         displayType = "list"
         title = "1998"
         summary = "1998"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1999"
         itemType = "container"
         displayType = "list"
         title = "1999"
         summary = "1999"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2000"
         itemType = "container"
         displayType = "list"
         title = "2000"
         summary = "2000"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2004"
         itemType = "container"
         displayType = "list"
         title = "2004"
         summary = "2004"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2005"
         itemType = "container"
         displayType = "list"
         title = "2005"
         summary = "2005"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2006"
         itemType = "container"
         displayType = "list"
         title = "2006"
         summary = "2006"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2007"
         itemType = "container"
         displayType = "list"
         title = "2007"
         summary = "2007"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2008"
         itemType = "container"
         displayType = "list"
         title = "2008"
         summary = "2008"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2011"
         itemType = "container"
         displayType = "list"
         title = "2011"
         summary = "2011"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2012"
         itemType = "container"
         displayType = "list"
         title = "2012"
         summary = "2012"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2013"
         itemType = "container"
         displayType = "list"
         title = "2013"
         summary = "2013"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2016"
         itemType = "container"
         displayType = "list"
         title = "2016"
         summary = "2016"
         canPlay = False
      },
   index = 0
   count = 26
   total = 26
   timer = 293 (ms)
 } is not None)
2018-03-02 18:58:58,292 [PASS] SONOS.sonos.workflow.fixture.Browse - Result count should never exceed request count. (26 less than or equal 10000)
2018-03-02 18:58:58,292 [PASS] SONOS.sonos.workflow.fixture.Browse - Result index should equal request index. (expected 0 == actual 0)
2018-03-02 18:58:58,292 [PASS] SONOS.sonos.workflow.fixture.Browse - Index + count should equal total at the end of a container. (expected 26 == actual 26)
2018-03-02 18:58:58,292 [PASS] SONOS.sonos.workflow.fixture.Browse - 21110 Browse test_combinatorial_browse_results_pagination_189683732810003785473237872954217389610
2018-03-02 18:58:58,293 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:58,293 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:58,293 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:58,293 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:58,293 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:zero, 0, 10000, None)
2018-03-02 18:58:58,295 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:zero</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:58,295 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:58,573 [DEBUG] SONOS.suds.client - waited 277 (ms) on server reply
2018-03-02 18:58:58,578 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>26</count>
            <total>26</total>
            <mediaCollection>
               <id>Year:zero:1984</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984</title>
               <summary>1984</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1985</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985</title>
               <summary>1985</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1986</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986</title>
               <summary>1986</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1987</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987</title>
               <summary>1987</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1988</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988</title>
               <summary>1988</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1989</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989</title>
               <summary>1989</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1990</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990</title>
               <summary>1990</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1991</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991</title>
               <summary>1991</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1992</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992</title>
               <summary>1992</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1993</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993</title>
               <summary>1993</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1994</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1994</title>
               <summary>1994</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1995</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1995</title>
               <summary>1995</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1996</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1996</title>
               <summary>1996</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1997</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1997</title>
               <summary>1997</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1998</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1998</title>
               <summary>1998</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1999</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1999</title>
               <summary>1999</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2000</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2000</title>
               <summary>2000</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2004</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2004</title>
               <summary>2004</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2005</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2005</title>
               <summary>2005</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2006</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2006</title>
               <summary>2006</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2007</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2007</title>
               <summary>2007</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2008</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2008</title>
               <summary>2008</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2011</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2011</title>
               <summary>2011</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2012</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2012</title>
               <summary>2012</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2013</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2013</title>
               <summary>2013</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:58,616 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:58,616 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21111 Browse test_combinatorial_browse_results_pagination_31236954195180176115073049996686694582 (mediaCollection){
   id = "Year:zero:1984"
   itemType = "container"
   displayType = "list"
   title = "1984"
   summary = "1984"
   canPlay = False
 })
2018-03-02 18:58:58,616 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:58:58,616 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1984, 0, 10000, None)
2018-03-02 18:58:58,618 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1984</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:58,618 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:59,026 [DEBUG] SONOS.suds.client - waited 407 (ms) on server reply
2018-03-02 18:58:59,027 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>1</count>
            <total>1</total>
            <mediaCollection>
               <id>Shows:zero:1984:1984-12-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984-12-26 – The Stone – San Francisco, CA [1]</title>
               <summary>1984-12-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:59,030 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1984:1984-12-26"
         itemType = "container"
         displayType = "list"
         title = "1984-12-26 – The Stone – San Francisco, CA [1]"
         summary = "1984-12-26"
         canPlay = True
      },
   index = 0
   count = 1
   total = 1
   timer = 407 (ms)
 } is not None)
2018-03-02 18:58:59,030 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:58:59,030 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1984, 0, 10000, None)
2018-03-02 18:58:59,032 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1984</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:59,032 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:59,381 [DEBUG] SONOS.suds.client - waited 348 (ms) on server reply
2018-03-02 18:58:59,382 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>1</count>
            <total>1</total>
            <mediaCollection>
               <id>Shows:zero:1984:1984-12-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984-12-26 – The Stone – San Francisco, CA [1]</title>
               <summary>1984-12-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:59,384 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1984:1984-12-26"
         itemType = "container"
         displayType = "list"
         title = "1984-12-26 – The Stone – San Francisco, CA [1]"
         summary = "1984-12-26"
         canPlay = True
      },
   index = 0
   count = 1
   total = 1
   timer = 348 (ms)
 } is not None)
2018-03-02 18:58:59,385 [PASS] SONOS.sonos.workflow.fixture.Browse - Result count should never exceed request count. (1 less than or equal 10000)
2018-03-02 18:58:59,385 [PASS] SONOS.sonos.workflow.fixture.Browse - Result index should equal request index. (expected 0 == actual 0)
2018-03-02 18:58:59,385 [PASS] SONOS.sonos.workflow.fixture.Browse - Index + count should equal total at the end of a container. (expected 1 == actual 1)
2018-03-02 18:58:59,385 [PASS] SONOS.sonos.workflow.fixture.Browse - 21111 Browse test_combinatorial_browse_results_pagination_31236954195180176115073049996686694582
2018-03-02 18:58:59,385 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:59,385 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:58 PM 




2018-03-02 18:58:59,386 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:58:59,386 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:58 PM 
2018-03-02 18:58:59,386 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:58:59,386 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21112 Browse test_combinatorial_browse_results_pagination_39251622189671488654401127192550400889 (mediaCollection){
   id = "Year:zero:1985"
   itemType = "container"
   displayType = "list"
   title = "1985"
   summary = "1985"
   canPlay = False
 })
2018-03-02 18:58:59,386 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:58:59,387 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1985, 0, 10000, None)
2018-03-02 18:58:59,388 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1985</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:59,389 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:58:59,757 [DEBUG] SONOS.suds.client - waited 367 (ms) on server reply
2018-03-02 18:58:59,759 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>4</count>
            <total>4</total>
            <mediaCollection>
               <id>Shows:zero:1985:1985-01-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-01-02 – Cabaret Cotati – Cotati, CA [1]</title>
               <summary>1985-01-02</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-04-11</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-04-11 – New George&apos;s Night Club – San Rafael, CA [1]</title>
               <summary>1985-04-11</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-07-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-07-17 – New George&apos;s – San Rafael, CA [1] [SBD]</title>
               <summary>1985-07-17</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-12-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-12-29 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1985-12-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:58:59,766 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1985:1985-01-02"
         itemType = "container"
         displayType = "list"
         title = "1985-01-02 – Cabaret Cotati – Cotati, CA [1]"
         summary = "1985-01-02"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-04-11"
         itemType = "container"
         displayType = "list"
         title = "1985-04-11 – New George's Night Club – San Rafael, CA [1]"
         summary = "1985-04-11"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-07-17"
         itemType = "container"
         displayType = "list"
         title = "1985-07-17 – New George's – San Rafael, CA [1] [SBD]"
         summary = "1985-07-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-12-29"
         itemType = "container"
         displayType = "list"
         title = "1985-12-29 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1985-12-29"
         canPlay = True
      },
   index = 0
   count = 4
   total = 4
   timer = 367 (ms)
 } is not None)
2018-03-02 18:58:59,767 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:58:59,767 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1985, 0, 10000, None)
2018-03-02 18:58:59,768 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1985</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:58:59,769 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:00,140 [DEBUG] SONOS.suds.client - waited 371 (ms) on server reply
2018-03-02 18:59:00,142 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>4</count>
            <total>4</total>
            <mediaCollection>
               <id>Shows:zero:1985:1985-01-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-01-02 – Cabaret Cotati – Cotati, CA [1]</title>
               <summary>1985-01-02</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-04-11</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-04-11 – New George&apos;s Night Club – San Rafael, CA [1]</title>
               <summary>1985-04-11</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-07-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-07-17 – New George&apos;s – San Rafael, CA [1] [SBD]</title>
               <summary>1985-07-17</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-12-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-12-29 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1985-12-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:00,149 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1985:1985-01-02"
         itemType = "container"
         displayType = "list"
         title = "1985-01-02 – Cabaret Cotati – Cotati, CA [1]"
         summary = "1985-01-02"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-04-11"
         itemType = "container"
         displayType = "list"
         title = "1985-04-11 – New George's Night Club – San Rafael, CA [1]"
         summary = "1985-04-11"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-07-17"
         itemType = "container"
         displayType = "list"
         title = "1985-07-17 – New George's – San Rafael, CA [1] [SBD]"
         summary = "1985-07-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-12-29"
         itemType = "container"
         displayType = "list"
         title = "1985-12-29 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1985-12-29"
         canPlay = True
      },
   index = 0
   count = 4
   total = 4
   timer = 371 (ms)
 } is not None)
2018-03-02 18:59:00,149 [PASS] SONOS.sonos.workflow.fixture.Browse - Result count should never exceed request count. (4 less than or equal 10000)
2018-03-02 18:59:00,149 [PASS] SONOS.sonos.workflow.fixture.Browse - Result index should equal request index. (expected 0 == actual 0)
2018-03-02 18:59:00,149 [PASS] SONOS.sonos.workflow.fixture.Browse - Index + count should equal total at the end of a container. (expected 4 == actual 4)
2018-03-02 18:59:00,149 [PASS] SONOS.sonos.workflow.fixture.Browse - 21112 Browse test_combinatorial_browse_results_pagination_39251622189671488654401127192550400889
2018-03-02 18:59:00,150 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:00,150 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:00,150 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:00,150 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:00,150 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:00,151 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21113 Browse test_combinatorial_browse_results_pagination_138447830155155323287372198047157482404 (mediaCollection){
   id = "Year:zero:1986"
   itemType = "container"
   displayType = "list"
   title = "1986"
   summary = "1986"
   canPlay = False
 })
2018-03-02 18:59:00,151 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:00,151 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1986, 0, 10000, None)
2018-03-02 18:59:00,153 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1986</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:00,153 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:00,559 [DEBUG] SONOS.suds.client - waited 405 (ms) on server reply
2018-03-02 18:59:00,561 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-01</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-01 – Capitol Theater – Passaic, NJ [1] [SBD]</title>
               <summary>1986-03-01</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-02 – The Ritz – New York, NY [2] [SBD]</title>
               <summary>1986-03-02</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-03 – Pulsations Night Club – Glen Mills, PA [1]</title>
               <summary>1986-03-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-23 – Kaiser Convention Center – Oakland, CA [1] [SBD]</title>
               <summary>1986-03-23</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-09-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-09-06 – River Theater – Guerneville, CA [1]</title>
               <summary>1986-09-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-12-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-12-03 – Lone Star Cafe – New York, NY [1]</title>
               <summary>1986-12-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-12-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-12-06 – Bogey&apos;s – Albany, NY [1]</title>
               <summary>1986-12-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:00,573 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-01"
         itemType = "container"
         displayType = "list"
         title = "1986-03-01 – Capitol Theater – Passaic, NJ [1] [SBD]"
         summary = "1986-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-02"
         itemType = "container"
         displayType = "list"
         title = "1986-03-02 – The Ritz – New York, NY [2] [SBD]"
         summary = "1986-03-02"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-03"
         itemType = "container"
         displayType = "list"
         title = "1986-03-03 – Pulsations Night Club – Glen Mills, PA [1]"
         summary = "1986-03-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-23"
         itemType = "container"
         displayType = "list"
         title = "1986-03-23 – Kaiser Convention Center – Oakland, CA [1] [SBD]"
         summary = "1986-03-23"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-09-06"
         itemType = "container"
         displayType = "list"
         title = "1986-09-06 – River Theater – Guerneville, CA [1]"
         summary = "1986-09-06"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-03"
         itemType = "container"
         displayType = "list"
         title = "1986-12-03 – Lone Star Cafe – New York, NY [1]"
         summary = "1986-12-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-06"
         itemType = "container"
         displayType = "list"
         title = "1986-12-06 – Bogey's – Albany, NY [1]"
         summary = "1986-12-06"
         canPlay = True
      },
   index = 0
   count = 7
   total = 7
   timer = 405 (ms)
 } is not None)
2018-03-02 18:59:00,574 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:00,574 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1986, 0, 10000, None)
2018-03-02 18:59:00,575 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1986</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:00,575 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:01,747 [DEBUG] SONOS.suds.client - waited 1.171 (seconds) on server reply
2018-03-02 18:59:01,749 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-01</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-01 – Capitol Theater – Passaic, NJ [1] [SBD]</title>
               <summary>1986-03-01</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-02 – The Ritz – New York, NY [2] [SBD]</title>
               <summary>1986-03-02</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-03 – Pulsations Night Club – Glen Mills, PA [1]</title>
               <summary>1986-03-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-23 – Kaiser Convention Center – Oakland, CA [1] [SBD]</title>
               <summary>1986-03-23</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-09-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-09-06 – River Theater – Guerneville, CA [1]</title>
               <summary>1986-09-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-12-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-12-03 – Lone Star Cafe – New York, NY [1]</title>
               <summary>1986-12-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-12-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-12-06 – Bogey&apos;s – Albany, NY [1]</title>
               <summary>1986-12-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:01,761 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-01"
         itemType = "container"
         displayType = "list"
         title = "1986-03-01 – Capitol Theater – Passaic, NJ [1] [SBD]"
         summary = "1986-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-02"
         itemType = "container"
         displayType = "list"
         title = "1986-03-02 – The Ritz – New York, NY [2] [SBD]"
         summary = "1986-03-02"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-03"
         itemType = "container"
         displayType = "list"
         title = "1986-03-03 – Pulsations Night Club – Glen Mills, PA [1]"
         summary = "1986-03-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-23"
         itemType = "container"
         displayType = "list"
         title = "1986-03-23 – Kaiser Convention Center – Oakland, CA [1] [SBD]"
         summary = "1986-03-23"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-09-06"
         itemType = "container"
         displayType = "list"
         title = "1986-09-06 – River Theater – Guerneville, CA [1]"
         summary = "1986-09-06"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-03"
         itemType = "container"
         displayType = "list"
         title = "1986-12-03 – Lone Star Cafe – New York, NY [1]"
         summary = "1986-12-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-06"
         itemType = "container"
         displayType = "list"
         title = "1986-12-06 – Bogey's – Albany, NY [1]"
         summary = "1986-12-06"
         canPlay = True
      },
   index = 0
   count = 7
   total = 7
   timer = 1.171 (seconds)
 } is not None)
2018-03-02 18:59:01,761 [PASS] SONOS.sonos.workflow.fixture.Browse - Result count should never exceed request count. (7 less than or equal 10000)
2018-03-02 18:59:01,762 [PASS] SONOS.sonos.workflow.fixture.Browse - Result index should equal request index. (expected 0 == actual 0)
2018-03-02 18:59:01,762 [PASS] SONOS.sonos.workflow.fixture.Browse - Index + count should equal total at the end of a container. (expected 7 == actual 7)
2018-03-02 18:59:01,762 [PASS] SONOS.sonos.workflow.fixture.Browse - 21113 Browse test_combinatorial_browse_results_pagination_138447830155155323287372198047157482404
2018-03-02 18:59:01,762 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:01,762 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:01,762 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:01,762 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:01,762 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:01,763 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21114 Browse test_combinatorial_browse_results_pagination_32313430521995743328206113648437515719 (mediaCollection){
   id = "Year:zero:1987"
   itemType = "container"
   displayType = "list"
   title = "1987"
   summary = "1987"
   canPlay = False
 })
2018-03-02 18:59:01,763 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:01,763 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1987, 0, 10000, None)
2018-03-02 18:59:01,764 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1987</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:01,765 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:03,124 [DEBUG] SONOS.suds.client - waited 1.359 (seconds) on server reply
2018-03-02 18:59:03,127 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>10</count>
            <total>10</total>
            <mediaCollection>
               <id>Shows:zero:1987:1987-01-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-01-03 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1987-01-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-02-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-02-26 – Lone Star Cafe – New York, NY [1]</title>
               <summary>1987-02-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-02-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-02-27 – Empire Rock Club – Philadelphia, PA [1] [SBD]</title>
               <summary>1987-02-27</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-03-01</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-03-01 – Molly&apos;s – Boston, MA [1] [SBD]</title>
               <summary>1987-03-01</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-03-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-03-18 – Fillmore Auditorium – San Francisco, CA [1] [SBD]</title>
               <summary>1987-03-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-04-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-04-24 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1987-04-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-05-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-05-24 – Bolinas Community Center – Bolinas, CA [1] [SBD]</title>
               <summary>1987-05-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-18 – New Horizon Cafe – Richmond, VA [1] [SBD]</title>
               <summary>1987-06-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-24 – Agora Ballroom – Hartford, CT [1]</title>
               <summary>1987-06-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-27 – John Hopkins University – Baltimore MD [2] [SBD]</title>
               <summary>1987-06-27</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:03,149 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1987:1987-01-03"
         itemType = "container"
         displayType = "list"
         title = "1987-01-03 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-01-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-26"
         itemType = "container"
         displayType = "list"
         title = "1987-02-26 – Lone Star Cafe – New York, NY [1]"
         summary = "1987-02-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-27"
         itemType = "container"
         displayType = "list"
         title = "1987-02-27 – Empire Rock Club – Philadelphia, PA [1] [SBD]"
         summary = "1987-02-27"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-01"
         itemType = "container"
         displayType = "list"
         title = "1987-03-01 – Molly's – Boston, MA [1] [SBD]"
         summary = "1987-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-18"
         itemType = "container"
         displayType = "list"
         title = "1987-03-18 – Fillmore Auditorium – San Francisco, CA [1] [SBD]"
         summary = "1987-03-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-04-24"
         itemType = "container"
         displayType = "list"
         title = "1987-04-24 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-04-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-05-24"
         itemType = "container"
         displayType = "list"
         title = "1987-05-24 – Bolinas Community Center – Bolinas, CA [1] [SBD]"
         summary = "1987-05-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-18"
         itemType = "container"
         displayType = "list"
         title = "1987-06-18 – New Horizon Cafe – Richmond, VA [1] [SBD]"
         summary = "1987-06-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-24"
         itemType = "container"
         displayType = "list"
         title = "1987-06-24 – Agora Ballroom – Hartford, CT [1]"
         summary = "1987-06-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-27"
         itemType = "container"
         displayType = "list"
         title = "1987-06-27 – John Hopkins University – Baltimore MD [2] [SBD]"
         summary = "1987-06-27"
         canPlay = False
      },
   index = 0
   count = 10
   total = 10
   timer = 1.359 (seconds)
 } is not None)
2018-03-02 18:59:03,150 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:03,150 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1987, 0, 10000, None)
2018-03-02 18:59:03,152 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1987</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:03,152 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:03,534 [DEBUG] SONOS.suds.client - waited 382 (ms) on server reply
2018-03-02 18:59:03,537 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>10</count>
            <total>10</total>
            <mediaCollection>
               <id>Shows:zero:1987:1987-01-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-01-03 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1987-01-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-02-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-02-26 – Lone Star Cafe – New York, NY [1]</title>
               <summary>1987-02-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-02-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-02-27 – Empire Rock Club – Philadelphia, PA [1] [SBD]</title>
               <summary>1987-02-27</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-03-01</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-03-01 – Molly&apos;s – Boston, MA [1] [SBD]</title>
               <summary>1987-03-01</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-03-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-03-18 – Fillmore Auditorium – San Francisco, CA [1] [SBD]</title>
               <summary>1987-03-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-04-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-04-24 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1987-04-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-05-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-05-24 – Bolinas Community Center – Bolinas, CA [1] [SBD]</title>
               <summary>1987-05-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-18 – New Horizon Cafe – Richmond, VA [1] [SBD]</title>
               <summary>1987-06-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-24 – Agora Ballroom – Hartford, CT [1]</title>
               <summary>1987-06-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-27 – John Hopkins University – Baltimore MD [2] [SBD]</title>
               <summary>1987-06-27</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:03,554 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1987:1987-01-03"
         itemType = "container"
         displayType = "list"
         title = "1987-01-03 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-01-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-26"
         itemType = "container"
         displayType = "list"
         title = "1987-02-26 – Lone Star Cafe – New York, NY [1]"
         summary = "1987-02-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-27"
         itemType = "container"
         displayType = "list"
         title = "1987-02-27 – Empire Rock Club – Philadelphia, PA [1] [SBD]"
         summary = "1987-02-27"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-01"
         itemType = "container"
         displayType = "list"
         title = "1987-03-01 – Molly's – Boston, MA [1] [SBD]"
         summary = "1987-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-18"
         itemType = "container"
         displayType = "list"
         title = "1987-03-18 – Fillmore Auditorium – San Francisco, CA [1] [SBD]"
         summary = "1987-03-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-04-24"
         itemType = "container"
         displayType = "list"
         title = "1987-04-24 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-04-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-05-24"
         itemType = "container"
         displayType = "list"
         title = "1987-05-24 – Bolinas Community Center – Bolinas, CA [1] [SBD]"
         summary = "1987-05-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-18"
         itemType = "container"
         displayType = "list"
         title = "1987-06-18 – New Horizon Cafe – Richmond, VA [1] [SBD]"
         summary = "1987-06-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-24"
         itemType = "container"
         displayType = "list"
         title = "1987-06-24 – Agora Ballroom – Hartford, CT [1]"
         summary = "1987-06-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-27"
         itemType = "container"
         displayType = "list"
         title = "1987-06-27 – John Hopkins University – Baltimore MD [2] [SBD]"
         summary = "1987-06-27"
         canPlay = False
      },
   index = 0
   count = 10
   total = 10
   timer = 382 (ms)
 } is not None)
2018-03-02 18:59:03,554 [PASS] SONOS.sonos.workflow.fixture.Browse - Result count should never exceed request count. (10 less than or equal 10000)
2018-03-02 18:59:03,554 [PASS] SONOS.sonos.workflow.fixture.Browse - Result index should equal request index. (expected 0 == actual 0)
2018-03-02 18:59:03,554 [PASS] SONOS.sonos.workflow.fixture.Browse - Index + count should equal total at the end of a container. (expected 10 == actual 10)
2018-03-02 18:59:03,554 [PASS] SONOS.sonos.workflow.fixture.Browse - 21114 Browse test_combinatorial_browse_results_pagination_32313430521995743328206113648437515719
2018-03-02 18:59:03,554 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:03,554 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:03,555 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:03,555 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:03,555 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:03,555 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:59 PM 


2018-03-02 18:59:03,556 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_browse_results_pagination at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:03,556 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:59:03,556 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 


2018-03-02 18:59:03,556 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:03,556 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:03,556 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 18:59:03,558 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:03,558 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:03,875 [DEBUG] SONOS.suds.client - waited 317 (ms) on server reply
2018-03-02 18:59:03,898 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:04,078 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetdata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 317 (ms)
 } is not None)
2018-03-02 18:59:04,078 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:04,078 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21116 Browse test_combinatorial_pagination_browse_range_no_overlap_189683732810003785473237872954217389610 (mediaCollection){
   id = "Artist:zero"
   itemType = "artist"
   displayType = "list"
   title = "Zero"
   summary = "Zero"
   canPlay = False
 })
2018-03-02 18:59:04,078 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:04,078 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:04,079 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:zero, 0, 10000, None)
2018-03-02 18:59:04,080 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:zero</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:04,080 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:04,349 [DEBUG] SONOS.suds.client - waited 268 (ms) on server reply
2018-03-02 18:59:04,355 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>26</count>
            <total>26</total>
            <mediaCollection>
               <id>Year:zero:1984</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984</title>
               <summary>1984</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1985</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985</title>
               <summary>1985</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1986</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986</title>
               <summary>1986</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1987</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987</title>
               <summary>1987</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1988</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988</title>
               <summary>1988</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1989</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989</title>
               <summary>1989</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1990</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990</title>
               <summary>1990</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1991</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991</title>
               <summary>1991</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1992</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992</title>
               <summary>1992</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1993</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993</title>
               <summary>1993</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1994</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1994</title>
               <summary>1994</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1995</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1995</title>
               <summary>1995</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1996</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1996</title>
               <summary>1996</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1997</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1997</title>
               <summary>1997</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1998</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1998</title>
               <summary>1998</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1999</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1999</title>
               <summary>1999</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2000</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2000</title>
               <summary>2000</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2004</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2004</title>
               <summary>2004</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2005</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2005</title>
               <summary>2005</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2006</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2006</title>
               <summary>2006</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2007</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2007</title>
               <summary>2007</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2008</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2008</title>
               <summary>2008</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2011</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2011</title>
               <summary>2011</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2012</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2012</title>
               <summary>2012</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2013</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2013</title>
               <summary>2013</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:04,400 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Year:zero:1984"
         itemType = "container"
         displayType = "list"
         title = "1984"
         summary = "1984"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1985"
         itemType = "container"
         displayType = "list"
         title = "1985"
         summary = "1985"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1986"
         itemType = "container"
         displayType = "list"
         title = "1986"
         summary = "1986"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1987"
         itemType = "container"
         displayType = "list"
         title = "1987"
         summary = "1987"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1988"
         itemType = "container"
         displayType = "list"
         title = "1988"
         summary = "1988"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1989"
         itemType = "container"
         displayType = "list"
         title = "1989"
         summary = "1989"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1990"
         itemType = "container"
         displayType = "list"
         title = "1990"
         summary = "1990"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1991"
         itemType = "container"
         displayType = "list"
         title = "1991"
         summary = "1991"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1992"
         itemType = "container"
         displayType = "list"
         title = "1992"
         summary = "1992"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1993"
         itemType = "container"
         displayType = "list"
         title = "1993"
         summary = "1993"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1994"
         itemType = "container"
         displayType = "list"
         title = "1994"
         summary = "1994"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1995"
         itemType = "container"
         displayType = "list"
         title = "1995"
         summary = "1995"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1996"
         itemType = "container"
         displayType = "list"
         title = "1996"
         summary = "1996"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1997"
         itemType = "container"
         displayType = "list"
         title = "1997"
         summary = "1997"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1998"
         itemType = "container"
         displayType = "list"
         title = "1998"
         summary = "1998"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1999"
         itemType = "container"
         displayType = "list"
         title = "1999"
         summary = "1999"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2000"
         itemType = "container"
         displayType = "list"
         title = "2000"
         summary = "2000"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2004"
         itemType = "container"
         displayType = "list"
         title = "2004"
         summary = "2004"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2005"
         itemType = "container"
         displayType = "list"
         title = "2005"
         summary = "2005"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2006"
         itemType = "container"
         displayType = "list"
         title = "2006"
         summary = "2006"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2007"
         itemType = "container"
         displayType = "list"
         title = "2007"
         summary = "2007"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2008"
         itemType = "container"
         displayType = "list"
         title = "2008"
         summary = "2008"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2011"
         itemType = "container"
         displayType = "list"
         title = "2011"
         summary = "2011"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2012"
         itemType = "container"
         displayType = "list"
         title = "2012"
         summary = "2012"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2013"
         itemType = "container"
         displayType = "list"
         title = "2013"
         summary = "2013"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2016"
         itemType = "container"
         displayType = "list"
         title = "2016"
         summary = "2016"
         canPlay = False
      },
   index = 0
   count = 26
   total = 26
   timer = 268 (ms)
 } is not None)
2018-03-02 18:59:04,401 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:04,401 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:04,401 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21116 Browse test_combinatorial_pagination_browse_range_no_overlap_189683732810003785473237872954217389610
2018-03-02 18:59:04,401 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:04,401 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:04,402 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:04,402 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:04,402 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:zero, 0, 10000, None)
2018-03-02 18:59:04,403 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:zero</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:04,404 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:05,914 [DEBUG] SONOS.suds.client - waited 1.510 (seconds) on server reply
2018-03-02 18:59:05,920 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>26</count>
            <total>26</total>
            <mediaCollection>
               <id>Year:zero:1984</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984</title>
               <summary>1984</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1985</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985</title>
               <summary>1985</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1986</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986</title>
               <summary>1986</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1987</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987</title>
               <summary>1987</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1988</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988</title>
               <summary>1988</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1989</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989</title>
               <summary>1989</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1990</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990</title>
               <summary>1990</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1991</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991</title>
               <summary>1991</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1992</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992</title>
               <summary>1992</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1993</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993</title>
               <summary>1993</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1994</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1994</title>
               <summary>1994</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1995</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1995</title>
               <summary>1995</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1996</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1996</title>
               <summary>1996</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1997</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1997</title>
               <summary>1997</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1998</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1998</title>
               <summary>1998</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1999</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1999</title>
               <summary>1999</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2000</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2000</title>
               <summary>2000</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2004</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2004</title>
               <summary>2004</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2005</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2005</title>
               <summary>2005</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2006</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2006</title>
               <summary>2006</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2007</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2007</title>
               <summary>2007</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2008</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2008</title>
               <summary>2008</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2011</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2011</title>
               <summary>2011</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2012</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2012</title>
               <summary>2012</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2013</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2013</title>
               <summary>2013</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:05,963 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:05,964 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21117 Browse test_combinatorial_pagination_browse_range_no_overlap_31236954195180176115073049996686694582 (mediaCollection){
   id = "Year:zero:1984"
   itemType = "container"
   displayType = "list"
   title = "1984"
   summary = "1984"
   canPlay = False
 })
2018-03-02 18:59:05,964 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:05,964 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:05,964 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1984, 0, 10000, None)
2018-03-02 18:59:05,966 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1984</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:05,967 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:06,683 [DEBUG] SONOS.suds.client - waited 716 (ms) on server reply
2018-03-02 18:59:06,683 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>1</count>
            <total>1</total>
            <mediaCollection>
               <id>Shows:zero:1984:1984-12-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984-12-26 – The Stone – San Francisco, CA [1]</title>
               <summary>1984-12-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:06,686 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1984:1984-12-26"
         itemType = "container"
         displayType = "list"
         title = "1984-12-26 – The Stone – San Francisco, CA [1]"
         summary = "1984-12-26"
         canPlay = True
      },
   index = 0
   count = 1
   total = 1
   timer = 716 (ms)
 } is not None)
2018-03-02 18:59:06,686 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:06,686 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:06,686 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21117 Browse test_combinatorial_pagination_browse_range_no_overlap_31236954195180176115073049996686694582
2018-03-02 18:59:06,686 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:06,687 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:06,687 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:06,687 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:06,687 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:06,687 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21118 Browse test_combinatorial_pagination_browse_range_no_overlap_39251622189671488654401127192550400889 (mediaCollection){
   id = "Year:zero:1985"
   itemType = "container"
   displayType = "list"
   title = "1985"
   summary = "1985"
   canPlay = False
 })
2018-03-02 18:59:06,688 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:06,688 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:06,688 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1985, 0, 10000, None)
2018-03-02 18:59:06,690 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1985</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:06,690 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:07,215 [DEBUG] SONOS.suds.client - waited 524 (ms) on server reply
2018-03-02 18:59:07,217 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>4</count>
            <total>4</total>
            <mediaCollection>
               <id>Shows:zero:1985:1985-01-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-01-02 – Cabaret Cotati – Cotati, CA [1]</title>
               <summary>1985-01-02</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-04-11</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-04-11 – New George&apos;s Night Club – San Rafael, CA [1]</title>
               <summary>1985-04-11</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-07-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-07-17 – New George&apos;s – San Rafael, CA [1] [SBD]</title>
               <summary>1985-07-17</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-12-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-12-29 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1985-12-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:07,230 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1985:1985-01-02"
         itemType = "container"
         displayType = "list"
         title = "1985-01-02 – Cabaret Cotati – Cotati, CA [1]"
         summary = "1985-01-02"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-04-11"
         itemType = "container"
         displayType = "list"
         title = "1985-04-11 – New George's Night Club – San Rafael, CA [1]"
         summary = "1985-04-11"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-07-17"
         itemType = "container"
         displayType = "list"
         title = "1985-07-17 – New George's – San Rafael, CA [1] [SBD]"
         summary = "1985-07-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-12-29"
         itemType = "container"
         displayType = "list"
         title = "1985-12-29 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1985-12-29"
         canPlay = True
      },
   index = 0
   count = 4
   total = 4
   timer = 524 (ms)
 } is not None)
2018-03-02 18:59:07,231 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:07,231 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:07,231 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21118 Browse test_combinatorial_pagination_browse_range_no_overlap_39251622189671488654401127192550400889
2018-03-02 18:59:07,232 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:07,232 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:07,232 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:07,232 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:07,232 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:07,233 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21119 Browse test_combinatorial_pagination_browse_range_no_overlap_138447830155155323287372198047157482404 (mediaCollection){
   id = "Year:zero:1986"
   itemType = "container"
   displayType = "list"
   title = "1986"
   summary = "1986"
   canPlay = False
 })
2018-03-02 18:59:07,233 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:07,233 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:07,233 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1986, 0, 10000, None)
2018-03-02 18:59:07,234 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1986</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:07,235 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:08,230 [DEBUG] SONOS.suds.client - waited 994 (ms) on server reply
2018-03-02 18:59:08,232 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-01</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-01 – Capitol Theater – Passaic, NJ [1] [SBD]</title>
               <summary>1986-03-01</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-02 – The Ritz – New York, NY [2] [SBD]</title>
               <summary>1986-03-02</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-03 – Pulsations Night Club – Glen Mills, PA [1]</title>
               <summary>1986-03-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-23 – Kaiser Convention Center – Oakland, CA [1] [SBD]</title>
               <summary>1986-03-23</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-09-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-09-06 – River Theater – Guerneville, CA [1]</title>
               <summary>1986-09-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-12-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-12-03 – Lone Star Cafe – New York, NY [1]</title>
               <summary>1986-12-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-12-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-12-06 – Bogey&apos;s – Albany, NY [1]</title>
               <summary>1986-12-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:08,244 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-01"
         itemType = "container"
         displayType = "list"
         title = "1986-03-01 – Capitol Theater – Passaic, NJ [1] [SBD]"
         summary = "1986-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-02"
         itemType = "container"
         displayType = "list"
         title = "1986-03-02 – The Ritz – New York, NY [2] [SBD]"
         summary = "1986-03-02"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-03"
         itemType = "container"
         displayType = "list"
         title = "1986-03-03 – Pulsations Night Club – Glen Mills, PA [1]"
         summary = "1986-03-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-23"
         itemType = "container"
         displayType = "list"
         title = "1986-03-23 – Kaiser Convention Center – Oakland, CA [1] [SBD]"
         summary = "1986-03-23"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-09-06"
         itemType = "container"
         displayType = "list"
         title = "1986-09-06 – River Theater – Guerneville, CA [1]"
         summary = "1986-09-06"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-03"
         itemType = "container"
         displayType = "list"
         title = "1986-12-03 – Lone Star Cafe – New York, NY [1]"
         summary = "1986-12-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-06"
         itemType = "container"
         displayType = "list"
         title = "1986-12-06 – Bogey's – Albany, NY [1]"
         summary = "1986-12-06"
         canPlay = True
      },
   index = 0
   count = 7
   total = 7
   timer = 994 (ms)
 } is not None)
2018-03-02 18:59:08,244 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:08,244 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:08,244 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21119 Browse test_combinatorial_pagination_browse_range_no_overlap_138447830155155323287372198047157482404
2018-03-02 18:59:08,244 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:08,244 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:08,245 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:08,245 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:08,245 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:08,245 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21120 Browse test_combinatorial_pagination_browse_range_no_overlap_32313430521995743328206113648437515719 (mediaCollection){
   id = "Year:zero:1987"
   itemType = "container"
   displayType = "list"
   title = "1987"
   summary = "1987"
   canPlay = False
 })
2018-03-02 18:59:08,245 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:08,245 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:08,246 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1987, 0, 10000, None)
2018-03-02 18:59:08,247 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1987</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:08,247 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:09,073 [DEBUG] SONOS.suds.client - waited 825 (ms) on server reply
2018-03-02 18:59:09,075 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>10</count>
            <total>10</total>
            <mediaCollection>
               <id>Shows:zero:1987:1987-01-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-01-03 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1987-01-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-02-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-02-26 – Lone Star Cafe – New York, NY [1]</title>
               <summary>1987-02-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-02-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-02-27 – Empire Rock Club – Philadelphia, PA [1] [SBD]</title>
               <summary>1987-02-27</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-03-01</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-03-01 – Molly&apos;s – Boston, MA [1] [SBD]</title>
               <summary>1987-03-01</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-03-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-03-18 – Fillmore Auditorium – San Francisco, CA [1] [SBD]</title>
               <summary>1987-03-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-04-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-04-24 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1987-04-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-05-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-05-24 – Bolinas Community Center – Bolinas, CA [1] [SBD]</title>
               <summary>1987-05-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-18 – New Horizon Cafe – Richmond, VA [1] [SBD]</title>
               <summary>1987-06-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-24 – Agora Ballroom – Hartford, CT [1]</title>
               <summary>1987-06-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-27 – John Hopkins University – Baltimore MD [2] [SBD]</title>
               <summary>1987-06-27</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:09,094 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1987:1987-01-03"
         itemType = "container"
         displayType = "list"
         title = "1987-01-03 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-01-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-26"
         itemType = "container"
         displayType = "list"
         title = "1987-02-26 – Lone Star Cafe – New York, NY [1]"
         summary = "1987-02-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-27"
         itemType = "container"
         displayType = "list"
         title = "1987-02-27 – Empire Rock Club – Philadelphia, PA [1] [SBD]"
         summary = "1987-02-27"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-01"
         itemType = "container"
         displayType = "list"
         title = "1987-03-01 – Molly's – Boston, MA [1] [SBD]"
         summary = "1987-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-18"
         itemType = "container"
         displayType = "list"
         title = "1987-03-18 – Fillmore Auditorium – San Francisco, CA [1] [SBD]"
         summary = "1987-03-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-04-24"
         itemType = "container"
         displayType = "list"
         title = "1987-04-24 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-04-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-05-24"
         itemType = "container"
         displayType = "list"
         title = "1987-05-24 – Bolinas Community Center – Bolinas, CA [1] [SBD]"
         summary = "1987-05-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-18"
         itemType = "container"
         displayType = "list"
         title = "1987-06-18 – New Horizon Cafe – Richmond, VA [1] [SBD]"
         summary = "1987-06-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-24"
         itemType = "container"
         displayType = "list"
         title = "1987-06-24 – Agora Ballroom – Hartford, CT [1]"
         summary = "1987-06-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-27"
         itemType = "container"
         displayType = "list"
         title = "1987-06-27 – John Hopkins University – Baltimore MD [2] [SBD]"
         summary = "1987-06-27"
         canPlay = False
      },
   index = 0
   count = 10
   total = 10
   timer = 825 (ms)
 } is not None)
2018-03-02 18:59:09,094 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:09,094 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:09,094 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21120 Browse test_combinatorial_pagination_browse_range_no_overlap_32313430521995743328206113648437515719
2018-03-02 18:59:09,095 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:09,095 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:09,095 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:09,095 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:09,095 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:09,095 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21121 Browse test_combinatorial_pagination_browse_range_no_overlap_166130430484484755737408866567408950826 (mediaCollection){
   id = "Year:zero:1988"
   itemType = "container"
   displayType = "list"
   title = "1988"
   summary = "1988"
   canPlay = False
 })
2018-03-02 18:59:09,096 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:09,096 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:09,096 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1988, 0, 10000, None)
2018-03-02 18:59:09,097 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1988</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:09,098 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:10,375 [DEBUG] SONOS.suds.client - waited 1.276 (seconds) on server reply
2018-03-02 18:59:10,378 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>13</count>
            <total>13</total>
            <mediaCollection>
               <id>Shows:zero:1988:1988-03-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-03-20 – First Church in Cambridge – Cambridge, MA [1]</title>
               <summary>1988-03-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-05-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-05-25 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]</title>
               <summary>1988-05-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-05-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-05-26 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]</title>
               <summary>1988-05-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-05-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-05-27 – Wilmer&apos;s Park – Brandywine, MD [2] [SBD]</title>
               <summary>1988-05-27</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-05-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-05-29 – Molly&apos;s – Boston, MA [1] [SBD]</title>
               <summary>1988-05-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-07-14</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-07-14 – Cotati Cabaret – Cotati, CA USA [1]</title>
               <summary>1988-07-14</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-07-16</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-07-16 – Golden Gate Park – San Francisco, CA [3] [SBD]</title>
               <summary>1988-07-16</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-09-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-09-24 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1988-09-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-10-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-10-08 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1988-10-08</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-10-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-10-24 – Molly&apos;s – Boston, MA [1]</title>
               <summary>1988-10-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-10-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-10-29 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1988-10-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-11-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-11-26 – ChiChi Club – San Francisco, CA [1]</title>
               <summary>1988-11-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-12-30</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-12-30 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1988-12-30</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:10,405 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1988:1988-03-20"
         itemType = "container"
         displayType = "list"
         title = "1988-03-20 – First Church in Cambridge – Cambridge, MA [1]"
         summary = "1988-03-20"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-25"
         itemType = "container"
         displayType = "list"
         title = "1988-05-25 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]"
         summary = "1988-05-25"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-26"
         itemType = "container"
         displayType = "list"
         title = "1988-05-26 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]"
         summary = "1988-05-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-27"
         itemType = "container"
         displayType = "list"
         title = "1988-05-27 – Wilmer's Park – Brandywine, MD [2] [SBD]"
         summary = "1988-05-27"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-29"
         itemType = "container"
         displayType = "list"
         title = "1988-05-29 – Molly's – Boston, MA [1] [SBD]"
         summary = "1988-05-29"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-07-14"
         itemType = "container"
         displayType = "list"
         title = "1988-07-14 – Cotati Cabaret – Cotati, CA USA [1]"
         summary = "1988-07-14"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-07-16"
         itemType = "container"
         displayType = "list"
         title = "1988-07-16 – Golden Gate Park – San Francisco, CA [3] [SBD]"
         summary = "1988-07-16"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-09-24"
         itemType = "container"
         displayType = "list"
         title = "1988-09-24 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-09-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-10-08"
         itemType = "container"
         displayType = "list"
         title = "1988-10-08 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-10-08"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-10-24"
         itemType = "container"
         displayType = "list"
         title = "1988-10-24 – Molly's – Boston, MA [1]"
         summary = "1988-10-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-10-29"
         itemType = "container"
         displayType = "list"
         title = "1988-10-29 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-10-29"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-11-26"
         itemType = "container"
         displayType = "list"
         title = "1988-11-26 – ChiChi Club – San Francisco, CA [1]"
         summary = "1988-11-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-12-30"
         itemType = "container"
         displayType = "list"
         title = "1988-12-30 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-12-30"
         canPlay = True
      },
   index = 0
   count = 13
   total = 13
   timer = 1.276 (seconds)
 } is not None)
2018-03-02 18:59:10,405 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:10,405 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:10,405 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21121 Browse test_combinatorial_pagination_browse_range_no_overlap_166130430484484755737408866567408950826
2018-03-02 18:59:10,406 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:10,406 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:10,406 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:10,406 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:10,407 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:10,407 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21122 Browse test_combinatorial_pagination_browse_range_no_overlap_66834922482767337886545463292567736593 (mediaCollection){
   id = "Year:zero:1989"
   itemType = "container"
   displayType = "list"
   title = "1989"
   summary = "1989"
   canPlay = False
 })
2018-03-02 18:59:10,407 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:10,408 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:10,408 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1989, 0, 10000, None)
2018-03-02 18:59:10,413 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1989</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:10,414 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:11,109 [DEBUG] SONOS.suds.client - waited 695 (ms) on server reply
2018-03-02 18:59:11,112 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaCollection>
               <id>Shows:zero:1989:1989-02-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-02-17 – Pine Street Theater – Portland, OR [1] [SBD]</title>
               <summary>1989-02-17</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-04-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-04-12 – Sensations – Boyertown, PA [1] [SBD]</title>
               <summary>1989-04-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-04-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-04-13 – Ambler Cafe – Ambler, PA [1] [SBD]</title>
               <summary>1989-04-13</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-04-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-04-15 – Wetlands Preserve – New York, NY [1] [SBD]</title>
               <summary>1989-04-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-04-16</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-04-16 – Llyod&apos;s – Hartford, CT [1]</title>
               <summary>1989-04-16</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-07-09</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-07-09 – Pine Street Theater – Portland, OR [1] [SBD]</title>
               <summary>1989-07-09</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-11-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-11-18 – 23 East Cabaret – Ardmore, PA [1] [SBD]</title>
               <summary>1989-11-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:11,124 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1989:1989-02-17"
         itemType = "container"
         displayType = "list"
         title = "1989-02-17 – Pine Street Theater – Portland, OR [1] [SBD]"
         summary = "1989-02-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-12"
         itemType = "container"
         displayType = "list"
         title = "1989-04-12 – Sensations – Boyertown, PA [1] [SBD]"
         summary = "1989-04-12"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-13"
         itemType = "container"
         displayType = "list"
         title = "1989-04-13 – Ambler Cafe – Ambler, PA [1] [SBD]"
         summary = "1989-04-13"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-15"
         itemType = "container"
         displayType = "list"
         title = "1989-04-15 – Wetlands Preserve – New York, NY [1] [SBD]"
         summary = "1989-04-15"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-16"
         itemType = "container"
         displayType = "list"
         title = "1989-04-16 – Llyod's – Hartford, CT [1]"
         summary = "1989-04-16"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-07-09"
         itemType = "container"
         displayType = "list"
         title = "1989-07-09 – Pine Street Theater – Portland, OR [1] [SBD]"
         summary = "1989-07-09"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-11-18"
         itemType = "container"
         displayType = "list"
         title = "1989-11-18 – 23 East Cabaret – Ardmore, PA [1] [SBD]"
         summary = "1989-11-18"
         canPlay = True
      },
   index = 0
   count = 7
   total = 7
   timer = 695 (ms)
 } is not None)
2018-03-02 18:59:11,124 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:11,124 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:11,124 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21122 Browse test_combinatorial_pagination_browse_range_no_overlap_66834922482767337886545463292567736593
2018-03-02 18:59:11,125 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:11,125 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:11,125 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:11,125 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:11,125 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:11,125 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21123 Browse test_combinatorial_pagination_browse_range_no_overlap_142946634826804382140352698304977509803 (mediaCollection){
   id = "Year:zero:1990"
   itemType = "container"
   displayType = "list"
   title = "1990"
   summary = "1990"
   canPlay = False
 })
2018-03-02 18:59:11,126 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:11,126 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:11,126 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1990, 0, 10000, None)
2018-03-02 18:59:11,128 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1990</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:11,129 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:11,951 [DEBUG] SONOS.suds.client - waited 821 (ms) on server reply
2018-03-02 18:59:11,953 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>6</count>
            <total>6</total>
            <mediaCollection>
               <id>Shows:zero:1990:1990-05-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-05-26 – Sweetwater Saloon – Mill Valley, CA [1]</title>
               <summary>1990-05-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-06-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-06-20 – 23 East Cabaret – Ardmore, PA [1] [SBD]</title>
               <summary>1990-06-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-06-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-06-21 – Acorn Club – Bethlehem, PA [1] [SBD]</title>
               <summary>1990-06-21</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-08-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-08-24 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1990-08-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-08-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-08-25 – River Festival at Midway Beach – Guerneville, CA [1] [SBD]</title>
               <summary>1990-08-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-09-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-09-15 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1990-09-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:11,963 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1990:1990-05-26"
         itemType = "container"
         displayType = "list"
         title = "1990-05-26 – Sweetwater Saloon – Mill Valley, CA [1]"
         summary = "1990-05-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-06-20"
         itemType = "container"
         displayType = "list"
         title = "1990-06-20 – 23 East Cabaret – Ardmore, PA [1] [SBD]"
         summary = "1990-06-20"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-06-21"
         itemType = "container"
         displayType = "list"
         title = "1990-06-21 – Acorn Club – Bethlehem, PA [1] [SBD]"
         summary = "1990-06-21"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-08-24"
         itemType = "container"
         displayType = "list"
         title = "1990-08-24 – Last Day Saloon – San Francisco, CA [1]"
         summary = "1990-08-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-08-25"
         itemType = "container"
         displayType = "list"
         title = "1990-08-25 – River Festival at Midway Beach – Guerneville, CA [1] [SBD]"
         summary = "1990-08-25"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-09-15"
         itemType = "container"
         displayType = "list"
         title = "1990-09-15 – Last Day Saloon – San Francisco, CA [1]"
         summary = "1990-09-15"
         canPlay = True
      },
   index = 0
   count = 6
   total = 6
   timer = 821 (ms)
 } is not None)
2018-03-02 18:59:11,963 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:11,963 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:11,963 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21123 Browse test_combinatorial_pagination_browse_range_no_overlap_142946634826804382140352698304977509803
2018-03-02 18:59:11,963 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:11,964 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:11,964 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:11,964 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:11,964 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:11,964 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21124 Browse test_combinatorial_pagination_browse_range_no_overlap_313666336370332915645905533207382558323 (mediaCollection){
   id = "Year:zero:1991"
   itemType = "container"
   displayType = "list"
   title = "1991"
   summary = "1991"
   canPlay = False
 })
2018-03-02 18:59:11,964 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:11,965 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:11,965 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1991, 0, 10000, None)
2018-03-02 18:59:11,966 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1991</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:11,967 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:12,785 [DEBUG] SONOS.suds.client - waited 818 (ms) on server reply
2018-03-02 18:59:12,788 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>10</count>
            <total>10</total>
            <mediaCollection>
               <id>Shows:zero:1991:1991-01-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-01-23 – Johshas – Breckenridge Colorado [1]</title>
               <summary>1991-01-23</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-03-30</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-03-30 – Starry Plough – Berkeley, CA [1]</title>
               <summary>1991-03-30</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-06-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-06-08 – Wetlands – New York City, NY [1] [SBD]</title>
               <summary>1991-06-08</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-06-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-06-13 – The Bayou – Washington, DC [1]</title>
               <summary>1991-06-13</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-06-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-06-15 – Chestnut Cabaret – Philadelphia, PA [1]</title>
               <summary>1991-06-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-08-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-08-03 [1]</title>
               <summary>1991-08-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-09-07</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-09-07 – The Starry Plough – Berkeley, Ca [2]</title>
               <summary>1991-09-07</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-10-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-10-12 – Rock Candy – Seattle, WA [1] [SBD]</title>
               <summary>1991-10-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-10-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-10-17 – Sweetwater – Mill Valley, Ca [1]</title>
               <summary>1991-10-17</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-12-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-12-29 – Last Day Saloon – San Francisco, CA [1] [SBD]</title>
               <summary>1991-12-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:12,807 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1991:1991-01-23"
         itemType = "container"
         displayType = "list"
         title = "1991-01-23 – Johshas – Breckenridge Colorado [1]"
         summary = "1991-01-23"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-03-30"
         itemType = "container"
         displayType = "list"
         title = "1991-03-30 – Starry Plough – Berkeley, CA [1]"
         summary = "1991-03-30"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-06-08"
         itemType = "container"
         displayType = "list"
         title = "1991-06-08 – Wetlands – New York City, NY [1] [SBD]"
         summary = "1991-06-08"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-06-13"
         itemType = "container"
         displayType = "list"
         title = "1991-06-13 – The Bayou – Washington, DC [1]"
         summary = "1991-06-13"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-06-15"
         itemType = "container"
         displayType = "list"
         title = "1991-06-15 – Chestnut Cabaret – Philadelphia, PA [1]"
         summary = "1991-06-15"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-08-03"
         itemType = "container"
         displayType = "list"
         title = "1991-08-03 [1]"
         summary = "1991-08-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-09-07"
         itemType = "container"
         displayType = "list"
         title = "1991-09-07 – The Starry Plough – Berkeley, Ca [2]"
         summary = "1991-09-07"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-10-12"
         itemType = "container"
         displayType = "list"
         title = "1991-10-12 – Rock Candy – Seattle, WA [1] [SBD]"
         summary = "1991-10-12"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-10-17"
         itemType = "container"
         displayType = "list"
         title = "1991-10-17 – Sweetwater – Mill Valley, Ca [1]"
         summary = "1991-10-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-12-29"
         itemType = "container"
         displayType = "list"
         title = "1991-12-29 – Last Day Saloon – San Francisco, CA [1] [SBD]"
         summary = "1991-12-29"
         canPlay = True
      },
   index = 0
   count = 10
   total = 10
   timer = 818 (ms)
 } is not None)
2018-03-02 18:59:12,807 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:12,807 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:12,807 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21124 Browse test_combinatorial_pagination_browse_range_no_overlap_313666336370332915645905533207382558323
2018-03-02 18:59:12,808 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:12,808 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:12,808 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:12,808 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:12,808 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:12,808 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21125 Browse test_combinatorial_pagination_browse_range_no_overlap_250016865097916377665050870462481867629 (mediaCollection){
   id = "Year:zero:1992"
   itemType = "container"
   displayType = "list"
   title = "1992"
   summary = "1992"
   canPlay = False
 })
2018-03-02 18:59:12,809 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:12,809 [PASS] SONOS.sonos.workflow.fixture.Browse - Since duplicates are allowed in playlists, this test will not be run against playlists. (expression is False)
2018-03-02 18:59:12,809 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1992, 0, 10000, None)
2018-03-02 18:59:12,810 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1992</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:12,811 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:13,778 [DEBUG] SONOS.suds.client - waited 967 (ms) on server reply
2018-03-02 18:59:13,786 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>22</count>
            <total>22</total>
            <mediaCollection>
               <id>Shows:zero:1992:1992-01-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-01-18 [1]</title>
               <summary>1992-01-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-03-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-03-21 – Starry Plough – Berkeley, CA [1]</title>
               <summary>1992-03-21</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-04-04</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-04-04 – Rexville Grange – La Conner, WA [1]</title>
               <summary>1992-04-04</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-04-05</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-04-05 [1]</title>
               <summary>1992-04-05</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-03 – 8X10 Club – Baltimore, MD [1]</title>
               <summary>1992-05-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-04</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-04 – The Bayou – Washington, DC [1]</title>
               <summary>1992-05-04</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-05</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-05 – 23 East Cabaret – Ardmore, PA [2] [SBD]</title>
               <summary>1992-05-05</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-08 – Hamilton College – Clinton, NY [3] [SBD]</title>
               <summary>1992-05-08</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-09</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-09 – Municipal Cafe – Hartford, Connecticut [1]</title>
               <summary>1992-05-09</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-22</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-22 – Sweetwater – Mill Valley, CA [1]</title>
               <summary>1992-05-22</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-06-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-06-06 – Starry Plough – Berkeley, CA [2]</title>
               <summary>1992-06-06</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-07-31</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-07-31 – GAMH – San Francisco, CA [1] [SBD]</title>
               <summary>1992-07-31</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-14</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-14 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1992-10-14</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-15 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1992-10-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-16</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-16 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1992-10-16</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-17 – Midway Beach – Guerneville, CA [2] [SBD]</title>
               <summary>1992-10-17</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-23 –  Humboldt State University Practice Fields – Arcata, California [2] [SBD]</title>
               <summary>1992-10-23</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-24 – Ashland Armory – Ashland, Oregon [1]</title>
               <summary>1992-10-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-25 – Wow Hall – Eugene, OR [1]</title>
               <summary>1992-10-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-11-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-11-20 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1992-11-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-11-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-11-27 – Dance Palace – Pt. Reyes, CA [1]</title>
               <summary>1992-11-27</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-12-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-12-18 – Sweetwater Saloon   ** 24 bit ** – Mill Valley CA [2]</title>
               <summary>1992-12-18</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:13,823 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1992:1992-01-18"
         itemType = "container"
         displayType = "list"
         title = "1992-01-18 [1]"
         summary = "1992-01-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-03-21"
         itemType = "container"
         displayType = "list"
         title = "1992-03-21 – Starry Plough – Berkeley, CA [1]"
         summary = "1992-03-21"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-04-04"
         itemType = "container"
         displayType = "list"
         title = "1992-04-04 – Rexville Grange – La Conner, WA [1]"
         summary = "1992-04-04"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-04-05"
         itemType = "container"
         displayType = "list"
         title = "1992-04-05 [1]"
         summary = "1992-04-05"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-03"
         itemType = "container"
         displayType = "list"
         title = "1992-05-03 – 8X10 Club – Baltimore, MD [1]"
         summary = "1992-05-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-04"
         itemType = "container"
         displayType = "list"
         title = "1992-05-04 – The Bayou – Washington, DC [1]"
         summary = "1992-05-04"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-05"
         itemType = "container"
         displayType = "list"
         title = "1992-05-05 – 23 East Cabaret – Ardmore, PA [2] [SBD]"
         summary = "1992-05-05"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-08"
         itemType = "container"
         displayType = "list"
         title = "1992-05-08 – Hamilton College – Clinton, NY [3] [SBD]"
         summary = "1992-05-08"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-09"
         itemType = "container"
         displayType = "list"
         title = "1992-05-09 – Municipal Cafe – Hartford, Connecticut [1]"
         summary = "1992-05-09"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-22"
         itemType = "container"
         displayType = "list"
         title = "1992-05-22 – Sweetwater – Mill Valley, CA [1]"
         summary = "1992-05-22"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-06-06"
         itemType = "container"
         displayType = "list"
         title = "1992-06-06 – Starry Plough – Berkeley, CA [2]"
         summary = "1992-06-06"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-07-31"
         itemType = "container"
         displayType = "list"
         title = "1992-07-31 – GAMH – San Francisco, CA [1] [SBD]"
         summary = "1992-07-31"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-14"
         itemType = "container"
         displayType = "list"
         title = "1992-10-14 – Great American Music Hall – San Francisco, CA [1]"
         summary = "1992-10-14"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-15"
         itemType = "container"
         displayType = "list"
         title = "1992-10-15 – Great American Music Hall – San Francisco, CA [1]"
         summary = "1992-10-15"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-16"
         itemType = "container"
         displayType = "list"
         title = "1992-10-16 – Great American Music Hall – San Francisco, CA [1]"
         summary = "1992-10-16"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-17"
         itemType = "container"
         displayType = "list"
         title = "1992-10-17 – Midway Beach – Guerneville, CA [2] [SBD]"
         summary = "1992-10-17"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-23"
         itemType = "container"
         displayType = "list"
         title = "1992-10-23 –  Humboldt State University Practice Fields – Arcata, California [2] [SBD]"
         summary = "1992-10-23"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-24"
         itemType = "container"
         displayType = "list"
         title = "1992-10-24 – Ashland Armory – Ashland, Oregon [1]"
         summary = "1992-10-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-25"
         itemType = "container"
         displayType = "list"
         title = "1992-10-25 – Wow Hall – Eugene, OR [1]"
         summary = "1992-10-25"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-11-20"
         itemType = "container"
         displayType = "list"
         title = "1992-11-20 – Last Day Saloon – San Francisco, CA [1]"
         summary = "1992-11-20"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-11-27"
         itemType = "container"
         displayType = "list"
         title = "1992-11-27 – Dance Palace – Pt. Reyes, CA [1]"
         summary = "1992-11-27"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-12-18"
         itemType = "container"
         displayType = "list"
         title = "1992-12-18 – Sweetwater Saloon   ** 24 bit ** – Mill Valley CA [2]"
         summary = "1992-12-18"
         canPlay = False
      },
   index = 0
   count = 22
   total = 22
   timer = 967 (ms)
 } is not None)
2018-03-02 18:59:13,823 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:13,823 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should be more than one page in a container for testing whether duplicates exist across non-overlapping ranges. (expression is False)
2018-03-02 18:59:13,824 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21125 Browse test_combinatorial_pagination_browse_range_no_overlap_250016865097916377665050870462481867629
2018-03-02 18:59:13,824 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:13,824 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:13,824 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:13,824 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:13,825 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:13,825 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 


2018-03-02 18:59:13,825 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_pagination_browse_range_no_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:13,825 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:59:13,825 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 


2018-03-02 18:59:13,825 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:13,825 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:13,826 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 18:59:13,827 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:13,827 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:15,243 [DEBUG] SONOS.suds.client - waited 1.416 (seconds) on server reply
2018-03-02 18:59:15,266 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:15,498 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetdata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 1.416 (seconds)
 } is not None)
2018-03-02 18:59:15,498 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:15,498 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21127 Browse test_combinatorial_pagination_browse_range_overlap_189683732810003785473237872954217389610 (mediaCollection){
   id = "Artist:zero"
   itemType = "artist"
   displayType = "list"
   title = "Zero"
   summary = "Zero"
   canPlay = False
 })
2018-03-02 18:59:15,499 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:15,499 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:15,499 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:zero, 0, 10000, None)
2018-03-02 18:59:15,500 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:zero</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:15,501 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:15,802 [DEBUG] SONOS.suds.client - waited 300 (ms) on server reply
2018-03-02 18:59:15,808 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>26</count>
            <total>26</total>
            <mediaCollection>
               <id>Year:zero:1984</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984</title>
               <summary>1984</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1985</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985</title>
               <summary>1985</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1986</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986</title>
               <summary>1986</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1987</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987</title>
               <summary>1987</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1988</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988</title>
               <summary>1988</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1989</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989</title>
               <summary>1989</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1990</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990</title>
               <summary>1990</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1991</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991</title>
               <summary>1991</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1992</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992</title>
               <summary>1992</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1993</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993</title>
               <summary>1993</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1994</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1994</title>
               <summary>1994</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1995</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1995</title>
               <summary>1995</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1996</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1996</title>
               <summary>1996</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1997</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1997</title>
               <summary>1997</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1998</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1998</title>
               <summary>1998</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1999</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1999</title>
               <summary>1999</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2000</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2000</title>
               <summary>2000</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2004</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2004</title>
               <summary>2004</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2005</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2005</title>
               <summary>2005</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2006</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2006</title>
               <summary>2006</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2007</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2007</title>
               <summary>2007</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2008</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2008</title>
               <summary>2008</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2011</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2011</title>
               <summary>2011</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2012</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2012</title>
               <summary>2012</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2013</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2013</title>
               <summary>2013</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:15,849 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Year:zero:1984"
         itemType = "container"
         displayType = "list"
         title = "1984"
         summary = "1984"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1985"
         itemType = "container"
         displayType = "list"
         title = "1985"
         summary = "1985"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1986"
         itemType = "container"
         displayType = "list"
         title = "1986"
         summary = "1986"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1987"
         itemType = "container"
         displayType = "list"
         title = "1987"
         summary = "1987"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1988"
         itemType = "container"
         displayType = "list"
         title = "1988"
         summary = "1988"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1989"
         itemType = "container"
         displayType = "list"
         title = "1989"
         summary = "1989"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1990"
         itemType = "container"
         displayType = "list"
         title = "1990"
         summary = "1990"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1991"
         itemType = "container"
         displayType = "list"
         title = "1991"
         summary = "1991"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1992"
         itemType = "container"
         displayType = "list"
         title = "1992"
         summary = "1992"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1993"
         itemType = "container"
         displayType = "list"
         title = "1993"
         summary = "1993"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1994"
         itemType = "container"
         displayType = "list"
         title = "1994"
         summary = "1994"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1995"
         itemType = "container"
         displayType = "list"
         title = "1995"
         summary = "1995"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1996"
         itemType = "container"
         displayType = "list"
         title = "1996"
         summary = "1996"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1997"
         itemType = "container"
         displayType = "list"
         title = "1997"
         summary = "1997"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1998"
         itemType = "container"
         displayType = "list"
         title = "1998"
         summary = "1998"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1999"
         itemType = "container"
         displayType = "list"
         title = "1999"
         summary = "1999"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2000"
         itemType = "container"
         displayType = "list"
         title = "2000"
         summary = "2000"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2004"
         itemType = "container"
         displayType = "list"
         title = "2004"
         summary = "2004"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2005"
         itemType = "container"
         displayType = "list"
         title = "2005"
         summary = "2005"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2006"
         itemType = "container"
         displayType = "list"
         title = "2006"
         summary = "2006"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2007"
         itemType = "container"
         displayType = "list"
         title = "2007"
         summary = "2007"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2008"
         itemType = "container"
         displayType = "list"
         title = "2008"
         summary = "2008"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2011"
         itemType = "container"
         displayType = "list"
         title = "2011"
         summary = "2011"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2012"
         itemType = "container"
         displayType = "list"
         title = "2012"
         summary = "2012"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2013"
         itemType = "container"
         displayType = "list"
         title = "2013"
         summary = "2013"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2016"
         itemType = "container"
         displayType = "list"
         title = "2016"
         summary = "2016"
         canPlay = False
      },
   index = 0
   count = 26
   total = 26
   timer = 300 (ms)
 } is not None)
2018-03-02 18:59:15,849 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:15,850 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Year:zero:1984"
         itemType = "container"
         displayType = "list"
         title = "1984"
         summary = "1984"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1985"
         itemType = "container"
         displayType = "list"
         title = "1985"
         summary = "1985"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1986"
         itemType = "container"
         displayType = "list"
         title = "1986"
         summary = "1986"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1987"
         itemType = "container"
         displayType = "list"
         title = "1987"
         summary = "1987"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1988"
         itemType = "container"
         displayType = "list"
         title = "1988"
         summary = "1988"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1989"
         itemType = "container"
         displayType = "list"
         title = "1989"
         summary = "1989"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1990"
         itemType = "container"
         displayType = "list"
         title = "1990"
         summary = "1990"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1991"
         itemType = "container"
         displayType = "list"
         title = "1991"
         summary = "1991"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1992"
         itemType = "container"
         displayType = "list"
         title = "1992"
         summary = "1992"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1993"
         itemType = "container"
         displayType = "list"
         title = "1993"
         summary = "1993"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1994"
         itemType = "container"
         displayType = "list"
         title = "1994"
         summary = "1994"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1995"
         itemType = "container"
         displayType = "list"
         title = "1995"
         summary = "1995"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1996"
         itemType = "container"
         displayType = "list"
         title = "1996"
         summary = "1996"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1997"
         itemType = "container"
         displayType = "list"
         title = "1997"
         summary = "1997"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1998"
         itemType = "container"
         displayType = "list"
         title = "1998"
         summary = "1998"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:1999"
         itemType = "container"
         displayType = "list"
         title = "1999"
         summary = "1999"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2000"
         itemType = "container"
         displayType = "list"
         title = "2000"
         summary = "2000"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2004"
         itemType = "container"
         displayType = "list"
         title = "2004"
         summary = "2004"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2005"
         itemType = "container"
         displayType = "list"
         title = "2005"
         summary = "2005"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2006"
         itemType = "container"
         displayType = "list"
         title = "2006"
         summary = "2006"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2007"
         itemType = "container"
         displayType = "list"
         title = "2007"
         summary = "2007"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2008"
         itemType = "container"
         displayType = "list"
         title = "2008"
         summary = "2008"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2011"
         itemType = "container"
         displayType = "list"
         title = "2011"
         summary = "2011"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2012"
         itemType = "container"
         displayType = "list"
         title = "2012"
         summary = "2012"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2013"
         itemType = "container"
         displayType = "list"
         title = "2013"
         summary = "2013"
         canPlay = False
      },
      (mediaCollection){
         id = "Year:zero:2016"
         itemType = "container"
         displayType = "list"
         title = "2016"
         summary = "2016"
         canPlay = False
      },
   index = 0
   count = 26
   total = 26
   timer = 300 (ms)
 } is not None)
2018-03-02 18:59:15,850 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:15,851 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21127 Browse test_combinatorial_pagination_browse_range_overlap_189683732810003785473237872954217389610
2018-03-02 18:59:15,851 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:15,851 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:15,851 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:15,851 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:15,851 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:zero, 0, 10000, None)
2018-03-02 18:59:15,853 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:zero</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:15,853 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:16,197 [DEBUG] SONOS.suds.client - waited 344 (ms) on server reply
2018-03-02 18:59:16,204 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>26</count>
            <total>26</total>
            <mediaCollection>
               <id>Year:zero:1984</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984</title>
               <summary>1984</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1985</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985</title>
               <summary>1985</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1986</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986</title>
               <summary>1986</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1987</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987</title>
               <summary>1987</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1988</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988</title>
               <summary>1988</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1989</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989</title>
               <summary>1989</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1990</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990</title>
               <summary>1990</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1991</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991</title>
               <summary>1991</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1992</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992</title>
               <summary>1992</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1993</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993</title>
               <summary>1993</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1994</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1994</title>
               <summary>1994</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1995</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1995</title>
               <summary>1995</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1996</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1996</title>
               <summary>1996</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1997</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1997</title>
               <summary>1997</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1998</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1998</title>
               <summary>1998</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1999</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1999</title>
               <summary>1999</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2000</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2000</title>
               <summary>2000</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2004</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2004</title>
               <summary>2004</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2005</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2005</title>
               <summary>2005</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2006</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2006</title>
               <summary>2006</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2007</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2007</title>
               <summary>2007</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2008</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2008</title>
               <summary>2008</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2011</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2011</title>
               <summary>2011</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2012</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2012</title>
               <summary>2012</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2013</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2013</title>
               <summary>2013</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:16,240 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:16,241 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21128 Browse test_combinatorial_pagination_browse_range_overlap_31236954195180176115073049996686694582 (mediaCollection){
   id = "Year:zero:1984"
   itemType = "container"
   displayType = "list"
   title = "1984"
   summary = "1984"
   canPlay = False
 })
2018-03-02 18:59:16,241 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:16,241 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:16,241 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1984, 0, 10000, None)
2018-03-02 18:59:16,243 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1984</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:16,243 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:16,659 [DEBUG] SONOS.suds.client - waited 416 (ms) on server reply
2018-03-02 18:59:16,661 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>1</count>
            <total>1</total>
            <mediaCollection>
               <id>Shows:zero:1984:1984-12-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984-12-26 – The Stone – San Francisco, CA [1]</title>
               <summary>1984-12-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:16,663 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1984:1984-12-26"
         itemType = "container"
         displayType = "list"
         title = "1984-12-26 – The Stone – San Francisco, CA [1]"
         summary = "1984-12-26"
         canPlay = True
      },
   index = 0
   count = 1
   total = 1
   timer = 416 (ms)
 } is not None)
2018-03-02 18:59:16,664 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:16,664 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1984:1984-12-26"
         itemType = "container"
         displayType = "list"
         title = "1984-12-26 – The Stone – San Francisco, CA [1]"
         summary = "1984-12-26"
         canPlay = True
      },
   index = 0
   count = 1
   total = 1
   timer = 416 (ms)
 } is not None)
2018-03-02 18:59:16,664 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:16,664 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21128 Browse test_combinatorial_pagination_browse_range_overlap_31236954195180176115073049996686694582
2018-03-02 18:59:16,664 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:16,664 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:16,664 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:16,665 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:16,665 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:16,665 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21129 Browse test_combinatorial_pagination_browse_range_overlap_39251622189671488654401127192550400889 (mediaCollection){
   id = "Year:zero:1985"
   itemType = "container"
   displayType = "list"
   title = "1985"
   summary = "1985"
   canPlay = False
 })
2018-03-02 18:59:16,665 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:16,665 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:16,666 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1985, 0, 10000, None)
2018-03-02 18:59:16,667 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1985</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:16,668 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:17,086 [DEBUG] SONOS.suds.client - waited 417 (ms) on server reply
2018-03-02 18:59:17,088 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>4</count>
            <total>4</total>
            <mediaCollection>
               <id>Shows:zero:1985:1985-01-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-01-02 – Cabaret Cotati – Cotati, CA [1]</title>
               <summary>1985-01-02</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-04-11</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-04-11 – New George&apos;s Night Club – San Rafael, CA [1]</title>
               <summary>1985-04-11</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-07-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-07-17 – New George&apos;s – San Rafael, CA [1] [SBD]</title>
               <summary>1985-07-17</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1985:1985-12-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985-12-29 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1985-12-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:17,096 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1985:1985-01-02"
         itemType = "container"
         displayType = "list"
         title = "1985-01-02 – Cabaret Cotati – Cotati, CA [1]"
         summary = "1985-01-02"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-04-11"
         itemType = "container"
         displayType = "list"
         title = "1985-04-11 – New George's Night Club – San Rafael, CA [1]"
         summary = "1985-04-11"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-07-17"
         itemType = "container"
         displayType = "list"
         title = "1985-07-17 – New George's – San Rafael, CA [1] [SBD]"
         summary = "1985-07-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-12-29"
         itemType = "container"
         displayType = "list"
         title = "1985-12-29 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1985-12-29"
         canPlay = True
      },
   index = 0
   count = 4
   total = 4
   timer = 417 (ms)
 } is not None)
2018-03-02 18:59:17,096 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:17,096 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1985:1985-01-02"
         itemType = "container"
         displayType = "list"
         title = "1985-01-02 – Cabaret Cotati – Cotati, CA [1]"
         summary = "1985-01-02"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-04-11"
         itemType = "container"
         displayType = "list"
         title = "1985-04-11 – New George's Night Club – San Rafael, CA [1]"
         summary = "1985-04-11"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-07-17"
         itemType = "container"
         displayType = "list"
         title = "1985-07-17 – New George's – San Rafael, CA [1] [SBD]"
         summary = "1985-07-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1985:1985-12-29"
         itemType = "container"
         displayType = "list"
         title = "1985-12-29 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1985-12-29"
         canPlay = True
      },
   index = 0
   count = 4
   total = 4
   timer = 417 (ms)
 } is not None)
2018-03-02 18:59:17,097 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:17,097 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21129 Browse test_combinatorial_pagination_browse_range_overlap_39251622189671488654401127192550400889
2018-03-02 18:59:17,097 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:17,097 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:17,097 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:17,097 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:17,098 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:17,098 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21130 Browse test_combinatorial_pagination_browse_range_overlap_138447830155155323287372198047157482404 (mediaCollection){
   id = "Year:zero:1986"
   itemType = "container"
   displayType = "list"
   title = "1986"
   summary = "1986"
   canPlay = False
 })
2018-03-02 18:59:17,098 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:17,098 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:17,098 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1986, 0, 10000, None)
2018-03-02 18:59:17,100 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1986</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:17,100 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:17,493 [DEBUG] SONOS.suds.client - waited 392 (ms) on server reply
2018-03-02 18:59:17,496 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-01</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-01 – Capitol Theater – Passaic, NJ [1] [SBD]</title>
               <summary>1986-03-01</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-02 – The Ritz – New York, NY [2] [SBD]</title>
               <summary>1986-03-02</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-03 – Pulsations Night Club – Glen Mills, PA [1]</title>
               <summary>1986-03-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-03-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-03-23 – Kaiser Convention Center – Oakland, CA [1] [SBD]</title>
               <summary>1986-03-23</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-09-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-09-06 – River Theater – Guerneville, CA [1]</title>
               <summary>1986-09-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-12-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-12-03 – Lone Star Cafe – New York, NY [1]</title>
               <summary>1986-12-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1986:1986-12-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986-12-06 – Bogey&apos;s – Albany, NY [1]</title>
               <summary>1986-12-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:17,510 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-01"
         itemType = "container"
         displayType = "list"
         title = "1986-03-01 – Capitol Theater – Passaic, NJ [1] [SBD]"
         summary = "1986-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-02"
         itemType = "container"
         displayType = "list"
         title = "1986-03-02 – The Ritz – New York, NY [2] [SBD]"
         summary = "1986-03-02"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-03"
         itemType = "container"
         displayType = "list"
         title = "1986-03-03 – Pulsations Night Club – Glen Mills, PA [1]"
         summary = "1986-03-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-23"
         itemType = "container"
         displayType = "list"
         title = "1986-03-23 – Kaiser Convention Center – Oakland, CA [1] [SBD]"
         summary = "1986-03-23"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-09-06"
         itemType = "container"
         displayType = "list"
         title = "1986-09-06 – River Theater – Guerneville, CA [1]"
         summary = "1986-09-06"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-03"
         itemType = "container"
         displayType = "list"
         title = "1986-12-03 – Lone Star Cafe – New York, NY [1]"
         summary = "1986-12-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-06"
         itemType = "container"
         displayType = "list"
         title = "1986-12-06 – Bogey's – Albany, NY [1]"
         summary = "1986-12-06"
         canPlay = True
      },
   index = 0
   count = 7
   total = 7
   timer = 392 (ms)
 } is not None)
2018-03-02 18:59:17,510 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:17,510 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-01"
         itemType = "container"
         displayType = "list"
         title = "1986-03-01 – Capitol Theater – Passaic, NJ [1] [SBD]"
         summary = "1986-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-02"
         itemType = "container"
         displayType = "list"
         title = "1986-03-02 – The Ritz – New York, NY [2] [SBD]"
         summary = "1986-03-02"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-03"
         itemType = "container"
         displayType = "list"
         title = "1986-03-03 – Pulsations Night Club – Glen Mills, PA [1]"
         summary = "1986-03-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-03-23"
         itemType = "container"
         displayType = "list"
         title = "1986-03-23 – Kaiser Convention Center – Oakland, CA [1] [SBD]"
         summary = "1986-03-23"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-09-06"
         itemType = "container"
         displayType = "list"
         title = "1986-09-06 – River Theater – Guerneville, CA [1]"
         summary = "1986-09-06"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-03"
         itemType = "container"
         displayType = "list"
         title = "1986-12-03 – Lone Star Cafe – New York, NY [1]"
         summary = "1986-12-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1986:1986-12-06"
         itemType = "container"
         displayType = "list"
         title = "1986-12-06 – Bogey's – Albany, NY [1]"
         summary = "1986-12-06"
         canPlay = True
      },
   index = 0
   count = 7
   total = 7
   timer = 392 (ms)
 } is not None)
2018-03-02 18:59:17,511 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:17,511 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21130 Browse test_combinatorial_pagination_browse_range_overlap_138447830155155323287372198047157482404
2018-03-02 18:59:17,511 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:17,511 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:17,511 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:17,511 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:17,511 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:17,512 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21131 Browse test_combinatorial_pagination_browse_range_overlap_32313430521995743328206113648437515719 (mediaCollection){
   id = "Year:zero:1987"
   itemType = "container"
   displayType = "list"
   title = "1987"
   summary = "1987"
   canPlay = False
 })
2018-03-02 18:59:17,512 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:17,512 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:17,512 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1987, 0, 10000, None)
2018-03-02 18:59:17,513 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1987</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:17,514 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:17,920 [DEBUG] SONOS.suds.client - waited 405 (ms) on server reply
2018-03-02 18:59:17,923 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>10</count>
            <total>10</total>
            <mediaCollection>
               <id>Shows:zero:1987:1987-01-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-01-03 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1987-01-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-02-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-02-26 – Lone Star Cafe – New York, NY [1]</title>
               <summary>1987-02-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-02-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-02-27 – Empire Rock Club – Philadelphia, PA [1] [SBD]</title>
               <summary>1987-02-27</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-03-01</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-03-01 – Molly&apos;s – Boston, MA [1] [SBD]</title>
               <summary>1987-03-01</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-03-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-03-18 – Fillmore Auditorium – San Francisco, CA [1] [SBD]</title>
               <summary>1987-03-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-04-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-04-24 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1987-04-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-05-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-05-24 – Bolinas Community Center – Bolinas, CA [1] [SBD]</title>
               <summary>1987-05-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-18 – New Horizon Cafe – Richmond, VA [1] [SBD]</title>
               <summary>1987-06-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-24 – Agora Ballroom – Hartford, CT [1]</title>
               <summary>1987-06-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1987:1987-06-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987-06-27 – John Hopkins University – Baltimore MD [2] [SBD]</title>
               <summary>1987-06-27</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:17,938 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1987:1987-01-03"
         itemType = "container"
         displayType = "list"
         title = "1987-01-03 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-01-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-26"
         itemType = "container"
         displayType = "list"
         title = "1987-02-26 – Lone Star Cafe – New York, NY [1]"
         summary = "1987-02-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-27"
         itemType = "container"
         displayType = "list"
         title = "1987-02-27 – Empire Rock Club – Philadelphia, PA [1] [SBD]"
         summary = "1987-02-27"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-01"
         itemType = "container"
         displayType = "list"
         title = "1987-03-01 – Molly's – Boston, MA [1] [SBD]"
         summary = "1987-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-18"
         itemType = "container"
         displayType = "list"
         title = "1987-03-18 – Fillmore Auditorium – San Francisco, CA [1] [SBD]"
         summary = "1987-03-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-04-24"
         itemType = "container"
         displayType = "list"
         title = "1987-04-24 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-04-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-05-24"
         itemType = "container"
         displayType = "list"
         title = "1987-05-24 – Bolinas Community Center – Bolinas, CA [1] [SBD]"
         summary = "1987-05-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-18"
         itemType = "container"
         displayType = "list"
         title = "1987-06-18 – New Horizon Cafe – Richmond, VA [1] [SBD]"
         summary = "1987-06-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-24"
         itemType = "container"
         displayType = "list"
         title = "1987-06-24 – Agora Ballroom – Hartford, CT [1]"
         summary = "1987-06-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-27"
         itemType = "container"
         displayType = "list"
         title = "1987-06-27 – John Hopkins University – Baltimore MD [2] [SBD]"
         summary = "1987-06-27"
         canPlay = False
      },
   index = 0
   count = 10
   total = 10
   timer = 405 (ms)
 } is not None)
2018-03-02 18:59:17,938 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:17,939 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1987:1987-01-03"
         itemType = "container"
         displayType = "list"
         title = "1987-01-03 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-01-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-26"
         itemType = "container"
         displayType = "list"
         title = "1987-02-26 – Lone Star Cafe – New York, NY [1]"
         summary = "1987-02-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-02-27"
         itemType = "container"
         displayType = "list"
         title = "1987-02-27 – Empire Rock Club – Philadelphia, PA [1] [SBD]"
         summary = "1987-02-27"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-01"
         itemType = "container"
         displayType = "list"
         title = "1987-03-01 – Molly's – Boston, MA [1] [SBD]"
         summary = "1987-03-01"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-03-18"
         itemType = "container"
         displayType = "list"
         title = "1987-03-18 – Fillmore Auditorium – San Francisco, CA [1] [SBD]"
         summary = "1987-03-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-04-24"
         itemType = "container"
         displayType = "list"
         title = "1987-04-24 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1987-04-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-05-24"
         itemType = "container"
         displayType = "list"
         title = "1987-05-24 – Bolinas Community Center – Bolinas, CA [1] [SBD]"
         summary = "1987-05-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-18"
         itemType = "container"
         displayType = "list"
         title = "1987-06-18 – New Horizon Cafe – Richmond, VA [1] [SBD]"
         summary = "1987-06-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-24"
         itemType = "container"
         displayType = "list"
         title = "1987-06-24 – Agora Ballroom – Hartford, CT [1]"
         summary = "1987-06-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1987:1987-06-27"
         itemType = "container"
         displayType = "list"
         title = "1987-06-27 – John Hopkins University – Baltimore MD [2] [SBD]"
         summary = "1987-06-27"
         canPlay = False
      },
   index = 0
   count = 10
   total = 10
   timer = 405 (ms)
 } is not None)
2018-03-02 18:59:17,939 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:17,939 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21131 Browse test_combinatorial_pagination_browse_range_overlap_32313430521995743328206113648437515719
2018-03-02 18:59:17,940 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:17,940 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:17,940 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:17,940 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:17,940 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:17,940 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21132 Browse test_combinatorial_pagination_browse_range_overlap_166130430484484755737408866567408950826 (mediaCollection){
   id = "Year:zero:1988"
   itemType = "container"
   displayType = "list"
   title = "1988"
   summary = "1988"
   canPlay = False
 })
2018-03-02 18:59:17,941 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:17,941 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:17,941 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1988, 0, 10000, None)
2018-03-02 18:59:17,942 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1988</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:17,943 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:19,329 [DEBUG] SONOS.suds.client - waited 1.385 (seconds) on server reply
2018-03-02 18:59:19,333 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>13</count>
            <total>13</total>
            <mediaCollection>
               <id>Shows:zero:1988:1988-03-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-03-20 – First Church in Cambridge – Cambridge, MA [1]</title>
               <summary>1988-03-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-05-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-05-25 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]</title>
               <summary>1988-05-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-05-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-05-26 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]</title>
               <summary>1988-05-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-05-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-05-27 – Wilmer&apos;s Park – Brandywine, MD [2] [SBD]</title>
               <summary>1988-05-27</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-05-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-05-29 – Molly&apos;s – Boston, MA [1] [SBD]</title>
               <summary>1988-05-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-07-14</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-07-14 – Cotati Cabaret – Cotati, CA USA [1]</title>
               <summary>1988-07-14</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-07-16</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-07-16 – Golden Gate Park – San Francisco, CA [3] [SBD]</title>
               <summary>1988-07-16</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-09-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-09-24 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1988-09-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-10-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-10-08 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1988-10-08</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-10-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-10-24 – Molly&apos;s – Boston, MA [1]</title>
               <summary>1988-10-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-10-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-10-29 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1988-10-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-11-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-11-26 – ChiChi Club – San Francisco, CA [1]</title>
               <summary>1988-11-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1988:1988-12-30</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988-12-30 – Chi Chi Club – San Francisco, CA [1]</title>
               <summary>1988-12-30</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:19,353 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1988:1988-03-20"
         itemType = "container"
         displayType = "list"
         title = "1988-03-20 – First Church in Cambridge – Cambridge, MA [1]"
         summary = "1988-03-20"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-25"
         itemType = "container"
         displayType = "list"
         title = "1988-05-25 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]"
         summary = "1988-05-25"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-26"
         itemType = "container"
         displayType = "list"
         title = "1988-05-26 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]"
         summary = "1988-05-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-27"
         itemType = "container"
         displayType = "list"
         title = "1988-05-27 – Wilmer's Park – Brandywine, MD [2] [SBD]"
         summary = "1988-05-27"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-29"
         itemType = "container"
         displayType = "list"
         title = "1988-05-29 – Molly's – Boston, MA [1] [SBD]"
         summary = "1988-05-29"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-07-14"
         itemType = "container"
         displayType = "list"
         title = "1988-07-14 – Cotati Cabaret – Cotati, CA USA [1]"
         summary = "1988-07-14"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-07-16"
         itemType = "container"
         displayType = "list"
         title = "1988-07-16 – Golden Gate Park – San Francisco, CA [3] [SBD]"
         summary = "1988-07-16"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-09-24"
         itemType = "container"
         displayType = "list"
         title = "1988-09-24 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-09-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-10-08"
         itemType = "container"
         displayType = "list"
         title = "1988-10-08 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-10-08"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-10-24"
         itemType = "container"
         displayType = "list"
         title = "1988-10-24 – Molly's – Boston, MA [1]"
         summary = "1988-10-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-10-29"
         itemType = "container"
         displayType = "list"
         title = "1988-10-29 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-10-29"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-11-26"
         itemType = "container"
         displayType = "list"
         title = "1988-11-26 – ChiChi Club – San Francisco, CA [1]"
         summary = "1988-11-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-12-30"
         itemType = "container"
         displayType = "list"
         title = "1988-12-30 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-12-30"
         canPlay = True
      },
   index = 0
   count = 13
   total = 13
   timer = 1.385 (seconds)
 } is not None)
2018-03-02 18:59:19,354 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:19,354 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1988:1988-03-20"
         itemType = "container"
         displayType = "list"
         title = "1988-03-20 – First Church in Cambridge – Cambridge, MA [1]"
         summary = "1988-03-20"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-25"
         itemType = "container"
         displayType = "list"
         title = "1988-05-25 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]"
         summary = "1988-05-25"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-26"
         itemType = "container"
         displayType = "list"
         title = "1988-05-26 – Chestnut Cabaret – Philadelphia, PA [1] [SBD]"
         summary = "1988-05-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-27"
         itemType = "container"
         displayType = "list"
         title = "1988-05-27 – Wilmer's Park – Brandywine, MD [2] [SBD]"
         summary = "1988-05-27"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-05-29"
         itemType = "container"
         displayType = "list"
         title = "1988-05-29 – Molly's – Boston, MA [1] [SBD]"
         summary = "1988-05-29"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-07-14"
         itemType = "container"
         displayType = "list"
         title = "1988-07-14 – Cotati Cabaret – Cotati, CA USA [1]"
         summary = "1988-07-14"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-07-16"
         itemType = "container"
         displayType = "list"
         title = "1988-07-16 – Golden Gate Park – San Francisco, CA [3] [SBD]"
         summary = "1988-07-16"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-09-24"
         itemType = "container"
         displayType = "list"
         title = "1988-09-24 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-09-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-10-08"
         itemType = "container"
         displayType = "list"
         title = "1988-10-08 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-10-08"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-10-24"
         itemType = "container"
         displayType = "list"
         title = "1988-10-24 – Molly's – Boston, MA [1]"
         summary = "1988-10-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-10-29"
         itemType = "container"
         displayType = "list"
         title = "1988-10-29 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-10-29"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-11-26"
         itemType = "container"
         displayType = "list"
         title = "1988-11-26 – ChiChi Club – San Francisco, CA [1]"
         summary = "1988-11-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1988:1988-12-30"
         itemType = "container"
         displayType = "list"
         title = "1988-12-30 – Chi Chi Club – San Francisco, CA [1]"
         summary = "1988-12-30"
         canPlay = True
      },
   index = 0
   count = 13
   total = 13
   timer = 1.385 (seconds)
 } is not None)
2018-03-02 18:59:19,355 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:19,355 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21132 Browse test_combinatorial_pagination_browse_range_overlap_166130430484484755737408866567408950826
2018-03-02 18:59:19,355 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:19,355 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:19,355 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:19,355 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:19,355 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:19,356 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21133 Browse test_combinatorial_pagination_browse_range_overlap_66834922482767337886545463292567736593 (mediaCollection){
   id = "Year:zero:1989"
   itemType = "container"
   displayType = "list"
   title = "1989"
   summary = "1989"
   canPlay = False
 })
2018-03-02 18:59:19,356 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:19,356 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:19,356 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1989, 0, 10000, None)
2018-03-02 18:59:19,358 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1989</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:19,358 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:21,578 [DEBUG] SONOS.suds.client - waited 2.219 (seconds) on server reply
2018-03-02 18:59:21,579 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaCollection>
               <id>Shows:zero:1989:1989-02-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-02-17 – Pine Street Theater – Portland, OR [1] [SBD]</title>
               <summary>1989-02-17</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-04-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-04-12 – Sensations – Boyertown, PA [1] [SBD]</title>
               <summary>1989-04-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-04-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-04-13 – Ambler Cafe – Ambler, PA [1] [SBD]</title>
               <summary>1989-04-13</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-04-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-04-15 – Wetlands Preserve – New York, NY [1] [SBD]</title>
               <summary>1989-04-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-04-16</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-04-16 – Llyod&apos;s – Hartford, CT [1]</title>
               <summary>1989-04-16</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-07-09</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-07-09 – Pine Street Theater – Portland, OR [1] [SBD]</title>
               <summary>1989-07-09</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1989:1989-11-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989-11-18 – 23 East Cabaret – Ardmore, PA [1] [SBD]</title>
               <summary>1989-11-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:21,592 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1989:1989-02-17"
         itemType = "container"
         displayType = "list"
         title = "1989-02-17 – Pine Street Theater – Portland, OR [1] [SBD]"
         summary = "1989-02-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-12"
         itemType = "container"
         displayType = "list"
         title = "1989-04-12 – Sensations – Boyertown, PA [1] [SBD]"
         summary = "1989-04-12"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-13"
         itemType = "container"
         displayType = "list"
         title = "1989-04-13 – Ambler Cafe – Ambler, PA [1] [SBD]"
         summary = "1989-04-13"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-15"
         itemType = "container"
         displayType = "list"
         title = "1989-04-15 – Wetlands Preserve – New York, NY [1] [SBD]"
         summary = "1989-04-15"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-16"
         itemType = "container"
         displayType = "list"
         title = "1989-04-16 – Llyod's – Hartford, CT [1]"
         summary = "1989-04-16"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-07-09"
         itemType = "container"
         displayType = "list"
         title = "1989-07-09 – Pine Street Theater – Portland, OR [1] [SBD]"
         summary = "1989-07-09"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-11-18"
         itemType = "container"
         displayType = "list"
         title = "1989-11-18 – 23 East Cabaret – Ardmore, PA [1] [SBD]"
         summary = "1989-11-18"
         canPlay = True
      },
   index = 0
   count = 7
   total = 7
   timer = 2.219 (seconds)
 } is not None)
2018-03-02 18:59:21,592 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:21,593 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1989:1989-02-17"
         itemType = "container"
         displayType = "list"
         title = "1989-02-17 – Pine Street Theater – Portland, OR [1] [SBD]"
         summary = "1989-02-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-12"
         itemType = "container"
         displayType = "list"
         title = "1989-04-12 – Sensations – Boyertown, PA [1] [SBD]"
         summary = "1989-04-12"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-13"
         itemType = "container"
         displayType = "list"
         title = "1989-04-13 – Ambler Cafe – Ambler, PA [1] [SBD]"
         summary = "1989-04-13"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-15"
         itemType = "container"
         displayType = "list"
         title = "1989-04-15 – Wetlands Preserve – New York, NY [1] [SBD]"
         summary = "1989-04-15"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-04-16"
         itemType = "container"
         displayType = "list"
         title = "1989-04-16 – Llyod's – Hartford, CT [1]"
         summary = "1989-04-16"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-07-09"
         itemType = "container"
         displayType = "list"
         title = "1989-07-09 – Pine Street Theater – Portland, OR [1] [SBD]"
         summary = "1989-07-09"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1989:1989-11-18"
         itemType = "container"
         displayType = "list"
         title = "1989-11-18 – 23 East Cabaret – Ardmore, PA [1] [SBD]"
         summary = "1989-11-18"
         canPlay = True
      },
   index = 0
   count = 7
   total = 7
   timer = 2.219 (seconds)
 } is not None)
2018-03-02 18:59:21,593 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:21,593 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21133 Browse test_combinatorial_pagination_browse_range_overlap_66834922482767337886545463292567736593
2018-03-02 18:59:21,593 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:21,594 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:21,594 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:21,594 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:21,594 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:21,594 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21134 Browse test_combinatorial_pagination_browse_range_overlap_142946634826804382140352698304977509803 (mediaCollection){
   id = "Year:zero:1990"
   itemType = "container"
   displayType = "list"
   title = "1990"
   summary = "1990"
   canPlay = False
 })
2018-03-02 18:59:21,594 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:21,594 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:21,595 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1990, 0, 10000, None)
2018-03-02 18:59:21,596 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1990</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:21,596 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:23,954 [DEBUG] SONOS.suds.client - waited 2.357 (seconds) on server reply
2018-03-02 18:59:23,956 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>6</count>
            <total>6</total>
            <mediaCollection>
               <id>Shows:zero:1990:1990-05-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-05-26 – Sweetwater Saloon – Mill Valley, CA [1]</title>
               <summary>1990-05-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-06-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-06-20 – 23 East Cabaret – Ardmore, PA [1] [SBD]</title>
               <summary>1990-06-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-06-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-06-21 – Acorn Club – Bethlehem, PA [1] [SBD]</title>
               <summary>1990-06-21</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-08-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-08-24 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1990-08-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-08-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-08-25 – River Festival at Midway Beach – Guerneville, CA [1] [SBD]</title>
               <summary>1990-08-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-09-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-09-15 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1990-09-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:23,970 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1990:1990-05-26"
         itemType = "container"
         displayType = "list"
         title = "1990-05-26 – Sweetwater Saloon – Mill Valley, CA [1]"
         summary = "1990-05-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-06-20"
         itemType = "container"
         displayType = "list"
         title = "1990-06-20 – 23 East Cabaret – Ardmore, PA [1] [SBD]"
         summary = "1990-06-20"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-06-21"
         itemType = "container"
         displayType = "list"
         title = "1990-06-21 – Acorn Club – Bethlehem, PA [1] [SBD]"
         summary = "1990-06-21"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-08-24"
         itemType = "container"
         displayType = "list"
         title = "1990-08-24 – Last Day Saloon – San Francisco, CA [1]"
         summary = "1990-08-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-08-25"
         itemType = "container"
         displayType = "list"
         title = "1990-08-25 – River Festival at Midway Beach – Guerneville, CA [1] [SBD]"
         summary = "1990-08-25"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-09-15"
         itemType = "container"
         displayType = "list"
         title = "1990-09-15 – Last Day Saloon – San Francisco, CA [1]"
         summary = "1990-09-15"
         canPlay = True
      },
   index = 0
   count = 6
   total = 6
   timer = 2.357 (seconds)
 } is not None)
2018-03-02 18:59:23,970 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:23,970 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1990:1990-05-26"
         itemType = "container"
         displayType = "list"
         title = "1990-05-26 – Sweetwater Saloon – Mill Valley, CA [1]"
         summary = "1990-05-26"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-06-20"
         itemType = "container"
         displayType = "list"
         title = "1990-06-20 – 23 East Cabaret – Ardmore, PA [1] [SBD]"
         summary = "1990-06-20"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-06-21"
         itemType = "container"
         displayType = "list"
         title = "1990-06-21 – Acorn Club – Bethlehem, PA [1] [SBD]"
         summary = "1990-06-21"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-08-24"
         itemType = "container"
         displayType = "list"
         title = "1990-08-24 – Last Day Saloon – San Francisco, CA [1]"
         summary = "1990-08-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-08-25"
         itemType = "container"
         displayType = "list"
         title = "1990-08-25 – River Festival at Midway Beach – Guerneville, CA [1] [SBD]"
         summary = "1990-08-25"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1990:1990-09-15"
         itemType = "container"
         displayType = "list"
         title = "1990-09-15 – Last Day Saloon – San Francisco, CA [1]"
         summary = "1990-09-15"
         canPlay = True
      },
   index = 0
   count = 6
   total = 6
   timer = 2.357 (seconds)
 } is not None)
2018-03-02 18:59:23,970 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:23,970 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21134 Browse test_combinatorial_pagination_browse_range_overlap_142946634826804382140352698304977509803
2018-03-02 18:59:23,971 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:23,971 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:23,971 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:23,971 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:23,971 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:23,971 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21135 Browse test_combinatorial_pagination_browse_range_overlap_313666336370332915645905533207382558323 (mediaCollection){
   id = "Year:zero:1991"
   itemType = "container"
   displayType = "list"
   title = "1991"
   summary = "1991"
   canPlay = False
 })
2018-03-02 18:59:23,972 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:23,972 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:23,972 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1991, 0, 10000, None)
2018-03-02 18:59:23,974 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1991</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:23,974 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:25,164 [DEBUG] SONOS.suds.client - waited 1.189 (seconds) on server reply
2018-03-02 18:59:25,166 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>10</count>
            <total>10</total>
            <mediaCollection>
               <id>Shows:zero:1991:1991-01-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-01-23 – Johshas – Breckenridge Colorado [1]</title>
               <summary>1991-01-23</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-03-30</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-03-30 – Starry Plough – Berkeley, CA [1]</title>
               <summary>1991-03-30</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-06-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-06-08 – Wetlands – New York City, NY [1] [SBD]</title>
               <summary>1991-06-08</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-06-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-06-13 – The Bayou – Washington, DC [1]</title>
               <summary>1991-06-13</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-06-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-06-15 – Chestnut Cabaret – Philadelphia, PA [1]</title>
               <summary>1991-06-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-08-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-08-03 [1]</title>
               <summary>1991-08-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-09-07</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-09-07 – The Starry Plough – Berkeley, Ca [2]</title>
               <summary>1991-09-07</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-10-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-10-12 – Rock Candy – Seattle, WA [1] [SBD]</title>
               <summary>1991-10-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-10-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-10-17 – Sweetwater – Mill Valley, Ca [1]</title>
               <summary>1991-10-17</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-12-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-12-29 – Last Day Saloon – San Francisco, CA [1] [SBD]</title>
               <summary>1991-12-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:25,196 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1991:1991-01-23"
         itemType = "container"
         displayType = "list"
         title = "1991-01-23 – Johshas – Breckenridge Colorado [1]"
         summary = "1991-01-23"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-03-30"
         itemType = "container"
         displayType = "list"
         title = "1991-03-30 – Starry Plough – Berkeley, CA [1]"
         summary = "1991-03-30"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-06-08"
         itemType = "container"
         displayType = "list"
         title = "1991-06-08 – Wetlands – New York City, NY [1] [SBD]"
         summary = "1991-06-08"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-06-13"
         itemType = "container"
         displayType = "list"
         title = "1991-06-13 – The Bayou – Washington, DC [1]"
         summary = "1991-06-13"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-06-15"
         itemType = "container"
         displayType = "list"
         title = "1991-06-15 – Chestnut Cabaret – Philadelphia, PA [1]"
         summary = "1991-06-15"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-08-03"
         itemType = "container"
         displayType = "list"
         title = "1991-08-03 [1]"
         summary = "1991-08-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-09-07"
         itemType = "container"
         displayType = "list"
         title = "1991-09-07 – The Starry Plough – Berkeley, Ca [2]"
         summary = "1991-09-07"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-10-12"
         itemType = "container"
         displayType = "list"
         title = "1991-10-12 – Rock Candy – Seattle, WA [1] [SBD]"
         summary = "1991-10-12"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-10-17"
         itemType = "container"
         displayType = "list"
         title = "1991-10-17 – Sweetwater – Mill Valley, Ca [1]"
         summary = "1991-10-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-12-29"
         itemType = "container"
         displayType = "list"
         title = "1991-12-29 – Last Day Saloon – San Francisco, CA [1] [SBD]"
         summary = "1991-12-29"
         canPlay = True
      },
   index = 0
   count = 10
   total = 10
   timer = 1.189 (seconds)
 } is not None)
2018-03-02 18:59:25,196 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:25,197 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1991:1991-01-23"
         itemType = "container"
         displayType = "list"
         title = "1991-01-23 – Johshas – Breckenridge Colorado [1]"
         summary = "1991-01-23"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-03-30"
         itemType = "container"
         displayType = "list"
         title = "1991-03-30 – Starry Plough – Berkeley, CA [1]"
         summary = "1991-03-30"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-06-08"
         itemType = "container"
         displayType = "list"
         title = "1991-06-08 – Wetlands – New York City, NY [1] [SBD]"
         summary = "1991-06-08"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-06-13"
         itemType = "container"
         displayType = "list"
         title = "1991-06-13 – The Bayou – Washington, DC [1]"
         summary = "1991-06-13"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-06-15"
         itemType = "container"
         displayType = "list"
         title = "1991-06-15 – Chestnut Cabaret – Philadelphia, PA [1]"
         summary = "1991-06-15"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-08-03"
         itemType = "container"
         displayType = "list"
         title = "1991-08-03 [1]"
         summary = "1991-08-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-09-07"
         itemType = "container"
         displayType = "list"
         title = "1991-09-07 – The Starry Plough – Berkeley, Ca [2]"
         summary = "1991-09-07"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-10-12"
         itemType = "container"
         displayType = "list"
         title = "1991-10-12 – Rock Candy – Seattle, WA [1] [SBD]"
         summary = "1991-10-12"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-10-17"
         itemType = "container"
         displayType = "list"
         title = "1991-10-17 – Sweetwater – Mill Valley, Ca [1]"
         summary = "1991-10-17"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1991:1991-12-29"
         itemType = "container"
         displayType = "list"
         title = "1991-12-29 – Last Day Saloon – San Francisco, CA [1] [SBD]"
         summary = "1991-12-29"
         canPlay = True
      },
   index = 0
   count = 10
   total = 10
   timer = 1.189 (seconds)
 } is not None)
2018-03-02 18:59:25,197 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:25,197 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21135 Browse test_combinatorial_pagination_browse_range_overlap_313666336370332915645905533207382558323
2018-03-02 18:59:25,197 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:25,197 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:25,197 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:25,197 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:25,198 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:25,198 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21136 Browse test_combinatorial_pagination_browse_range_overlap_250016865097916377665050870462481867629 (mediaCollection){
   id = "Year:zero:1992"
   itemType = "container"
   displayType = "list"
   title = "1992"
   summary = "1992"
   canPlay = False
 })
2018-03-02 18:59:25,198 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must set strict WSDL enforcement ([Validation Settings]:strict in the config file) for this test to run. (expression is True)
2018-03-02 18:59:25,198 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:25,198 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1992, 0, 10000, None)
2018-03-02 18:59:25,200 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1992</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:25,201 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:28,270 [DEBUG] SONOS.suds.client - waited 3.069 (seconds) on server reply
2018-03-02 18:59:28,275 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>22</count>
            <total>22</total>
            <mediaCollection>
               <id>Shows:zero:1992:1992-01-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-01-18 [1]</title>
               <summary>1992-01-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-03-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-03-21 – Starry Plough – Berkeley, CA [1]</title>
               <summary>1992-03-21</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-04-04</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-04-04 – Rexville Grange – La Conner, WA [1]</title>
               <summary>1992-04-04</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-04-05</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-04-05 [1]</title>
               <summary>1992-04-05</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-03 – 8X10 Club – Baltimore, MD [1]</title>
               <summary>1992-05-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-04</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-04 – The Bayou – Washington, DC [1]</title>
               <summary>1992-05-04</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-05</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-05 – 23 East Cabaret – Ardmore, PA [2] [SBD]</title>
               <summary>1992-05-05</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-08 – Hamilton College – Clinton, NY [3] [SBD]</title>
               <summary>1992-05-08</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-09</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-09 – Municipal Cafe – Hartford, Connecticut [1]</title>
               <summary>1992-05-09</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-22</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-22 – Sweetwater – Mill Valley, CA [1]</title>
               <summary>1992-05-22</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-06-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-06-06 – Starry Plough – Berkeley, CA [2]</title>
               <summary>1992-06-06</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-07-31</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-07-31 – GAMH – San Francisco, CA [1] [SBD]</title>
               <summary>1992-07-31</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-14</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-14 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1992-10-14</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-15 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1992-10-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-16</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-16 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1992-10-16</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-17 – Midway Beach – Guerneville, CA [2] [SBD]</title>
               <summary>1992-10-17</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-23 –  Humboldt State University Practice Fields – Arcata, California [2] [SBD]</title>
               <summary>1992-10-23</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-24 – Ashland Armory – Ashland, Oregon [1]</title>
               <summary>1992-10-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-25 – Wow Hall – Eugene, OR [1]</title>
               <summary>1992-10-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-11-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-11-20 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1992-11-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-11-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-11-27 – Dance Palace – Pt. Reyes, CA [1]</title>
               <summary>1992-11-27</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-12-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-12-18 – Sweetwater Saloon   ** 24 bit ** – Mill Valley CA [2]</title>
               <summary>1992-12-18</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:28,358 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1992:1992-01-18"
         itemType = "container"
         displayType = "list"
         title = "1992-01-18 [1]"
         summary = "1992-01-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-03-21"
         itemType = "container"
         displayType = "list"
         title = "1992-03-21 – Starry Plough – Berkeley, CA [1]"
         summary = "1992-03-21"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-04-04"
         itemType = "container"
         displayType = "list"
         title = "1992-04-04 – Rexville Grange – La Conner, WA [1]"
         summary = "1992-04-04"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-04-05"
         itemType = "container"
         displayType = "list"
         title = "1992-04-05 [1]"
         summary = "1992-04-05"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-03"
         itemType = "container"
         displayType = "list"
         title = "1992-05-03 – 8X10 Club – Baltimore, MD [1]"
         summary = "1992-05-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-04"
         itemType = "container"
         displayType = "list"
         title = "1992-05-04 – The Bayou – Washington, DC [1]"
         summary = "1992-05-04"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-05"
         itemType = "container"
         displayType = "list"
         title = "1992-05-05 – 23 East Cabaret – Ardmore, PA [2] [SBD]"
         summary = "1992-05-05"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-08"
         itemType = "container"
         displayType = "list"
         title = "1992-05-08 – Hamilton College – Clinton, NY [3] [SBD]"
         summary = "1992-05-08"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-09"
         itemType = "container"
         displayType = "list"
         title = "1992-05-09 – Municipal Cafe – Hartford, Connecticut [1]"
         summary = "1992-05-09"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-22"
         itemType = "container"
         displayType = "list"
         title = "1992-05-22 – Sweetwater – Mill Valley, CA [1]"
         summary = "1992-05-22"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-06-06"
         itemType = "container"
         displayType = "list"
         title = "1992-06-06 – Starry Plough – Berkeley, CA [2]"
         summary = "1992-06-06"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-07-31"
         itemType = "container"
         displayType = "list"
         title = "1992-07-31 – GAMH – San Francisco, CA [1] [SBD]"
         summary = "1992-07-31"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-14"
         itemType = "container"
         displayType = "list"
         title = "1992-10-14 – Great American Music Hall – San Francisco, CA [1]"
         summary = "1992-10-14"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-15"
         itemType = "container"
         displayType = "list"
         title = "1992-10-15 – Great American Music Hall – San Francisco, CA [1]"
         summary = "1992-10-15"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-16"
         itemType = "container"
         displayType = "list"
         title = "1992-10-16 – Great American Music Hall – San Francisco, CA [1]"
         summary = "1992-10-16"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-17"
         itemType = "container"
         displayType = "list"
         title = "1992-10-17 – Midway Beach – Guerneville, CA [2] [SBD]"
         summary = "1992-10-17"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-23"
         itemType = "container"
         displayType = "list"
         title = "1992-10-23 –  Humboldt State University Practice Fields – Arcata, California [2] [SBD]"
         summary = "1992-10-23"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-24"
         itemType = "container"
         displayType = "list"
         title = "1992-10-24 – Ashland Armory – Ashland, Oregon [1]"
         summary = "1992-10-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-25"
         itemType = "container"
         displayType = "list"
         title = "1992-10-25 – Wow Hall – Eugene, OR [1]"
         summary = "1992-10-25"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-11-20"
         itemType = "container"
         displayType = "list"
         title = "1992-11-20 – Last Day Saloon – San Francisco, CA [1]"
         summary = "1992-11-20"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-11-27"
         itemType = "container"
         displayType = "list"
         title = "1992-11-27 – Dance Palace – Pt. Reyes, CA [1]"
         summary = "1992-11-27"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-12-18"
         itemType = "container"
         displayType = "list"
         title = "1992-12-18 – Sweetwater Saloon   ** 24 bit ** – Mill Valley CA [2]"
         summary = "1992-12-18"
         canPlay = False
      },
   index = 0
   count = 22
   total = 22
   timer = 3.069 (seconds)
 } is not None)
2018-03-02 18:59:28,358 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return a non-empty list. (expression is True)
2018-03-02 18:59:28,360 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetadata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Shows:zero:1992:1992-01-18"
         itemType = "container"
         displayType = "list"
         title = "1992-01-18 [1]"
         summary = "1992-01-18"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-03-21"
         itemType = "container"
         displayType = "list"
         title = "1992-03-21 – Starry Plough – Berkeley, CA [1]"
         summary = "1992-03-21"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-04-04"
         itemType = "container"
         displayType = "list"
         title = "1992-04-04 – Rexville Grange – La Conner, WA [1]"
         summary = "1992-04-04"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-04-05"
         itemType = "container"
         displayType = "list"
         title = "1992-04-05 [1]"
         summary = "1992-04-05"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-03"
         itemType = "container"
         displayType = "list"
         title = "1992-05-03 – 8X10 Club – Baltimore, MD [1]"
         summary = "1992-05-03"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-04"
         itemType = "container"
         displayType = "list"
         title = "1992-05-04 – The Bayou – Washington, DC [1]"
         summary = "1992-05-04"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-05"
         itemType = "container"
         displayType = "list"
         title = "1992-05-05 – 23 East Cabaret – Ardmore, PA [2] [SBD]"
         summary = "1992-05-05"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-08"
         itemType = "container"
         displayType = "list"
         title = "1992-05-08 – Hamilton College – Clinton, NY [3] [SBD]"
         summary = "1992-05-08"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-09"
         itemType = "container"
         displayType = "list"
         title = "1992-05-09 – Municipal Cafe – Hartford, Connecticut [1]"
         summary = "1992-05-09"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-05-22"
         itemType = "container"
         displayType = "list"
         title = "1992-05-22 – Sweetwater – Mill Valley, CA [1]"
         summary = "1992-05-22"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-06-06"
         itemType = "container"
         displayType = "list"
         title = "1992-06-06 – Starry Plough – Berkeley, CA [2]"
         summary = "1992-06-06"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-07-31"
         itemType = "container"
         displayType = "list"
         title = "1992-07-31 – GAMH – San Francisco, CA [1] [SBD]"
         summary = "1992-07-31"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-14"
         itemType = "container"
         displayType = "list"
         title = "1992-10-14 – Great American Music Hall – San Francisco, CA [1]"
         summary = "1992-10-14"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-15"
         itemType = "container"
         displayType = "list"
         title = "1992-10-15 – Great American Music Hall – San Francisco, CA [1]"
         summary = "1992-10-15"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-16"
         itemType = "container"
         displayType = "list"
         title = "1992-10-16 – Great American Music Hall – San Francisco, CA [1]"
         summary = "1992-10-16"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-17"
         itemType = "container"
         displayType = "list"
         title = "1992-10-17 – Midway Beach – Guerneville, CA [2] [SBD]"
         summary = "1992-10-17"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-23"
         itemType = "container"
         displayType = "list"
         title = "1992-10-23 –  Humboldt State University Practice Fields – Arcata, California [2] [SBD]"
         summary = "1992-10-23"
         canPlay = False
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-24"
         itemType = "container"
         displayType = "list"
         title = "1992-10-24 – Ashland Armory – Ashland, Oregon [1]"
         summary = "1992-10-24"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-10-25"
         itemType = "container"
         displayType = "list"
         title = "1992-10-25 – Wow Hall – Eugene, OR [1]"
         summary = "1992-10-25"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-11-20"
         itemType = "container"
         displayType = "list"
         title = "1992-11-20 – Last Day Saloon – San Francisco, CA [1]"
         summary = "1992-11-20"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-11-27"
         itemType = "container"
         displayType = "list"
         title = "1992-11-27 – Dance Palace – Pt. Reyes, CA [1]"
         summary = "1992-11-27"
         canPlay = True
      },
      (mediaCollection){
         id = "Shows:zero:1992:1992-12-18"
         itemType = "container"
         displayType = "list"
         title = "1992-12-18 – Sweetwater Saloon   ** 24 bit ** – Mill Valley CA [2]"
         summary = "1992-12-18"
         canPlay = False
      },
   index = 0
   count = 22
   total = 22
   timer = 3.069 (seconds)
 } is not None)
2018-03-02 18:59:28,361 [SKIP] SONOS.sonos.workflow.fixture.Browse - There should more than 1 page of items in a container for this test to run. (expression is False)
2018-03-02 18:59:28,361 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21136 Browse test_combinatorial_pagination_browse_range_overlap_250016865097916377665050870462481867629
2018-03-02 18:59:28,362 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:28,362 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:28,362 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:28,362 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:28,363 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:28,363 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 


2018-03-02 18:59:28,364 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_pagination_browse_range_overlap at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:28,364 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 18:59:28,364 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 


2018-03-02 18:59:28,364 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:28,364 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:28,364 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 18:59:28,366 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:28,366 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:28,778 [DEBUG] SONOS.suds.client - waited 410 (ms) on server reply
2018-03-02 18:59:28,800 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:28,977 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetdata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 410 (ms)
 } is not None)
2018-03-02 18:59:28,977 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:28,978 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21138 Browse test_combinatorial_test_browse_scroll_indices_189683732810003785473237872954217389610 (mediaCollection){
   id = "Artist:zero"
   itemType = "artist"
   displayType = "list"
   title = "Zero"
   summary = "Zero"
   canPlay = False
 })
2018-03-02 18:59:28,978 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:28,978 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:28,978 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21138 Browse test_combinatorial_test_browse_scroll_indices_189683732810003785473237872954217389610
2018-03-02 18:59:28,978 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:28,978 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:28,978 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:28,978 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:28,979 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:zero, 0, 10000, None)
2018-03-02 18:59:28,980 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:zero</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:28,980 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:29,266 [DEBUG] SONOS.suds.client - waited 285 (ms) on server reply
2018-03-02 18:59:29,272 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>26</count>
            <total>26</total>
            <mediaCollection>
               <id>Year:zero:1984</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984</title>
               <summary>1984</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1985</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985</title>
               <summary>1985</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1986</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986</title>
               <summary>1986</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1987</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987</title>
               <summary>1987</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1988</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988</title>
               <summary>1988</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1989</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989</title>
               <summary>1989</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1990</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990</title>
               <summary>1990</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1991</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991</title>
               <summary>1991</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1992</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992</title>
               <summary>1992</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1993</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993</title>
               <summary>1993</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1994</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1994</title>
               <summary>1994</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1995</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1995</title>
               <summary>1995</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1996</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1996</title>
               <summary>1996</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1997</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1997</title>
               <summary>1997</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1998</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1998</title>
               <summary>1998</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1999</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1999</title>
               <summary>1999</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2000</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2000</title>
               <summary>2000</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2004</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2004</title>
               <summary>2004</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2005</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2005</title>
               <summary>2005</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2006</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2006</title>
               <summary>2006</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2007</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2007</title>
               <summary>2007</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2008</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2008</title>
               <summary>2008</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2011</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2011</title>
               <summary>2011</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2012</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2012</title>
               <summary>2012</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2013</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2013</title>
               <summary>2013</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:29,311 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,312 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21139 Browse test_combinatorial_test_browse_scroll_indices_31236954195180176115073049996686694582 (mediaCollection){
   id = "Year:zero:1984"
   itemType = "container"
   displayType = "list"
   title = "1984"
   summary = "1984"
   canPlay = False
 })
2018-03-02 18:59:29,312 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,312 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,312 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21139 Browse test_combinatorial_test_browse_scroll_indices_31236954195180176115073049996686694582
2018-03-02 18:59:29,312 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,312 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,313 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,313 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,313 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,313 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21140 Browse test_combinatorial_test_browse_scroll_indices_39251622189671488654401127192550400889 (mediaCollection){
   id = "Year:zero:1985"
   itemType = "container"
   displayType = "list"
   title = "1985"
   summary = "1985"
   canPlay = False
 })
2018-03-02 18:59:29,313 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,313 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,313 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21140 Browse test_combinatorial_test_browse_scroll_indices_39251622189671488654401127192550400889
2018-03-02 18:59:29,313 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,314 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,314 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,314 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,314 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,314 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21141 Browse test_combinatorial_test_browse_scroll_indices_138447830155155323287372198047157482404 (mediaCollection){
   id = "Year:zero:1986"
   itemType = "container"
   displayType = "list"
   title = "1986"
   summary = "1986"
   canPlay = False
 })
2018-03-02 18:59:29,315 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,315 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,315 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21141 Browse test_combinatorial_test_browse_scroll_indices_138447830155155323287372198047157482404
2018-03-02 18:59:29,315 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,315 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,315 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,315 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,316 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,316 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21142 Browse test_combinatorial_test_browse_scroll_indices_32313430521995743328206113648437515719 (mediaCollection){
   id = "Year:zero:1987"
   itemType = "container"
   displayType = "list"
   title = "1987"
   summary = "1987"
   canPlay = False
 })
2018-03-02 18:59:29,316 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,316 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,316 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21142 Browse test_combinatorial_test_browse_scroll_indices_32313430521995743328206113648437515719
2018-03-02 18:59:29,316 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,317 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,317 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,317 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,317 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,317 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21143 Browse test_combinatorial_test_browse_scroll_indices_166130430484484755737408866567408950826 (mediaCollection){
   id = "Year:zero:1988"
   itemType = "container"
   displayType = "list"
   title = "1988"
   summary = "1988"
   canPlay = False
 })
2018-03-02 18:59:29,317 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,317 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,318 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21143 Browse test_combinatorial_test_browse_scroll_indices_166130430484484755737408866567408950826
2018-03-02 18:59:29,318 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,318 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,318 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,318 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,318 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,319 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21144 Browse test_combinatorial_test_browse_scroll_indices_66834922482767337886545463292567736593 (mediaCollection){
   id = "Year:zero:1989"
   itemType = "container"
   displayType = "list"
   title = "1989"
   summary = "1989"
   canPlay = False
 })
2018-03-02 18:59:29,319 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,319 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,319 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21144 Browse test_combinatorial_test_browse_scroll_indices_66834922482767337886545463292567736593
2018-03-02 18:59:29,319 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,319 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,320 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,320 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,320 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,320 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21145 Browse test_combinatorial_test_browse_scroll_indices_142946634826804382140352698304977509803 (mediaCollection){
   id = "Year:zero:1990"
   itemType = "container"
   displayType = "list"
   title = "1990"
   summary = "1990"
   canPlay = False
 })
2018-03-02 18:59:29,321 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,321 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,321 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21145 Browse test_combinatorial_test_browse_scroll_indices_142946634826804382140352698304977509803
2018-03-02 18:59:29,321 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,321 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,321 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,321 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,321 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,322 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21146 Browse test_combinatorial_test_browse_scroll_indices_313666336370332915645905533207382558323 (mediaCollection){
   id = "Year:zero:1991"
   itemType = "container"
   displayType = "list"
   title = "1991"
   summary = "1991"
   canPlay = False
 })
2018-03-02 18:59:29,322 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,322 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,322 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21146 Browse test_combinatorial_test_browse_scroll_indices_313666336370332915645905533207382558323
2018-03-02 18:59:29,322 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,322 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,322 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,322 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,323 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,323 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21147 Browse test_combinatorial_test_browse_scroll_indices_250016865097916377665050870462481867629 (mediaCollection){
   id = "Year:zero:1992"
   itemType = "container"
   displayType = "list"
   title = "1992"
   summary = "1992"
   canPlay = False
 })
2018-03-02 18:59:29,323 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,323 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,323 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21147 Browse test_combinatorial_test_browse_scroll_indices_250016865097916377665050870462481867629
2018-03-02 18:59:29,323 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,324 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,324 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,324 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,324 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,324 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21148 Browse test_combinatorial_test_browse_scroll_indices_11684472475109072051196489207195514115 (mediaCollection){
   id = "Year:zero:1993"
   itemType = "container"
   displayType = "list"
   title = "1993"
   summary = "1993"
   canPlay = False
 })
2018-03-02 18:59:29,325 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,325 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,325 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21148 Browse test_combinatorial_test_browse_scroll_indices_11684472475109072051196489207195514115
2018-03-02 18:59:29,325 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,325 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,326 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,326 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 11 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,326 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,326 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21149 Browse test_combinatorial_test_browse_scroll_indices_11684472475109072051196489207195514115 (mediaCollection){
   id = "Year:zero:1993"
   itemType = "container"
   displayType = "list"
   title = "1993"
   summary = "1993"
   canPlay = False
 })
2018-03-02 18:59:29,326 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,326 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,326 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21149 Browse test_combinatorial_test_browse_scroll_indices_11684472475109072051196489207195514115
2018-03-02 18:59:29,327 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,327 [INFO] SONOS.sonos.workflow.result - End *test iteration* 11 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,327 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,327 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 12 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,327 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1993, 0, 10000, None)
2018-03-02 18:59:29,329 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1993</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:29,329 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:29,735 [DEBUG] SONOS.suds.client - waited 405 (ms) on server reply
2018-03-02 18:59:29,745 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>39</count>
            <total>39</total>
            <mediaCollection>
               <id>Shows:zero:1993:1993-02-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-02-06 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1993-02-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-02-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-02-12 – Humpty&apos;s – Tahoe City, CA [1]</title>
               <summary>1993-02-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-02-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-02-13 – The Wherehouse – Stateline, NV [1] [SBD]</title>
               <summary>1993-02-13</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-02-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-02-20 – Parkway Theatre – Oakland CA [1]</title>
               <summary>1993-02-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-03-05</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-03-05 – EMU Ballroom – University of Oregon, OR [1] [SBD]</title>
               <summary>1993-03-05</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-03-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-03-06 – Fenix Underground – Seattle, WA [1]</title>
               <summary>1993-03-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-03-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-03-13 – Watsonville Vet Center – Watsonville, CA [1]</title>
               <summary>1993-03-13</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-03-19</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-03-19 – Sweetwater Saloon – Mill Valley, CA [1]</title>
               <summary>1993-03-19</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-04-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-04-02 – Great American Music Hall – San Francisco, CA [1] [SBD]</title>
               <summary>1993-04-02</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-04-22</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-04-22 – Fox Theatre – Boulder, CO [1]</title>
               <summary>1993-04-22</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-04-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-04-23 – The Fox Theater – Boulder, CO [3] [SBD]</title>
               <summary>1993-04-23</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-04-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-04-24 – Tangueray&apos;s – Fort Collins, CO [2]</title>
               <summary>1993-04-24</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-05-07</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-05-07 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1993-05-07</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-05-14</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-05-14 – Aladdin Theatre – Las Vegas, NV [1]</title>
               <summary>1993-05-14</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-05-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-05-15 – Aladdin Theatre – Las Vegas, NV [1]</title>
               <summary>1993-05-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-06-19</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-06-19 – Woodacre Improvement Club –  Woodacre, CA [1] [SBD]</title>
               <summary>1993-06-19</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-07-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-07-03 – High Sierra Music Festival – Leland Meadows, CA [1]</title>
               <summary>1993-07-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-07-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-07-13 – WOW Hall – Eugene OR [2]</title>
               <summary>1993-07-13</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-07-16</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-07-16 – Sweetwater Saloon – Mill Valley, CA [1] [SBD]</title>
               <summary>1993-07-16</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-08-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-08-08 – Northboro Fish And Game – Northboro, MA [1]</title>
               <summary>1993-08-08</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-08-11</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-08-11 – Wetlands Preserve – New York, NY [1] [SBD]</title>
               <summary>1993-08-11</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-08-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-08-12 – Middle East – Cambridge, MA [1]</title>
               <summary>1993-08-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-08-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-08-21 – Hilton Ballroom – Eugene, OR [2]</title>
               <summary>1993-08-21</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-09-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-09-03 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1993-09-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-09-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-09-15 – Center for the Arts – Crested Butte, CO [1]</title>
               <summary>1993-09-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-09-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-09-23 – The Rock – Tucson, AZ [1]</title>
               <summary>1993-09-23</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-09-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-09-25 – Monsoon&apos;s – Flagstaff, AZ [1] [SBD]</title>
               <summary>1993-09-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-10-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-10-02 – Great American Music Hall – San Francisco, CA [1] [SBD]</title>
               <summary>1993-10-02</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-10-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-10-21 – Kimball&apos;s Carnival – Emeryville, CA [1]</title>
               <summary>1993-10-21</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-10-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-10-29 – The Catalyst – Santa Cruz, CA [1]</title>
               <summary>1993-10-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-11-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-11-06 – New Georges – San Francisco, CA [1]</title>
               <summary>1993-11-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-11-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-11-12 – New George&apos;s – San Rafael, CA [1]</title>
               <summary>1993-11-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-11-19</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-11-19 – 3rd Street Bar – Santa Rosa, CA [1]</title>
               <summary>1993-11-19</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-03 – WOW Hall – Eugene OR [2]</title>
               <summary>1993-12-03</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-04</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-04 – Ballard Firehouse – Seattle, WA [1] [SBD]</title>
               <summary>1993-12-04</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-11</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-11 – Blue Star Café – Hartford, Connecticut [2] [SBD]</title>
               <summary>1993-12-11</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-12 – The Blue Star Cafe – Hartford, CT [1] [SBD]</title>
               <summary>1993-12-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-30</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-30 – Mystic Theater – Petaluma, CA [1]</title>
               <summary>1993-12-30</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-31</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-31 – Mystic Theatre – Petaluma, CA [1]</title>
               <summary>1993-12-31</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:29,810 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,811 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21150 Browse test_combinatorial_test_browse_scroll_indices_257428687044737495083426564846571326655 (mediaCollection){
   id = "Shows:zero:1993:1993-02-06"
   itemType = "container"
   displayType = "list"
   title = "1993-02-06 – Great American Music Hall – San Francisco, CA [1]"
   summary = "1993-02-06"
   canPlay = True
 })
2018-03-02 18:59:29,811 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,811 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,811 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21150 Browse test_combinatorial_test_browse_scroll_indices_257428687044737495083426564846571326655
2018-03-02 18:59:29,811 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,811 [INFO] SONOS.sonos.workflow.result - End *test iteration* 12 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,812 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,812 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 13 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,812 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,812 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21151 Browse test_combinatorial_test_browse_scroll_indices_126898811802258220949788403127051566109 (mediaCollection){
   id = "Shows:zero:1993:1993-02-12"
   itemType = "container"
   displayType = "list"
   title = "1993-02-12 – Humpty's – Tahoe City, CA [1]"
   summary = "1993-02-12"
   canPlay = True
 })
2018-03-02 18:59:29,813 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,813 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,813 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21151 Browse test_combinatorial_test_browse_scroll_indices_126898811802258220949788403127051566109
2018-03-02 18:59:29,813 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,813 [INFO] SONOS.sonos.workflow.result - End *test iteration* 13 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,813 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,813 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 14 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,814 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,814 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21152 Browse test_combinatorial_test_browse_scroll_indices_19873740849409337683262986112940320089 (mediaCollection){
   id = "Shows:zero:1993:1993-02-13"
   itemType = "container"
   displayType = "list"
   title = "1993-02-13 – The Wherehouse – Stateline, NV [1] [SBD]"
   summary = "1993-02-13"
   canPlay = True
 })
2018-03-02 18:59:29,814 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,814 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,814 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21152 Browse test_combinatorial_test_browse_scroll_indices_19873740849409337683262986112940320089
2018-03-02 18:59:29,814 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,814 [INFO] SONOS.sonos.workflow.result - End *test iteration* 14 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,815 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,815 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 15 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,815 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,815 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21153 Browse test_combinatorial_test_browse_scroll_indices_91618523742625004397220231313994490862 (mediaCollection){
   id = "Shows:zero:1993:1993-02-20"
   itemType = "container"
   displayType = "list"
   title = "1993-02-20 – Parkway Theatre – Oakland CA [1]"
   summary = "1993-02-20"
   canPlay = True
 })
2018-03-02 18:59:29,815 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,815 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,816 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21153 Browse test_combinatorial_test_browse_scroll_indices_91618523742625004397220231313994490862
2018-03-02 18:59:29,816 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,816 [INFO] SONOS.sonos.workflow.result - End *test iteration* 15 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,816 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,816 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 16 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,816 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,817 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21154 Browse test_combinatorial_test_browse_scroll_indices_151614966364654851202770737117197390329 (mediaCollection){
   id = "Shows:zero:1993:1993-03-05"
   itemType = "container"
   displayType = "list"
   title = "1993-03-05 – EMU Ballroom – University of Oregon, OR [1] [SBD]"
   summary = "1993-03-05"
   canPlay = True
 })
2018-03-02 18:59:29,817 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,817 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,817 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21154 Browse test_combinatorial_test_browse_scroll_indices_151614966364654851202770737117197390329
2018-03-02 18:59:29,817 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,817 [INFO] SONOS.sonos.workflow.result - End *test iteration* 16 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,817 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,817 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 17 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,818 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,818 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21155 Browse test_combinatorial_test_browse_scroll_indices_174525176213224288200545856146411354233 (mediaCollection){
   id = "Shows:zero:1993:1993-03-06"
   itemType = "container"
   displayType = "list"
   title = "1993-03-06 – Fenix Underground – Seattle, WA [1]"
   summary = "1993-03-06"
   canPlay = True
 })
2018-03-02 18:59:29,818 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,818 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,818 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21155 Browse test_combinatorial_test_browse_scroll_indices_174525176213224288200545856146411354233
2018-03-02 18:59:29,819 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,819 [INFO] SONOS.sonos.workflow.result - End *test iteration* 17 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,819 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,819 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 18 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,819 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,819 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21156 Browse test_combinatorial_test_browse_scroll_indices_62200596899612545370211283218801503809 (mediaCollection){
   id = "Shows:zero:1993:1993-03-13"
   itemType = "container"
   displayType = "list"
   title = "1993-03-13 – Watsonville Vet Center – Watsonville, CA [1]"
   summary = "1993-03-13"
   canPlay = True
 })
2018-03-02 18:59:29,820 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,820 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,820 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21156 Browse test_combinatorial_test_browse_scroll_indices_62200596899612545370211283218801503809
2018-03-02 18:59:29,820 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,820 [INFO] SONOS.sonos.workflow.result - End *test iteration* 18 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,820 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,820 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 19 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,821 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,821 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21157 Browse test_combinatorial_test_browse_scroll_indices_329455903713348008611044407174445087209 (mediaCollection){
   id = "Shows:zero:1993:1993-03-19"
   itemType = "container"
   displayType = "list"
   title = "1993-03-19 – Sweetwater Saloon – Mill Valley, CA [1]"
   summary = "1993-03-19"
   canPlay = True
 })
2018-03-02 18:59:29,821 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,822 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,822 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21157 Browse test_combinatorial_test_browse_scroll_indices_329455903713348008611044407174445087209
2018-03-02 18:59:29,822 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,822 [INFO] SONOS.sonos.workflow.result - End *test iteration* 19 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,822 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,822 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 20 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,822 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,823 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21158 Browse test_combinatorial_test_browse_scroll_indices_158938803036285090978499464538529575554 (mediaCollection){
   id = "Shows:zero:1993:1993-04-02"
   itemType = "container"
   displayType = "list"
   title = "1993-04-02 – Great American Music Hall – San Francisco, CA [1] [SBD]"
   summary = "1993-04-02"
   canPlay = True
 })
2018-03-02 18:59:29,823 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,823 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,823 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21158 Browse test_combinatorial_test_browse_scroll_indices_158938803036285090978499464538529575554
2018-03-02 18:59:29,823 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,823 [INFO] SONOS.sonos.workflow.result - End *test iteration* 20 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,823 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,823 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 21 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,824 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,824 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21159 Browse test_combinatorial_test_browse_scroll_indices_269142285708838161546531496920216644163 (mediaCollection){
   id = "Shows:zero:1993:1993-04-22"
   itemType = "container"
   displayType = "list"
   title = "1993-04-22 – Fox Theatre – Boulder, CO [1]"
   summary = "1993-04-22"
   canPlay = True
 })
2018-03-02 18:59:29,824 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,824 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,824 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21159 Browse test_combinatorial_test_browse_scroll_indices_269142285708838161546531496920216644163
2018-03-02 18:59:29,825 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,825 [INFO] SONOS.sonos.workflow.result - End *test iteration* 21 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,825 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,825 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 22 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,825 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,826 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21160 Browse test_combinatorial_test_browse_scroll_indices_269142285708838161546531496920216644163 (mediaCollection){
   id = "Shows:zero:1993:1993-04-22"
   itemType = "container"
   displayType = "list"
   title = "1993-04-22 – Fox Theatre – Boulder, CO [1]"
   summary = "1993-04-22"
   canPlay = True
 })
2018-03-02 18:59:29,826 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:29,827 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:29,827 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21160 Browse test_combinatorial_test_browse_scroll_indices_269142285708838161546531496920216644163
2018-03-02 18:59:29,827 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:29,827 [INFO] SONOS.sonos.workflow.result - End *test iteration* 22 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:29,827 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:29,827 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 23 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:29,828 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-04-22, 0, 10000, None)
2018-03-02 18:59:29,829 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-04-22</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:29,829 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:30,432 [DEBUG] SONOS.suds.client - waited 602 (ms) on server reply
2018-03-02 18:59:30,438 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>15</count>
            <total>15</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870731</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tuning 1:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>95</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870732</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law 12:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>769</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870733</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 15:08</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>908</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870734</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 Revisited 9:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>574</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870735</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home on the Range 16:13</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>973</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870736</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Spoken For 10:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>634</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870737</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 7:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>462</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870738</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tuning 2:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>150</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870739</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End of the World Blues 13:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>812</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870740</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance in a Million 9:17</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>557</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870741</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 15:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>900</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870742</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 14:47</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>887</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870743</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Drums 2:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>155</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870744</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 14:38</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>878</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870745</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 8:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>522</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:30,472 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:30,473 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21161 Browse test_combinatorial_test_browse_scroll_indices_158938803036285090978499464538529575554 (mediaCollection){
   id = "Shows:zero:1993:1993-04-02"
   itemType = "container"
   displayType = "list"
   title = "1993-04-02 – Great American Music Hall – San Francisco, CA [1] [SBD]"
   summary = "1993-04-02"
   canPlay = True
 })
2018-03-02 18:59:30,473 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:30,473 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:30,473 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21161 Browse test_combinatorial_test_browse_scroll_indices_158938803036285090978499464538529575554
2018-03-02 18:59:30,473 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:30,473 [INFO] SONOS.sonos.workflow.result - End *test iteration* 23 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:30,474 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:30,474 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 24 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:30,474 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-04-02, 0, 10000, None)
2018-03-02 18:59:30,475 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-04-02</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:30,475 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:31,089 [DEBUG] SONOS.suds.client - waited 613 (ms) on server reply
2018-03-02 18:59:31,094 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>13</count>
            <total>13</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871806</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law 14:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>844</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871807</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 10:31</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>631</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871808</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 12:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>723</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871809</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 12:45</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>765</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871810</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 9:22</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>562</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871811</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End Of The World Blues 11:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>704</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871812</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-04-02d2t1.shn 6:27</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>387</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871813</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Did I Mention 9:08</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>548</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871814</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Horses 4:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>294</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871815</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 20:07</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>1207</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871816</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina* 11:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>692</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871817</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 10:10</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>610</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871818</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Like A Rolling Stone 13:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>829</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:31,121 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:31,121 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21162 Browse test_combinatorial_test_browse_scroll_indices_329455903713348008611044407174445087209 (mediaCollection){
   id = "Shows:zero:1993:1993-03-19"
   itemType = "container"
   displayType = "list"
   title = "1993-03-19 – Sweetwater Saloon – Mill Valley, CA [1]"
   summary = "1993-03-19"
   canPlay = True
 })
2018-03-02 18:59:31,121 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:31,122 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:31,122 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21162 Browse test_combinatorial_test_browse_scroll_indices_329455903713348008611044407174445087209
2018-03-02 18:59:31,122 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:31,122 [INFO] SONOS.sonos.workflow.result - End *test iteration* 24 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:31,122 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:31,122 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 25 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:31,122 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-03-19, 0, 10000, None)
2018-03-02 18:59:31,124 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-03-19</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:31,124 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:32,819 [DEBUG] SONOS.suds.client - waited 1.694 (seconds) on server reply
2018-03-02 18:59:32,825 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>16</count>
            <total>16</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870903</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 16:51</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>1011</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870905</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 12:47</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>767</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870907</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Roll Me Over 20:08</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>1208</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870910</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Nancy Germany 9:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>589</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870912</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 14:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>872</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870915</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End of the World Blues 14:07</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>847</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870918</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Horses 8:41</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>521</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870920</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home on the Range 12:14</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>734</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870922</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Drums 4:12</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>252</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870924</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 10:28</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>628</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870926</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Riding With the King 8:17</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>497</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870928</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance in a Million 9:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>575</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870930</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 9:36</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>576</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870932</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 11:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>715</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870933</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 15:39</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>939</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-19:46258:870935</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 10:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-19:46258</albumId>
                  <duration>654</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/19/93 – Sweetwater Saloon – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:32,861 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:32,861 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21163 Browse test_combinatorial_test_browse_scroll_indices_62200596899612545370211283218801503809 (mediaCollection){
   id = "Shows:zero:1993:1993-03-13"
   itemType = "container"
   displayType = "list"
   title = "1993-03-13 – Watsonville Vet Center – Watsonville, CA [1]"
   summary = "1993-03-13"
   canPlay = True
 })
2018-03-02 18:59:32,861 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:32,862 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:32,862 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21163 Browse test_combinatorial_test_browse_scroll_indices_62200596899612545370211283218801503809
2018-03-02 18:59:32,862 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:32,862 [INFO] SONOS.sonos.workflow.result - End *test iteration* 25 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:32,862 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:32,862 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 26 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:32,862 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-03-13, 0, 10000, None)
2018-03-02 18:59:32,864 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-03-13</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:32,865 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:33,310 [DEBUG] SONOS.suds.client - waited 444 (ms) on server reply
2018-03-02 18:59:33,314 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>8</count>
            <total>8</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-13:46322:872040</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 18:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-13:46322</albumId>
                  <duration>1089</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/13/93 – Watsonville Vet Center – Watsonville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-13:46322:872042</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina * 5:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-13:46322</albumId>
                  <duration>326</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/13/93 – Watsonville Vet Center – Watsonville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-13:46322:872044</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Drums * &gt; 1:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-13:46322</albumId>
                  <duration>60</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/13/93 – Watsonville Vet Center – Watsonville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-13:46322:872047</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 Revisited 10:56</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-13:46322</albumId>
                  <duration>656</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/13/93 – Watsonville Vet Center – Watsonville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-13:46322:872049</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 13:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-13:46322</albumId>
                  <duration>801</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/13/93 – Watsonville Vet Center – Watsonville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-13:46322:872053</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance In A Million 8:06</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-13:46322</albumId>
                  <duration>486</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/13/93 – Watsonville Vet Center – Watsonville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-13:46322:872056</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 10:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-13:46322</albumId>
                  <duration>621</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/13/93 – Watsonville Vet Center – Watsonville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-13:46322:872059</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 8:07</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-13:46322</albumId>
                  <duration>487</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/13/93 – Watsonville Vet Center – Watsonville, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:33,330 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:33,331 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21164 Browse test_combinatorial_test_browse_scroll_indices_174525176213224288200545856146411354233 (mediaCollection){
   id = "Shows:zero:1993:1993-03-06"
   itemType = "container"
   displayType = "list"
   title = "1993-03-06 – Fenix Underground – Seattle, WA [1]"
   summary = "1993-03-06"
   canPlay = True
 })
2018-03-02 18:59:33,331 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:33,331 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:33,331 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21164 Browse test_combinatorial_test_browse_scroll_indices_174525176213224288200545856146411354233
2018-03-02 18:59:33,331 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:33,331 [INFO] SONOS.sonos.workflow.result - End *test iteration* 26 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:33,332 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:33,332 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 27 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:33,332 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-03-06, 0, 10000, None)
2018-03-02 18:59:33,334 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-03-06</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:33,334 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:33,812 [DEBUG] SONOS.suds.client - waited 477 (ms) on server reply
2018-03-02 18:59:33,822 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>15</count>
            <total>15</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871731</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Matresses 11:53</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>713</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871734</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Hwy. 61 9:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>574</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871739</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home on the Range 10:31</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>631</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871742</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road// 12:33</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>753</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871743</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Theme from Nancy Germany 6:25</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>385</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871746</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 6:20</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>380</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871748</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance in a Million 7:01</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>421</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871749</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 12:11</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>731</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871751</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End of the World Blues 11:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>660</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871753</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 11:01</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>661</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871755</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Drumz &gt; 6:39</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>399</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871756</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 12:31</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>751</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871758</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Outskirts of Town 12:53</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>773</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871760</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Roll Me Over 15:40</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>940</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-06:46303:871762</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>E: Like a Rolling Stone 11:57</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-06:46303</albumId>
                  <duration>717</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/6/93 – Fenix Underground – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:33,904 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:33,905 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21165 Browse test_combinatorial_test_browse_scroll_indices_151614966364654851202770737117197390329 (mediaCollection){
   id = "Shows:zero:1993:1993-03-05"
   itemType = "container"
   displayType = "list"
   title = "1993-03-05 – EMU Ballroom – University of Oregon, OR [1] [SBD]"
   summary = "1993-03-05"
   canPlay = True
 })
2018-03-02 18:59:33,905 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:33,905 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:33,905 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21165 Browse test_combinatorial_test_browse_scroll_indices_151614966364654851202770737117197390329
2018-03-02 18:59:33,905 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:33,905 [INFO] SONOS.sonos.workflow.result - End *test iteration* 27 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:33,906 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:33,906 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 28 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:33,906 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-03-05, 0, 10000, None)
2018-03-02 18:59:33,907 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-03-05</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:33,908 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:34,433 [DEBUG] SONOS.suds.client - waited 525 (ms) on server reply
2018-03-02 18:59:34,437 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>11</count>
            <total>11</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870493</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d1t1.shn 12:45</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>765</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870496</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d1t2.shn 8:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>534</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870498</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d1t3.shn 16:38</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>998</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870500</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d1t4.shn 16:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>994</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870502</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d1t5.shn 7:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>446</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870504</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d1t6.shn 8:39</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>519</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870506</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d2t1.shn 15:23</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>923</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870507</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d2t2.shn 16:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>1002</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870509</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d2t3.shn 9:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>561</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870511</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d2t4.shn 18:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>1124</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-03-05:46236:870513</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-03-05d2t5.shn 10:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-03-05:46236</albumId>
                  <duration>616</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/5/93 – EMU Ballroom – University of Oregon, OR</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:34,460 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:34,460 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21166 Browse test_combinatorial_test_browse_scroll_indices_91618523742625004397220231313994490862 (mediaCollection){
   id = "Shows:zero:1993:1993-02-20"
   itemType = "container"
   displayType = "list"
   title = "1993-02-20 – Parkway Theatre – Oakland CA [1]"
   summary = "1993-02-20"
   canPlay = True
 })
2018-03-02 18:59:34,460 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:34,460 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:34,461 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21166 Browse test_combinatorial_test_browse_scroll_indices_91618523742625004397220231313994490862
2018-03-02 18:59:34,461 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:34,461 [INFO] SONOS.sonos.workflow.result - End *test iteration* 28 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:34,461 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:34,461 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 29 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:34,461 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-02-20, 0, 10000, None)
2018-03-02 18:59:34,463 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-02-20</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:34,463 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:35,176 [DEBUG] SONOS.suds.client - waited 713 (ms) on server reply
2018-03-02 18:59:35,181 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>12</count>
            <total>12</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871143</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 Revisited 11:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>663</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871144</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 11:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>690</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871145</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Fake Zero 17:13</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>1033</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871147</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Theme From Nancy Germany &gt; 8:18</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>498</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871148</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 11:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>676</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871149</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End Of The World Blues 12:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>775</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871152</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range [cut] 12:45</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>765</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871154</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Drums &gt; 9:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>574</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871156</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Straight Jackets &gt; 23:24</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>1404</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871158</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Let&apos;s Go Get Stoned 9:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>556</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871160</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance In A Million 9:10</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>550</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-20:46270:871162</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Like A Rolling Stone 12:47</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-20:46270</albumId>
                  <duration>767</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/20/93 – Parkway Theatre – Oakland CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:35,205 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:35,205 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21167 Browse test_combinatorial_test_browse_scroll_indices_19873740849409337683262986112940320089 (mediaCollection){
   id = "Shows:zero:1993:1993-02-13"
   itemType = "container"
   displayType = "list"
   title = "1993-02-13 – The Wherehouse – Stateline, NV [1] [SBD]"
   summary = "1993-02-13"
   canPlay = True
 })
2018-03-02 18:59:35,206 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:35,206 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:35,206 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21167 Browse test_combinatorial_test_browse_scroll_indices_19873740849409337683262986112940320089
2018-03-02 18:59:35,206 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:35,206 [INFO] SONOS.sonos.workflow.result - End *test iteration* 29 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:35,206 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:35,206 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 30 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:35,207 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-02-13, 0, 10000, None)
2018-03-02 18:59:35,208 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-02-13</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:35,208 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:36,038 [DEBUG] SONOS.suds.client - waited 829 (ms) on server reply
2018-03-02 18:59:36,042 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>12</count>
            <total>12</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870674</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 13:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>806</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870675</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 13:24</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>804</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870676</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Horses 11:43</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>703</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870677</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 12:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>764</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870678</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End Of The World Blues 13:47</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>827</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870679</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 7:06</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>426</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870680</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 Revisited 11:36</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>696</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870681</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 11:36</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>696</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870682</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Drums &gt; 6:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>415</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870683</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 17:07</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>1027</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870684</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance In A Million 11:22</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>682</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-13:46244:870685</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>E: Like A Rolling Stone 10:52</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-13:46244</albumId>
                  <duration>652</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/13/93 – The Wherehouse – Stateline, NV</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:36,067 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:36,068 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21168 Browse test_combinatorial_test_browse_scroll_indices_126898811802258220949788403127051566109 (mediaCollection){
   id = "Shows:zero:1993:1993-02-12"
   itemType = "container"
   displayType = "list"
   title = "1993-02-12 – Humpty's – Tahoe City, CA [1]"
   summary = "1993-02-12"
   canPlay = True
 })
2018-03-02 18:59:36,068 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:36,068 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:36,068 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21168 Browse test_combinatorial_test_browse_scroll_indices_126898811802258220949788403127051566109
2018-03-02 18:59:36,068 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:36,068 [INFO] SONOS.sonos.workflow.result - End *test iteration* 30 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:36,069 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:36,069 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 31 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:36,069 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-02-12, 0, 10000, None)
2018-03-02 18:59:36,070 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-02-12</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:36,071 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:36,587 [DEBUG] SONOS.suds.client - waited 516 (ms) on server reply
2018-03-02 18:59:36,593 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>11</count>
            <total>11</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871192</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 Revisited 8:10</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>490</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871193</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 15:36</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>936</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871194</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 11:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>704</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871195</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 14:31</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>871</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871196</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Forever Is Nowhere 9:39</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>579</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871197</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 7:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>462</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871198</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End Of The World Blues 11:15</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>675</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871199</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance In A Million 7:24</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>444</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871200</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law 11:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>664</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871201</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 17:48</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>1068</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-12:46273:871202</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 9:11</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-12:46273</albumId>
                  <duration>551</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/12/93 – Humpty&apos;s – Tahoe City, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:36,617 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:36,618 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21169 Browse test_combinatorial_test_browse_scroll_indices_257428687044737495083426564846571326655 (mediaCollection){
   id = "Shows:zero:1993:1993-02-06"
   itemType = "container"
   displayType = "list"
   title = "1993-02-06 – Great American Music Hall – San Francisco, CA [1]"
   summary = "1993-02-06"
   canPlay = True
 })
2018-03-02 18:59:36,618 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:36,618 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:36,618 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21169 Browse test_combinatorial_test_browse_scroll_indices_257428687044737495083426564846571326655
2018-03-02 18:59:36,618 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:36,618 [INFO] SONOS.sonos.workflow.result - End *test iteration* 31 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:36,618 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:36,618 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 32 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:36,619 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-02-06, 0, 10000, None)
2018-03-02 18:59:36,620 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-02-06</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:36,620 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:37,410 [DEBUG] SONOS.suds.client - waited 789 (ms) on server reply
2018-03-02 18:59:37,417 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>13</count>
            <total>13</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871669</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 13:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>812</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871670</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law 12:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>736</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871671</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 8:43</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>523</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871672</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 9:13</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>553</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871673</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Forever Is Nowhere &gt; 20:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>1242</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871674</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance In A Million 22:31</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>1351</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871675</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End Of The World Blues 8:38</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>518</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871676</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 12:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>762</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871677</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Horses 4:57</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>297</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871678</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 8:53</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>533</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871679</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 11:27</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>687</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871680</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Let&apos;s Go Get Stoned 13:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>815</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-02-06:46300:871681</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Sleepwalk 10:05</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-02-06:46300</albumId>
                  <duration>605</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>2/6/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:37,451 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:37,452 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21170 Browse test_combinatorial_test_browse_scroll_indices_250016865097916377665050870462481867629 (mediaCollection){
   id = "Year:zero:1992"
   itemType = "container"
   displayType = "list"
   title = "1992"
   summary = "1992"
   canPlay = False
 })
2018-03-02 18:59:37,453 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:37,453 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:37,454 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21170 Browse test_combinatorial_test_browse_scroll_indices_250016865097916377665050870462481867629
2018-03-02 18:59:37,454 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:37,454 [INFO] SONOS.sonos.workflow.result - End *test iteration* 32 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:37,454 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:37,455 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 33 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:37,455 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1992, 0, 10000, None)
2018-03-02 18:59:37,457 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1992</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:37,458 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:38,134 [DEBUG] SONOS.suds.client - waited 676 (ms) on server reply
2018-03-02 18:59:38,139 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>22</count>
            <total>22</total>
            <mediaCollection>
               <id>Shows:zero:1992:1992-01-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-01-18 [1]</title>
               <summary>1992-01-18</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-03-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-03-21 – Starry Plough – Berkeley, CA [1]</title>
               <summary>1992-03-21</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-04-04</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-04-04 – Rexville Grange – La Conner, WA [1]</title>
               <summary>1992-04-04</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-04-05</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-04-05 [1]</title>
               <summary>1992-04-05</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-03 – 8X10 Club – Baltimore, MD [1]</title>
               <summary>1992-05-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-04</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-04 – The Bayou – Washington, DC [1]</title>
               <summary>1992-05-04</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-05</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-05 – 23 East Cabaret – Ardmore, PA [2] [SBD]</title>
               <summary>1992-05-05</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-08 – Hamilton College – Clinton, NY [3] [SBD]</title>
               <summary>1992-05-08</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-09</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-09 – Municipal Cafe – Hartford, Connecticut [1]</title>
               <summary>1992-05-09</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-05-22</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-05-22 – Sweetwater – Mill Valley, CA [1]</title>
               <summary>1992-05-22</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-06-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-06-06 – Starry Plough – Berkeley, CA [2]</title>
               <summary>1992-06-06</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-07-31</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-07-31 – GAMH – San Francisco, CA [1] [SBD]</title>
               <summary>1992-07-31</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-14</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-14 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1992-10-14</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-15 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1992-10-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-16</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-16 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1992-10-16</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-17 – Midway Beach – Guerneville, CA [2] [SBD]</title>
               <summary>1992-10-17</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-23 –  Humboldt State University Practice Fields – Arcata, California [2] [SBD]</title>
               <summary>1992-10-23</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-24 – Ashland Armory – Ashland, Oregon [1]</title>
               <summary>1992-10-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-10-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-10-25 – Wow Hall – Eugene, OR [1]</title>
               <summary>1992-10-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-11-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-11-20 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1992-11-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-11-27</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-11-27 – Dance Palace – Pt. Reyes, CA [1]</title>
               <summary>1992-11-27</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1992:1992-12-18</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992-12-18 – Sweetwater Saloon   ** 24 bit ** – Mill Valley CA [2]</title>
               <summary>1992-12-18</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:38,176 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,176 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21171 Browse test_combinatorial_test_browse_scroll_indices_103586660729515852334608638343005853778 (mediaCollection){
   id = "Shows:zero:1992:1992-01-18"
   itemType = "container"
   displayType = "list"
   title = "1992-01-18 [1]"
   summary = "1992-01-18"
   canPlay = True
 })
2018-03-02 18:59:38,176 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,177 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,177 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21171 Browse test_combinatorial_test_browse_scroll_indices_103586660729515852334608638343005853778
2018-03-02 18:59:38,177 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,177 [INFO] SONOS.sonos.workflow.result - End *test iteration* 33 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,177 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,177 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 34 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,177 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,178 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21172 Browse test_combinatorial_test_browse_scroll_indices_79976680993349805702837569712734781088 (mediaCollection){
   id = "Shows:zero:1992:1992-03-21"
   itemType = "container"
   displayType = "list"
   title = "1992-03-21 – Starry Plough – Berkeley, CA [1]"
   summary = "1992-03-21"
   canPlay = True
 })
2018-03-02 18:59:38,178 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,178 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,178 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21172 Browse test_combinatorial_test_browse_scroll_indices_79976680993349805702837569712734781088
2018-03-02 18:59:38,178 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,178 [INFO] SONOS.sonos.workflow.result - End *test iteration* 34 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,179 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,179 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 35 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,179 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,179 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21173 Browse test_combinatorial_test_browse_scroll_indices_163041442061823837375581200344724036947 (mediaCollection){
   id = "Shows:zero:1992:1992-04-04"
   itemType = "container"
   displayType = "list"
   title = "1992-04-04 – Rexville Grange – La Conner, WA [1]"
   summary = "1992-04-04"
   canPlay = True
 })
2018-03-02 18:59:38,179 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,179 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,179 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21173 Browse test_combinatorial_test_browse_scroll_indices_163041442061823837375581200344724036947
2018-03-02 18:59:38,179 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,180 [INFO] SONOS.sonos.workflow.result - End *test iteration* 35 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,180 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,180 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 36 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,180 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,180 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21174 Browse test_combinatorial_test_browse_scroll_indices_13081645389662650585140015985038979154 (mediaCollection){
   id = "Shows:zero:1992:1992-04-05"
   itemType = "container"
   displayType = "list"
   title = "1992-04-05 [1]"
   summary = "1992-04-05"
   canPlay = True
 })
2018-03-02 18:59:38,180 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,181 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,181 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21174 Browse test_combinatorial_test_browse_scroll_indices_13081645389662650585140015985038979154
2018-03-02 18:59:38,181 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,181 [INFO] SONOS.sonos.workflow.result - End *test iteration* 36 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,181 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,181 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 37 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,181 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,182 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21175 Browse test_combinatorial_test_browse_scroll_indices_76893395695642430605907680915281176823 (mediaCollection){
   id = "Shows:zero:1992:1992-05-03"
   itemType = "container"
   displayType = "list"
   title = "1992-05-03 – 8X10 Club – Baltimore, MD [1]"
   summary = "1992-05-03"
   canPlay = True
 })
2018-03-02 18:59:38,182 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,182 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,182 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21175 Browse test_combinatorial_test_browse_scroll_indices_76893395695642430605907680915281176823
2018-03-02 18:59:38,182 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,182 [INFO] SONOS.sonos.workflow.result - End *test iteration* 37 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,183 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,183 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 38 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,183 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,183 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21176 Browse test_combinatorial_test_browse_scroll_indices_295922253900183261779883017107336909623 (mediaCollection){
   id = "Shows:zero:1992:1992-05-04"
   itemType = "container"
   displayType = "list"
   title = "1992-05-04 – The Bayou – Washington, DC [1]"
   summary = "1992-05-04"
   canPlay = True
 })
2018-03-02 18:59:38,183 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,183 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,184 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21176 Browse test_combinatorial_test_browse_scroll_indices_295922253900183261779883017107336909623
2018-03-02 18:59:38,184 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,184 [INFO] SONOS.sonos.workflow.result - End *test iteration* 38 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,184 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,184 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 39 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,184 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,185 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21177 Browse test_combinatorial_test_browse_scroll_indices_158283451773632962152118766030537853607 (mediaCollection){
   id = "Shows:zero:1992:1992-05-05"
   itemType = "container"
   displayType = "list"
   title = "1992-05-05 – 23 East Cabaret – Ardmore, PA [2] [SBD]"
   summary = "1992-05-05"
   canPlay = False
 })
2018-03-02 18:59:38,185 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,185 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,185 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21177 Browse test_combinatorial_test_browse_scroll_indices_158283451773632962152118766030537853607
2018-03-02 18:59:38,185 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,185 [INFO] SONOS.sonos.workflow.result - End *test iteration* 39 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,186 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,186 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 40 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,186 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,186 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21178 Browse test_combinatorial_test_browse_scroll_indices_45569699166105586480927396643923415612 (mediaCollection){
   id = "Shows:zero:1992:1992-05-08"
   itemType = "container"
   displayType = "list"
   title = "1992-05-08 – Hamilton College – Clinton, NY [3] [SBD]"
   summary = "1992-05-08"
   canPlay = False
 })
2018-03-02 18:59:38,186 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,186 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,186 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21178 Browse test_combinatorial_test_browse_scroll_indices_45569699166105586480927396643923415612
2018-03-02 18:59:38,187 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,187 [INFO] SONOS.sonos.workflow.result - End *test iteration* 40 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,187 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,187 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 41 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,187 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,187 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21179 Browse test_combinatorial_test_browse_scroll_indices_65118962071717080105340556356314974969 (mediaCollection){
   id = "Shows:zero:1992:1992-05-09"
   itemType = "container"
   displayType = "list"
   title = "1992-05-09 – Municipal Cafe – Hartford, Connecticut [1]"
   summary = "1992-05-09"
   canPlay = True
 })
2018-03-02 18:59:38,188 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,188 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,188 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21179 Browse test_combinatorial_test_browse_scroll_indices_65118962071717080105340556356314974969
2018-03-02 18:59:38,188 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,188 [INFO] SONOS.sonos.workflow.result - End *test iteration* 41 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,189 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,189 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 42 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,189 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,189 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21180 Browse test_combinatorial_test_browse_scroll_indices_82845691998785973274621138150981980108 (mediaCollection){
   id = "Shows:zero:1992:1992-05-22"
   itemType = "container"
   displayType = "list"
   title = "1992-05-22 – Sweetwater – Mill Valley, CA [1]"
   summary = "1992-05-22"
   canPlay = True
 })
2018-03-02 18:59:38,190 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,190 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,190 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21180 Browse test_combinatorial_test_browse_scroll_indices_82845691998785973274621138150981980108
2018-03-02 18:59:38,191 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,191 [INFO] SONOS.sonos.workflow.result - End *test iteration* 42 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,191 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,191 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 43 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,191 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,192 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21181 Browse test_combinatorial_test_browse_scroll_indices_82845691998785973274621138150981980108 (mediaCollection){
   id = "Shows:zero:1992:1992-05-22"
   itemType = "container"
   displayType = "list"
   title = "1992-05-22 – Sweetwater – Mill Valley, CA [1]"
   summary = "1992-05-22"
   canPlay = True
 })
2018-03-02 18:59:38,192 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:38,192 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:38,192 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21181 Browse test_combinatorial_test_browse_scroll_indices_82845691998785973274621138150981980108
2018-03-02 18:59:38,192 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:38,192 [INFO] SONOS.sonos.workflow.result - End *test iteration* 43 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:38,193 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:38,193 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 44 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:38,193 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-05-22, 0, 10000, None)
2018-03-02 18:59:38,194 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-05-22</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:38,194 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:41,270 [DEBUG] SONOS.suds.client - waited 3.075 (seconds) on server reply
2018-03-02 18:59:41,273 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-22:46224:870280</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Unknown Song 13:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-22:46224</albumId>
                  <duration>810</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/22/92 – Sweetwater – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-22:46224:870282</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Instrumental 10:58</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-22:46224</albumId>
                  <duration>658</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/22/92 – Sweetwater – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-22:46224:870284</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Instrumental # 2 15:07</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-22:46224</albumId>
                  <duration>907</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/22/92 – Sweetwater – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-22:46224:870286</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut 12:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-22:46224</albumId>
                  <duration>762</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/22/92 – Sweetwater – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-22:46224:870288</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 13:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-22:46224</albumId>
                  <duration>810</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/22/92 – Sweetwater – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-22:46224:870290</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Unknown Song, Encore Break, Band Introductions 10:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-22:46224</albumId>
                  <duration>655</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/22/92 – Sweetwater – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-22:46224:870292</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>The Core 10:19</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-22:46224</albumId>
                  <duration>619</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/22/92 – Sweetwater – Mill Valley, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:41,287 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:41,287 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21182 Browse test_combinatorial_test_browse_scroll_indices_65118962071717080105340556356314974969 (mediaCollection){
   id = "Shows:zero:1992:1992-05-09"
   itemType = "container"
   displayType = "list"
   title = "1992-05-09 – Municipal Cafe – Hartford, Connecticut [1]"
   summary = "1992-05-09"
   canPlay = True
 })
2018-03-02 18:59:41,287 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:41,287 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:41,287 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21182 Browse test_combinatorial_test_browse_scroll_indices_65118962071717080105340556356314974969
2018-03-02 18:59:41,288 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:41,288 [INFO] SONOS.sonos.workflow.result - End *test iteration* 44 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:41,288 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:41,288 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 45 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:41,288 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-05-09, 0, 10000, None)
2018-03-02 18:59:41,290 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-05-09</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:41,290 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:41,995 [DEBUG] SONOS.suds.client - waited 705 (ms) on server reply
2018-03-02 18:59:41,998 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>5</count>
            <total>5</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-09:46221:870234</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Berm 13:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-09:46221</albumId>
                  <duration>815</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/9/92 – Municipal Cafe – Hartford, Connecticut</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-09:46221:870235</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 18:24</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-09:46221</albumId>
                  <duration>1104</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/9/92 – Municipal Cafe – Hartford, Connecticut</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-09:46221:870236</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Roll Me Over 10:59</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-09:46221</albumId>
                  <duration>659</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/9/92 – Municipal Cafe – Hartford, Connecticut</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-09:46221:870237</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 11:27</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-09:46221</albumId>
                  <duration>687</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/9/92 – Municipal Cafe – Hartford, Connecticut</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-09:46221:870238</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 11:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-09:46221</albumId>
                  <duration>663</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/9/92 – Municipal Cafe – Hartford, Connecticut</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:42,012 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,012 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21183 Browse test_combinatorial_test_browse_scroll_indices_45569699166105586480927396643923415612 (mediaCollection){
   id = "Shows:zero:1992:1992-05-08"
   itemType = "container"
   displayType = "list"
   title = "1992-05-08 – Hamilton College – Clinton, NY [3] [SBD]"
   summary = "1992-05-08"
   canPlay = False
 })
2018-03-02 18:59:42,012 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:42,013 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:42,013 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21183 Browse test_combinatorial_test_browse_scroll_indices_45569699166105586480927396643923415612
2018-03-02 18:59:42,013 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,013 [INFO] SONOS.sonos.workflow.result - End *test iteration* 45 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:42,013 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:42,013 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 46 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:42,013 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-05-08, 0, 10000, None)
2018-03-02 18:59:42,015 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-05-08</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:42,015 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:42,861 [DEBUG] SONOS.suds.client - waited 846 (ms) on server reply
2018-03-02 18:59:42,864 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>3</count>
            <total>3</total>
            <mediaCollection>
               <id>Show:zero:1992:1992-05-08:46210</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Zero [AUD]</title>
               <summary>Cole&apos;s Law
Golden Road
Catalina
Rigor Mortis
Roll Me Over
Tear Tags Off Mattresses
Home On The Range</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:zero:1992:1992-05-08:46205</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Unknown [SBD]</title>
               <summary>Disc 1:
1. Cole&apos;s Law &gt; 
2. Golden Road 
3. Catalina 
4. Rigor Mortis 
5. Roll Me Over 
6. Tear Tags Off Mattresses 
7. Home On The Range
</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:zero:1992:1992-05-08:46217</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>master soundboard cassette tape [AUD]</title>
               <summary>1.  Cole&apos;s Law &gt; 
2.  Golden Road
3.  Catalina
4.  Rigor Mortis
5.  Roll Me Over
6.  Tear Tags Off Mattresses
7.  Home On The Range</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:42,870 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,870 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21184 Browse test_combinatorial_test_browse_scroll_indices_159837570177798769948230407375532727369 (mediaCollection){
   id = "Show:zero:1992:1992-05-08:46210"
   itemType = "album"
   displayType = "list"
   title = "Zero [AUD]"
   summary = "Cole's Law
Golden Road
Catalina
Rigor Mortis
Roll Me Over
Tear Tags Off Mattresses
Home On The Range"
   canPlay = True
 })
2018-03-02 18:59:42,870 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:42,870 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:42,871 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21184 Browse test_combinatorial_test_browse_scroll_indices_159837570177798769948230407375532727369
2018-03-02 18:59:42,871 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,871 [INFO] SONOS.sonos.workflow.result - End *test iteration* 46 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:42,871 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:42,871 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 47 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:42,871 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,872 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21185 Browse test_combinatorial_test_browse_scroll_indices_208363804471516253022766007910952988136 (mediaCollection){
   id = "Show:zero:1992:1992-05-08:46205"
   itemType = "album"
   displayType = "list"
   title = "Unknown [SBD]"
   summary = "Disc 1:
1. Cole's Law > 
2. Golden Road 
3. Catalina 
4. Rigor Mortis 
5. Roll Me Over 
6. Tear Tags Off Mattresses 
7. Home On The Range
"
   canPlay = True
 })
2018-03-02 18:59:42,872 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:42,872 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:42,872 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21185 Browse test_combinatorial_test_browse_scroll_indices_208363804471516253022766007910952988136
2018-03-02 18:59:42,872 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,872 [INFO] SONOS.sonos.workflow.result - End *test iteration* 47 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:42,873 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:42,873 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 48 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:42,873 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,873 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21186 Browse test_combinatorial_test_browse_scroll_indices_23402762080462718958699029691945946891 (mediaCollection){
   id = "Show:zero:1992:1992-05-08:46217"
   itemType = "album"
   displayType = "list"
   title = "master soundboard cassette tape [AUD]"
   summary = "1.  Cole's Law > 
2.  Golden Road
3.  Catalina
4.  Rigor Mortis
5.  Roll Me Over
6.  Tear Tags Off Mattresses
7.  Home On The Range"
   canPlay = True
 })
2018-03-02 18:59:42,873 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:42,874 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:42,874 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21186 Browse test_combinatorial_test_browse_scroll_indices_23402762080462718958699029691945946891
2018-03-02 18:59:42,874 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,874 [INFO] SONOS.sonos.workflow.result - End *test iteration* 48 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:42,874 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:42,874 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 49 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:42,874 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,875 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21187 Browse test_combinatorial_test_browse_scroll_indices_23402762080462718958699029691945946891 (mediaCollection){
   id = "Show:zero:1992:1992-05-08:46217"
   itemType = "album"
   displayType = "list"
   title = "master soundboard cassette tape [AUD]"
   summary = "1.  Cole's Law > 
2.  Golden Road
3.  Catalina
4.  Rigor Mortis
5.  Roll Me Over
6.  Tear Tags Off Mattresses
7.  Home On The Range"
   canPlay = True
 })
2018-03-02 18:59:42,875 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:42,875 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:42,875 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21187 Browse test_combinatorial_test_browse_scroll_indices_23402762080462718958699029691945946891
2018-03-02 18:59:42,875 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:42,875 [INFO] SONOS.sonos.workflow.result - End *test iteration* 49 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:42,876 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:42,876 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 50 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:42,876 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Show:zero:1992:1992-05-08:46217, 0, 10000, None)
2018-03-02 18:59:42,877 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Show:zero:1992:1992-05-08:46217</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:42,877 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:44,181 [DEBUG] SONOS.suds.client - waited 1.303 (seconds) on server reply
2018-03-02 18:59:44,184 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46217:870172</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law &gt; 11:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46217</albumId>
                  <duration>686</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46217:870173</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 14:02</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46217</albumId>
                  <duration>842</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46217:870174</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 10:43</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46217</albumId>
                  <duration>643</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46217:870175</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 10:50</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46217</albumId>
                  <duration>650</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46217:870176</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Roll Me Over 13:29</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46217</albumId>
                  <duration>809</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46217:870177</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 11:22</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46217</albumId>
                  <duration>682</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46217:870178</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 10:33</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46217</albumId>
                  <duration>633</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:44,204 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:44,205 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21188 Browse test_combinatorial_test_browse_scroll_indices_208363804471516253022766007910952988136 (mediaCollection){
   id = "Show:zero:1992:1992-05-08:46205"
   itemType = "album"
   displayType = "list"
   title = "Unknown [SBD]"
   summary = "Disc 1:
1. Cole's Law > 
2. Golden Road 
3. Catalina 
4. Rigor Mortis 
5. Roll Me Over 
6. Tear Tags Off Mattresses 
7. Home On The Range
"
   canPlay = True
 })
2018-03-02 18:59:44,205 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:44,205 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:44,205 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21188 Browse test_combinatorial_test_browse_scroll_indices_208363804471516253022766007910952988136
2018-03-02 18:59:44,205 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:44,205 [INFO] SONOS.sonos.workflow.result - End *test iteration* 50 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:44,206 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:44,206 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 51 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:44,206 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Show:zero:1992:1992-05-08:46205, 0, 10000, None)
2018-03-02 18:59:44,207 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Show:zero:1992:1992-05-08:46205</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:44,208 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:44,865 [DEBUG] SONOS.suds.client - waited 657 (ms) on server reply
2018-03-02 18:59:44,868 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>6</count>
            <total>6</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46205:869950</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law &gt; 12:11</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46205</albumId>
                  <duration>731</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46205:869951</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 11:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46205</albumId>
                  <duration>714</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46205:869952</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 13:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46205</albumId>
                  <duration>835</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46205:869953</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 14:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46205</albumId>
                  <duration>884</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46205:869954</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Roll Me Over 14:25</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46205</albumId>
                  <duration>865</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46205:869955</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 11:06</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46205</albumId>
                  <duration>666</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:44,881 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:44,881 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21189 Browse test_combinatorial_test_browse_scroll_indices_159837570177798769948230407375532727369 (mediaCollection){
   id = "Show:zero:1992:1992-05-08:46210"
   itemType = "album"
   displayType = "list"
   title = "Zero [AUD]"
   summary = "Cole's Law
Golden Road
Catalina
Rigor Mortis
Roll Me Over
Tear Tags Off Mattresses
Home On The Range"
   canPlay = True
 })
2018-03-02 18:59:44,882 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:44,882 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:44,882 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21189 Browse test_combinatorial_test_browse_scroll_indices_159837570177798769948230407375532727369
2018-03-02 18:59:44,882 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:44,882 [INFO] SONOS.sonos.workflow.result - End *test iteration* 51 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:44,882 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:44,882 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 52 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:44,883 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Show:zero:1992:1992-05-08:46210, 0, 10000, None)
2018-03-02 18:59:44,885 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Show:zero:1992:1992-05-08:46210</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:44,885 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:45,256 [DEBUG] SONOS.suds.client - waited 371 (ms) on server reply
2018-03-02 18:59:45,259 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46210:870025</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law &gt; 11:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46210</albumId>
                  <duration>686</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46210:870027</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 14:02</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46210</albumId>
                  <duration>842</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46210:870030</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 10:43</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46210</albumId>
                  <duration>643</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46210:870031</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 10:50</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46210</albumId>
                  <duration>650</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46210:870033</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Roll Me Over 13:29</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46210</albumId>
                  <duration>809</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46210:870035</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 11:22</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46210</albumId>
                  <duration>682</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-08:46210:870037</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 10:33</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-08:46210</albumId>
                  <duration>633</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/8/92 – Hamilton College – Clinton, NY</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:45,275 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:45,276 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21190 Browse test_combinatorial_test_browse_scroll_indices_158283451773632962152118766030537853607 (mediaCollection){
   id = "Shows:zero:1992:1992-05-05"
   itemType = "container"
   displayType = "list"
   title = "1992-05-05 – 23 East Cabaret – Ardmore, PA [2] [SBD]"
   summary = "1992-05-05"
   canPlay = False
 })
2018-03-02 18:59:45,276 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:45,276 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:45,276 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21190 Browse test_combinatorial_test_browse_scroll_indices_158283451773632962152118766030537853607
2018-03-02 18:59:45,276 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:45,276 [INFO] SONOS.sonos.workflow.result - End *test iteration* 52 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:45,277 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:45,277 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 53 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:45,277 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-05-05, 0, 10000, None)
2018-03-02 18:59:45,278 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-05-05</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:45,278 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:45,716 [DEBUG] SONOS.suds.client - waited 437 (ms) on server reply
2018-03-02 18:59:45,718 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>2</count>
            <total>2</total>
            <mediaCollection>
               <id>Show:zero:1992:1992-05-05:46182</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>SBD &gt; DAT [SBD]</title>
               <summary>Cole&apos;s Law -&gt;
Anorexia
Tear Tags Off Mattresses
Home On The Range</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:zero:1992:1992-05-05:46171</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Neumann U89s Blumlein Technique (crossed pair figure eights @ 90 degrees) FOB On Stand (Sweet Spot)-&gt;Neumann 48 Volt Phantom Power Supplies-&gt;Modified Sony D10 Pro [AUD]</title>
               <summary>CD #1 - Set I 
1.) Cole&apos;s Law*-&gt; 
2.) Cissy Strut-&gt; 
3.) Tear Tags Off Mattresses
4.) Home On The Range
CD #2 - Set II
1.) Outskirts Of Town**
2.) Berm
3.) Little Wing
4.) Gregg&apos;s Eggs
5.) Mercury Blues</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:45,722 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:45,723 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21191 Browse test_combinatorial_test_browse_scroll_indices_76070050382784369698103307750266678910 (mediaCollection){
   id = "Show:zero:1992:1992-05-05:46182"
   itemType = "album"
   displayType = "list"
   title = "SBD > DAT [SBD]"
   summary = "Cole's Law ->
Anorexia
Tear Tags Off Mattresses
Home On The Range"
   canPlay = True
 })
2018-03-02 18:59:45,723 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:45,723 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:45,723 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21191 Browse test_combinatorial_test_browse_scroll_indices_76070050382784369698103307750266678910
2018-03-02 18:59:45,723 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:45,723 [INFO] SONOS.sonos.workflow.result - End *test iteration* 53 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:45,724 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:45,724 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 54 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:45,724 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:45,724 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21192 Browse test_combinatorial_test_browse_scroll_indices_130204649492520225916315411222518227866 (mediaCollection){
   id = "Show:zero:1992:1992-05-05:46171"
   itemType = "album"
   displayType = "list"
   title = "Neumann U89s Blumlein Technique (crossed pair figure eights @ 90 degrees) FOB On Stand (Sweet Spot)->Neumann 48 Volt Phantom Power Supplies->Modified Sony D10 Pro [AUD]"
   summary = "CD #1 - Set I 
1.) Cole's Law*-> 
2.) Cissy Strut-> 
3.) Tear Tags Off Mattresses
4.) Home On The Range
CD #2 - Set II
1.) Outskirts Of Town**
2.) Berm
3.) Little Wing
4.) Gregg's Eggs
5.) Mercury Blues"
   canPlay = True
 })
2018-03-02 18:59:45,724 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:45,724 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:45,724 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21192 Browse test_combinatorial_test_browse_scroll_indices_130204649492520225916315411222518227866
2018-03-02 18:59:45,725 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:45,725 [INFO] SONOS.sonos.workflow.result - End *test iteration* 54 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:45,725 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:45,725 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 55 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:45,725 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:45,726 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21193 Browse test_combinatorial_test_browse_scroll_indices_130204649492520225916315411222518227866 (mediaCollection){
   id = "Show:zero:1992:1992-05-05:46171"
   itemType = "album"
   displayType = "list"
   title = "Neumann U89s Blumlein Technique (crossed pair figure eights @ 90 degrees) FOB On Stand (Sweet Spot)->Neumann 48 Volt Phantom Power Supplies->Modified Sony D10 Pro [AUD]"
   summary = "CD #1 - Set I 
1.) Cole's Law*-> 
2.) Cissy Strut-> 
3.) Tear Tags Off Mattresses
4.) Home On The Range
CD #2 - Set II
1.) Outskirts Of Town**
2.) Berm
3.) Little Wing
4.) Gregg's Eggs
5.) Mercury Blues"
   canPlay = True
 })
2018-03-02 18:59:45,726 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:45,726 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:45,726 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21193 Browse test_combinatorial_test_browse_scroll_indices_130204649492520225916315411222518227866
2018-03-02 18:59:45,726 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:45,726 [INFO] SONOS.sonos.workflow.result - End *test iteration* 55 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:45,726 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:45,726 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 56 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:45,727 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Show:zero:1992:1992-05-05:46171, 0, 10000, None)
2018-03-02 18:59:45,728 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Show:zero:1992:1992-05-05:46171</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:45,728 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:46,203 [DEBUG] SONOS.suds.client - waited 474 (ms) on server reply
2018-03-02 18:59:46,208 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>9</count>
            <total>9</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46171:869394</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 14:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46171</albumId>
                  <duration>866</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46171:869395</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 13:25</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46171</albumId>
                  <duration>805</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46171:869396</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 14:45</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46171</albumId>
                  <duration>885</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46171:869397</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law 11:29</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46171</albumId>
                  <duration>689</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46171:869398</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut &gt; 12:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46171</albumId>
                  <duration>762</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46171:869399</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 11:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46171</albumId>
                  <duration>695</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46171:869400</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 13:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46171</albumId>
                  <duration>834</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46171:869401</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Outskirts Of Town 20:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46171</albumId>
                  <duration>1203</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46171:869402</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Berm 7:14</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46171</albumId>
                  <duration>434</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:46,226 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:46,226 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21194 Browse test_combinatorial_test_browse_scroll_indices_76070050382784369698103307750266678910 (mediaCollection){
   id = "Show:zero:1992:1992-05-05:46182"
   itemType = "album"
   displayType = "list"
   title = "SBD > DAT [SBD]"
   summary = "Cole's Law ->
Anorexia
Tear Tags Off Mattresses
Home On The Range"
   canPlay = True
 })
2018-03-02 18:59:46,226 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:46,226 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:46,226 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21194 Browse test_combinatorial_test_browse_scroll_indices_76070050382784369698103307750266678910
2018-03-02 18:59:46,227 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:46,227 [INFO] SONOS.sonos.workflow.result - End *test iteration* 56 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:46,227 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:46,227 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 57 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:46,227 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Show:zero:1992:1992-05-05:46182, 0, 10000, None)
2018-03-02 18:59:46,229 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Show:zero:1992:1992-05-05:46182</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:46,229 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:46,656 [DEBUG] SONOS.suds.client - waited 426 (ms) on server reply
2018-03-02 18:59:46,660 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>5</count>
            <total>5</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46182:869581</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law &gt; &gt; 0:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46182</albumId>
                  <duration>44</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46182:869582</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Anorexia ( Isn&apos;t For Everyone ) 13:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46182</albumId>
                  <duration>815</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46182:869583</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 13:27</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46182</albumId>
                  <duration>807</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46182:869584</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 14:43</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46182</albumId>
                  <duration>883</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-05:46182:869585</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Note 11:27</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-05:46182</albumId>
                  <duration>687</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/5/92 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:46,671 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:46,671 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21195 Browse test_combinatorial_test_browse_scroll_indices_295922253900183261779883017107336909623 (mediaCollection){
   id = "Shows:zero:1992:1992-05-04"
   itemType = "container"
   displayType = "list"
   title = "1992-05-04 – The Bayou – Washington, DC [1]"
   summary = "1992-05-04"
   canPlay = True
 })
2018-03-02 18:59:46,671 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:46,671 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:46,671 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21195 Browse test_combinatorial_test_browse_scroll_indices_295922253900183261779883017107336909623
2018-03-02 18:59:46,672 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:46,672 [INFO] SONOS.sonos.workflow.result - End *test iteration* 57 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:46,672 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:46,672 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 58 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:46,672 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-05-04, 0, 10000, None)
2018-03-02 18:59:46,673 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-05-04</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:46,674 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:47,450 [DEBUG] SONOS.suds.client - waited 775 (ms) on server reply
2018-03-02 18:59:47,453 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>8</count>
            <total>8</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-04:46207:869967</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Berm 13:47</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-04:46207</albumId>
                  <duration>827</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/4/92 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-04:46207:869968</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law &gt; 13:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-04:46207</albumId>
                  <duration>801</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/4/92 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-04:46207:869969</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 16:29</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-04:46207</albumId>
                  <duration>989</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/4/92 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-04:46207:869970</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 13:56</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-04:46207</albumId>
                  <duration>836</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/4/92 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-04:46207:869971</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Roll Me Over 13:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-04:46207</albumId>
                  <duration>796</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/4/92 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-04:46207:869972</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 14:05</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-04:46207</albumId>
                  <duration>845</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/4/92 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-04:46207:869973</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 14:22</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-04:46207</albumId>
                  <duration>862</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/4/92 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-04:46207:869974</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 8:37</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-04:46207</albumId>
                  <duration>517</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/4/92 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:47,469 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:47,470 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21196 Browse test_combinatorial_test_browse_scroll_indices_76893395695642430605907680915281176823 (mediaCollection){
   id = "Shows:zero:1992:1992-05-03"
   itemType = "container"
   displayType = "list"
   title = "1992-05-03 – 8X10 Club – Baltimore, MD [1]"
   summary = "1992-05-03"
   canPlay = True
 })
2018-03-02 18:59:47,470 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:47,470 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:47,470 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21196 Browse test_combinatorial_test_browse_scroll_indices_76893395695642430605907680915281176823
2018-03-02 18:59:47,470 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:47,471 [INFO] SONOS.sonos.workflow.result - End *test iteration* 58 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:47,471 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:47,471 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 59 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:47,471 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-05-03, 0, 10000, None)
2018-03-02 18:59:47,472 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-05-03</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:47,473 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:48,084 [DEBUG] SONOS.suds.client - waited 611 (ms) on server reply
2018-03-02 18:59:48,089 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>10</count>
            <total>10</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870092</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 14:25</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>865</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870093</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 16:12</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>972</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870094</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>The Core 12:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>750</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870095</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 10:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>649</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870096</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 12:17</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>737</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870097</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law &gt; 12:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>720</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870098</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Many Rivers To Cross &gt; 19:05</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>1145</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870099</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 10:18</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>618</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870100</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs &gt; 11:20</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>680</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-05-03:46214:870101</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 17:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-05-03:46214</albumId>
                  <duration>1024</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>5/3/92 – 8X10 Club – Baltimore, MD</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:48,110 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:48,110 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21197 Browse test_combinatorial_test_browse_scroll_indices_13081645389662650585140015985038979154 (mediaCollection){
   id = "Shows:zero:1992:1992-04-05"
   itemType = "container"
   displayType = "list"
   title = "1992-04-05 [1]"
   summary = "1992-04-05"
   canPlay = True
 })
2018-03-02 18:59:48,111 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:48,111 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:48,111 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21197 Browse test_combinatorial_test_browse_scroll_indices_13081645389662650585140015985038979154
2018-03-02 18:59:48,111 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:48,111 [INFO] SONOS.sonos.workflow.result - End *test iteration* 59 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:48,111 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:48,112 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 60 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:48,112 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-04-05, 0, 10000, None)
2018-03-02 18:59:48,113 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-04-05</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:48,113 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:48,678 [DEBUG] SONOS.suds.client - waited 564 (ms) on server reply
2018-03-02 18:59:48,686 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>24</count>
            <total>24</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166247</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s1t01.flac 7:53</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>473</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166248</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s1t02.flac 26:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>1560</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166249</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s1t03.flac 14:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>843</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166250</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s1t04.flac 10:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>649</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166251</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s1t05.flac 0:57</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>57</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166252</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s1t06.flac 1:59</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>119</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166253</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s1t07.flac 0:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>21</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166254</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s1t08.flac 6:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>402</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166255</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s1t09.flac 25:39</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>1539</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166256</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s2t01.flac 19:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>1189</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166257</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s2t02.flac 14:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>849</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166258</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s2t03.flac 32:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>1924</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166259</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s2t04.flac 14:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>866</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166260</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t01.flac 1:17</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>77</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166261</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t02.flac 2:40</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>160</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166262</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t03.flac 3:38</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>218</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166263</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t04.flac 2:28</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>148</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166264</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t05.flac 2:40</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>160</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166265</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t06.flac 2:02</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>122</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166266</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t07.flac 2:15</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>135</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166267</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t08.flac 3:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>212</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166268</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t09.flac 2:20</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>140</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166269</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t10.flac 3:37</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>217</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-05:104149:2166270</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1992-04-05_eugene_multi.mic_1644_s3t11.flac 0:11</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-05:104149</albumId>
                  <duration>11</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/5/92</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:48,733 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:48,733 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21198 Browse test_combinatorial_test_browse_scroll_indices_163041442061823837375581200344724036947 (mediaCollection){
   id = "Shows:zero:1992:1992-04-04"
   itemType = "container"
   displayType = "list"
   title = "1992-04-04 – Rexville Grange – La Conner, WA [1]"
   summary = "1992-04-04"
   canPlay = True
 })
2018-03-02 18:59:48,733 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:48,733 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:48,734 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21198 Browse test_combinatorial_test_browse_scroll_indices_163041442061823837375581200344724036947
2018-03-02 18:59:48,734 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:48,734 [INFO] SONOS.sonos.workflow.result - End *test iteration* 60 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:48,734 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:48,734 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 61 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:48,734 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-04-04, 0, 10000, None)
2018-03-02 18:59:48,736 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-04-04</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:48,736 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:49,250 [DEBUG] SONOS.suds.client - waited 514 (ms) on server reply
2018-03-02 18:59:49,257 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>16</count>
            <total>16</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869761</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Berm 12:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>762</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869763</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 15:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>909</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869765</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 15:19</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>919</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869767</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 13:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>796</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869769</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance In A Million 7:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>424</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869771</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 13:48</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>828</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869774</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Wavy Gravy 12:41</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>761</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869776</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 15:23</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>923</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869777</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Roll Me Over 11:56</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>716</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869779</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Greggs Eggs 19:41</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>1181</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869780</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 13:24</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>804</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869783</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 14:10</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>850</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869784</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Severe Tire Damage 13:45</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>825</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869786</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Coles Law 8:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>510</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869788</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Sick and Tired* 8:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>506</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-04-04:46195:869790</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>CC Rider* 8:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-04-04:46195</albumId>
                  <duration>512</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/4/92 – Rexville Grange – La Conner, WA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:49,292 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:49,292 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21199 Browse test_combinatorial_test_browse_scroll_indices_79976680993349805702837569712734781088 (mediaCollection){
   id = "Shows:zero:1992:1992-03-21"
   itemType = "container"
   displayType = "list"
   title = "1992-03-21 – Starry Plough – Berkeley, CA [1]"
   summary = "1992-03-21"
   canPlay = True
 })
2018-03-02 18:59:49,292 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:49,292 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:49,293 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21199 Browse test_combinatorial_test_browse_scroll_indices_79976680993349805702837569712734781088
2018-03-02 18:59:49,293 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:49,293 [INFO] SONOS.sonos.workflow.result - End *test iteration* 61 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:49,293 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:49,293 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 62 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:49,293 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-03-21, 0, 10000, None)
2018-03-02 18:59:49,295 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-03-21</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:49,295 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:49,745 [DEBUG] SONOS.suds.client - waited 449 (ms) on server reply
2018-03-02 18:59:49,754 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>13</count>
            <total>13</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869712</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law 14:58</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>898</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869713</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 16:18</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>978</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869714</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 13:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>789</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869715</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home on the Range 2:15</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>135</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869716</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 15:15</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>915</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869717</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Many Rivers to Cross 9:47</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>587</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869718</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 14:39</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>879</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869719</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 3:12</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>192</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869720</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 14:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>844</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869721</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance in a Million 13:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>796</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869722</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>E:Berm 14:06</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>846</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869723</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Unknown Filler 11:18</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>678</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-03-21:46191:869724</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Zero1992-03-21d3t03.shn 8:33</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-03-21:46191</albumId>
                  <duration>513</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/21/92 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:49,813 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:49,814 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21200 Browse test_combinatorial_test_browse_scroll_indices_103586660729515852334608638343005853778 (mediaCollection){
   id = "Shows:zero:1992:1992-01-18"
   itemType = "container"
   displayType = "list"
   title = "1992-01-18 [1]"
   summary = "1992-01-18"
   canPlay = True
 })
2018-03-02 18:59:49,814 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:49,814 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:49,814 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21200 Browse test_combinatorial_test_browse_scroll_indices_103586660729515852334608638343005853778
2018-03-02 18:59:49,814 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:49,814 [INFO] SONOS.sonos.workflow.result - End *test iteration* 62 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:49,815 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:49,815 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 63 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:49,815 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1992:1992-01-18, 0, 10000, None)
2018-03-02 18:59:49,816 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1992:1992-01-18</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:49,817 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:50,397 [DEBUG] SONOS.suds.client - waited 579 (ms) on server reply
2018-03-02 18:59:50,399 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>6</count>
            <total>6</total>
            <mediaMetadata>
               <id>Track:zero:1992:1992-01-18:100463:2112704</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Dark Star 9:11</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-01-18:100463</albumId>
                  <duration>551</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/18/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-01-18:100463:2112705</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Marteen&apos;s B-day Poem &gt; * 11:25</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-01-18:100463</albumId>
                  <duration>685</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/18/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-01-18:100463:2112706</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 13:37</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-01-18:100463</albumId>
                  <duration>817</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/18/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-01-18:100463:2112707</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 11:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-01-18:100463</albumId>
                  <duration>695</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/18/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-01-18:100463:2112708</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Many Rivers To Cross 9:40</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-01-18:100463</albumId>
                  <duration>580</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/18/92</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1992:1992-01-18:100463:2112709</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 23:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1992:1992-01-18:100463</albumId>
                  <duration>1429</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/18/92</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:50,413 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:50,413 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21201 Browse test_combinatorial_test_browse_scroll_indices_313666336370332915645905533207382558323 (mediaCollection){
   id = "Year:zero:1991"
   itemType = "container"
   displayType = "list"
   title = "1991"
   summary = "1991"
   canPlay = False
 })
2018-03-02 18:59:50,414 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:50,414 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:50,414 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21201 Browse test_combinatorial_test_browse_scroll_indices_313666336370332915645905533207382558323
2018-03-02 18:59:50,414 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:50,414 [INFO] SONOS.sonos.workflow.result - End *test iteration* 63 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:50,414 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:50,414 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 64 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:50,415 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1991, 0, 10000, None)
2018-03-02 18:59:50,416 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1991</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:50,416 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:51,166 [DEBUG] SONOS.suds.client - waited 749 (ms) on server reply
2018-03-02 18:59:51,168 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>10</count>
            <total>10</total>
            <mediaCollection>
               <id>Shows:zero:1991:1991-01-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-01-23 – Johshas – Breckenridge Colorado [1]</title>
               <summary>1991-01-23</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-03-30</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-03-30 – Starry Plough – Berkeley, CA [1]</title>
               <summary>1991-03-30</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-06-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-06-08 – Wetlands – New York City, NY [1] [SBD]</title>
               <summary>1991-06-08</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-06-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-06-13 – The Bayou – Washington, DC [1]</title>
               <summary>1991-06-13</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-06-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-06-15 – Chestnut Cabaret – Philadelphia, PA [1]</title>
               <summary>1991-06-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-08-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-08-03 [1]</title>
               <summary>1991-08-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-09-07</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-09-07 – The Starry Plough – Berkeley, Ca [2]</title>
               <summary>1991-09-07</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-10-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-10-12 – Rock Candy – Seattle, WA [1] [SBD]</title>
               <summary>1991-10-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-10-17</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-10-17 – Sweetwater – Mill Valley, Ca [1]</title>
               <summary>1991-10-17</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1991:1991-12-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991-12-29 – Last Day Saloon – San Francisco, CA [1] [SBD]</title>
               <summary>1991-12-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:51,183 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,184 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21202 Browse test_combinatorial_test_browse_scroll_indices_40197353767863719351974096632704186285 (mediaCollection){
   id = "Shows:zero:1991:1991-01-23"
   itemType = "container"
   displayType = "list"
   title = "1991-01-23 – Johshas – Breckenridge Colorado [1]"
   summary = "1991-01-23"
   canPlay = True
 })
2018-03-02 18:59:51,184 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,184 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,184 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21202 Browse test_combinatorial_test_browse_scroll_indices_40197353767863719351974096632704186285
2018-03-02 18:59:51,185 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,185 [INFO] SONOS.sonos.workflow.result - End *test iteration* 64 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,185 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,185 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 65 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,185 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,186 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21203 Browse test_combinatorial_test_browse_scroll_indices_312785896016087575827703158102460561049 (mediaCollection){
   id = "Shows:zero:1991:1991-03-30"
   itemType = "container"
   displayType = "list"
   title = "1991-03-30 – Starry Plough – Berkeley, CA [1]"
   summary = "1991-03-30"
   canPlay = True
 })
2018-03-02 18:59:51,186 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,186 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,186 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21203 Browse test_combinatorial_test_browse_scroll_indices_312785896016087575827703158102460561049
2018-03-02 18:59:51,186 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,186 [INFO] SONOS.sonos.workflow.result - End *test iteration* 65 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,186 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,187 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 66 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,187 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,187 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21204 Browse test_combinatorial_test_browse_scroll_indices_194330207595410128622684249088156930272 (mediaCollection){
   id = "Shows:zero:1991:1991-06-08"
   itemType = "container"
   displayType = "list"
   title = "1991-06-08 – Wetlands – New York City, NY [1] [SBD]"
   summary = "1991-06-08"
   canPlay = True
 })
2018-03-02 18:59:51,187 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,187 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,187 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21204 Browse test_combinatorial_test_browse_scroll_indices_194330207595410128622684249088156930272
2018-03-02 18:59:51,188 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,188 [INFO] SONOS.sonos.workflow.result - End *test iteration* 66 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,188 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,188 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 67 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,188 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,188 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21205 Browse test_combinatorial_test_browse_scroll_indices_170140909201028230999700293729092914600 (mediaCollection){
   id = "Shows:zero:1991:1991-06-13"
   itemType = "container"
   displayType = "list"
   title = "1991-06-13 – The Bayou – Washington, DC [1]"
   summary = "1991-06-13"
   canPlay = True
 })
2018-03-02 18:59:51,189 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,189 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,189 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21205 Browse test_combinatorial_test_browse_scroll_indices_170140909201028230999700293729092914600
2018-03-02 18:59:51,189 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,189 [INFO] SONOS.sonos.workflow.result - End *test iteration* 67 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,189 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,189 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 68 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,189 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,190 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21206 Browse test_combinatorial_test_browse_scroll_indices_142049564059564355133977781725022271982 (mediaCollection){
   id = "Shows:zero:1991:1991-06-15"
   itemType = "container"
   displayType = "list"
   title = "1991-06-15 – Chestnut Cabaret – Philadelphia, PA [1]"
   summary = "1991-06-15"
   canPlay = True
 })
2018-03-02 18:59:51,190 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,190 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,190 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21206 Browse test_combinatorial_test_browse_scroll_indices_142049564059564355133977781725022271982
2018-03-02 18:59:51,190 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,190 [INFO] SONOS.sonos.workflow.result - End *test iteration* 68 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,191 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,191 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 69 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,191 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,191 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21207 Browse test_combinatorial_test_browse_scroll_indices_209584968496677553079055258134063361750 (mediaCollection){
   id = "Shows:zero:1991:1991-08-03"
   itemType = "container"
   displayType = "list"
   title = "1991-08-03 [1]"
   summary = "1991-08-03"
   canPlay = True
 })
2018-03-02 18:59:51,192 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,192 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,192 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21207 Browse test_combinatorial_test_browse_scroll_indices_209584968496677553079055258134063361750
2018-03-02 18:59:51,192 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,192 [INFO] SONOS.sonos.workflow.result - End *test iteration* 69 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,192 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,192 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 70 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,192 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,193 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21208 Browse test_combinatorial_test_browse_scroll_indices_226083233188550476007791346672212492704 (mediaCollection){
   id = "Shows:zero:1991:1991-09-07"
   itemType = "container"
   displayType = "list"
   title = "1991-09-07 – The Starry Plough – Berkeley, Ca [2]"
   summary = "1991-09-07"
   canPlay = False
 })
2018-03-02 18:59:51,193 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,193 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,193 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21208 Browse test_combinatorial_test_browse_scroll_indices_226083233188550476007791346672212492704
2018-03-02 18:59:51,193 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,193 [INFO] SONOS.sonos.workflow.result - End *test iteration* 70 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,194 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,194 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 71 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,194 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,194 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21209 Browse test_combinatorial_test_browse_scroll_indices_83145939998469150709741350262442770638 (mediaCollection){
   id = "Shows:zero:1991:1991-10-12"
   itemType = "container"
   displayType = "list"
   title = "1991-10-12 – Rock Candy – Seattle, WA [1] [SBD]"
   summary = "1991-10-12"
   canPlay = True
 })
2018-03-02 18:59:51,194 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,194 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,194 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21209 Browse test_combinatorial_test_browse_scroll_indices_83145939998469150709741350262442770638
2018-03-02 18:59:51,195 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,195 [INFO] SONOS.sonos.workflow.result - End *test iteration* 71 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,195 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,195 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 72 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,195 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,195 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21210 Browse test_combinatorial_test_browse_scroll_indices_152994910450428996988080816159755111700 (mediaCollection){
   id = "Shows:zero:1991:1991-10-17"
   itemType = "container"
   displayType = "list"
   title = "1991-10-17 – Sweetwater – Mill Valley, Ca [1]"
   summary = "1991-10-17"
   canPlay = True
 })
2018-03-02 18:59:51,196 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,196 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,196 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21210 Browse test_combinatorial_test_browse_scroll_indices_152994910450428996988080816159755111700
2018-03-02 18:59:51,196 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,196 [INFO] SONOS.sonos.workflow.result - End *test iteration* 72 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,197 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,197 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 73 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,197 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,197 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21211 Browse test_combinatorial_test_browse_scroll_indices_143609006930137966944623270583147059444 (mediaCollection){
   id = "Shows:zero:1991:1991-12-29"
   itemType = "container"
   displayType = "list"
   title = "1991-12-29 – Last Day Saloon – San Francisco, CA [1] [SBD]"
   summary = "1991-12-29"
   canPlay = True
 })
2018-03-02 18:59:51,197 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,197 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,198 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21211 Browse test_combinatorial_test_browse_scroll_indices_143609006930137966944623270583147059444
2018-03-02 18:59:51,198 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,198 [INFO] SONOS.sonos.workflow.result - End *test iteration* 73 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,198 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,198 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 74 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,198 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,199 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21212 Browse test_combinatorial_test_browse_scroll_indices_143609006930137966944623270583147059444 (mediaCollection){
   id = "Shows:zero:1991:1991-12-29"
   itemType = "container"
   displayType = "list"
   title = "1991-12-29 – Last Day Saloon – San Francisco, CA [1] [SBD]"
   summary = "1991-12-29"
   canPlay = True
 })
2018-03-02 18:59:51,199 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:51,199 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:51,199 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21212 Browse test_combinatorial_test_browse_scroll_indices_143609006930137966944623270583147059444
2018-03-02 18:59:51,199 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:51,199 [INFO] SONOS.sonos.workflow.result - End *test iteration* 74 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:51,199 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:51,200 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 75 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:51,200 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-12-29, 0, 10000, None)
2018-03-02 18:59:51,201 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-12-29</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:51,202 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:53,890 [DEBUG] SONOS.suds.client - waited 2.688 (seconds) on server reply
2018-03-02 18:59:53,894 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>11</count>
            <total>11</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869054</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Wavy Gravy Shit Rap 4:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>284</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869055</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut 12:29</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>749</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869057</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Riding With The King 8:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>512</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869059</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 14:28</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>868</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869061</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis &gt; 10:52</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>652</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869064</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Jam &gt; 7:17</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>437</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869066</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 13:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>829</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869067</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Many Rivers to Cross 16:41</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>1001</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869070</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Supersonic Transport 9:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>543</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869071</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 21:33</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>1293</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-12-29:46151:869073</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>The Core 19:14</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-12-29:46151</albumId>
                  <duration>1154</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>12/29/91 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:53,914 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:53,915 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21213 Browse test_combinatorial_test_browse_scroll_indices_152994910450428996988080816159755111700 (mediaCollection){
   id = "Shows:zero:1991:1991-10-17"
   itemType = "container"
   displayType = "list"
   title = "1991-10-17 – Sweetwater – Mill Valley, Ca [1]"
   summary = "1991-10-17"
   canPlay = True
 })
2018-03-02 18:59:53,915 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:53,915 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:53,915 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21213 Browse test_combinatorial_test_browse_scroll_indices_152994910450428996988080816159755111700
2018-03-02 18:59:53,915 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:53,915 [INFO] SONOS.sonos.workflow.result - End *test iteration* 75 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:53,916 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:53,916 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 76 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:53,916 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-10-17, 0, 10000, None)
2018-03-02 18:59:53,917 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-10-17</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:53,919 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:55,575 [DEBUG] SONOS.suds.client - waited 1.656 (seconds) on server reply
2018-03-02 18:59:55,580 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>13</count>
            <total>13</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163263</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s1t01.flac 14:31</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>871</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163264</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s1t02.flac 25:20</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>1520</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163265</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s1t03.flac 12:15</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>735</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163266</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s1t04.flac 8:23</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>503</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163267</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s1t05.flac 17:39</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>1059</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163268</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s1t06.flac 12:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>741</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163269</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s2t01.flac 21:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>1286</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163270</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s2t02.flac 11:37</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>697</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163271</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s2t03.flac 0:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>30</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163272</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s2t04.flac 17:07</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>1027</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163273</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s2t05.flac 12:19</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>739</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163274</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s2t06.flac 9:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>566</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-17:104113:2163275</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-10-17_sweetwater_1644_s2t07.flac 14:01</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-17:104113</albumId>
                  <duration>841</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/17/91 – Sweetwater – Mill Valley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:55,610 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:55,610 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21214 Browse test_combinatorial_test_browse_scroll_indices_83145939998469150709741350262442770638 (mediaCollection){
   id = "Shows:zero:1991:1991-10-12"
   itemType = "container"
   displayType = "list"
   title = "1991-10-12 – Rock Candy – Seattle, WA [1] [SBD]"
   summary = "1991-10-12"
   canPlay = True
 })
2018-03-02 18:59:55,611 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:55,611 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:55,611 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21214 Browse test_combinatorial_test_browse_scroll_indices_83145939998469150709741350262442770638
2018-03-02 18:59:55,611 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:55,611 [INFO] SONOS.sonos.workflow.result - End *test iteration* 76 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:55,611 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:55,611 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 77 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:55,612 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-10-12, 0, 10000, None)
2018-03-02 18:59:55,613 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-10-12</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:55,614 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:56,899 [DEBUG] SONOS.suds.client - waited 1.285 (seconds) on server reply
2018-03-02 18:59:56,902 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>9</count>
            <total>9</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-12:46147:869015</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Berm 8:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-12:46147</albumId>
                  <duration>512</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/12/91 – Rock Candy – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-12:46147:869016</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 15:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-12:46147</albumId>
                  <duration>942</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/12/91 – Rock Candy – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-12:46147:869017</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Boogie On Reggae Woman 12:48</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-12:46147</albumId>
                  <duration>768</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/12/91 – Rock Candy – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-12:46147:869018</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Do I Move You 11:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-12:46147</albumId>
                  <duration>681</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/12/91 – Rock Candy – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-12:46147:869019</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 15:27</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-12:46147</albumId>
                  <duration>927</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/12/91 – Rock Candy – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-12:46147:869020</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>High-Heeled Sneakers 8:58</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-12:46147</albumId>
                  <duration>538</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/12/91 – Rock Candy – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-12:46147:869021</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 10:10</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-12:46147</albumId>
                  <duration>610</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/12/91 – Rock Candy – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-12:46147:869022</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>?? 15:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-12:46147</albumId>
                  <duration>916</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/12/91 – Rock Candy – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-10-12:46147:869023</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Outro 1:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-10-12:46147</albumId>
                  <duration>90</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>10/12/91 – Rock Candy – Seattle, WA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:56,921 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:56,921 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21215 Browse test_combinatorial_test_browse_scroll_indices_226083233188550476007791346672212492704 (mediaCollection){
   id = "Shows:zero:1991:1991-09-07"
   itemType = "container"
   displayType = "list"
   title = "1991-09-07 – The Starry Plough – Berkeley, Ca [2]"
   summary = "1991-09-07"
   canPlay = False
 })
2018-03-02 18:59:56,922 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:56,922 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:56,922 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21215 Browse test_combinatorial_test_browse_scroll_indices_226083233188550476007791346672212492704
2018-03-02 18:59:56,922 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:56,922 [INFO] SONOS.sonos.workflow.result - End *test iteration* 77 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:56,923 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:56,923 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 78 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:56,924 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-09-07, 0, 10000, None)
2018-03-02 18:59:56,925 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-09-07</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:56,926 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:57,617 [DEBUG] SONOS.suds.client - waited 691 (ms) on server reply
2018-03-02 18:59:57,619 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>2</count>
            <total>2</total>
            <mediaCollection>
               <id>Show:zero:1991:1991-09-07:46149</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>6 Mic Mix&gt;Ampex MX10&gt;Dat&gt;CD [AUD]</title>
               <summary>Berm, Baby Baby, Tangled Hangers, Tongue &apos;n&apos; Groove, Rigor Mortis, Boogie On Reggae Woman, Tear Tags Off Mattresses, ??blues tune??, Finders Keepers, Do I Move You, Golden Road</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Show:zero:1991:1991-09-07:104148</id>
               <itemType>album</itemType>
               <displayType>list</displayType>
               <title>Close-Mic&apos;d Mix by John H. [AUD]</title>
               <summary>&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;Zero&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;w/ Merle Saunders&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;September 07, 1991&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;Starry Plough&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;Berkeley, Ca&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;~_~_~_~_~_~_~_~_~_~_~_~_~_~_~&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;I have no idea of the song list. Help Requested. Please and thanks.&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;~_~_~_~_~_~_~_~_~_~_~_~_~_~_~&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;Close Mic’d Mix by John H.&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;2 - Sennheiser MD441’s on-stage ambient&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;1 - Senn MD441 on Kimock&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;1 - MD441 on vocal - drum monitor&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;Ampex Tube Mixer&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;Sony 75ES DAT 16.48&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;~then~&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;Tascam DA20mkII 48khz -&gt; Tascam CDRW7000 Audio CD-R 16.44 master&lt;/p&gt;
&lt;p style=&quot;margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;&quot;&gt;Transfer to 16.44 by Mike French apprx. 2001/02’ish&lt;/p&gt;</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:57,625 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:57,625 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21216 Browse test_combinatorial_test_browse_scroll_indices_39102817723295694892849126530192447690 (mediaCollection){
   id = "Show:zero:1991:1991-09-07:46149"
   itemType = "album"
   displayType = "list"
   title = "6 Mic Mix>Ampex MX10>Dat>CD [AUD]"
   summary = "Berm, Baby Baby, Tangled Hangers, Tongue 'n' Groove, Rigor Mortis, Boogie On Reggae Woman, Tear Tags Off Mattresses, ??blues tune??, Finders Keepers, Do I Move You, Golden Road"
   canPlay = True
 })
2018-03-02 18:59:57,626 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:57,626 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:57,626 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21216 Browse test_combinatorial_test_browse_scroll_indices_39102817723295694892849126530192447690
2018-03-02 18:59:57,626 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:57,626 [INFO] SONOS.sonos.workflow.result - End *test iteration* 78 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:57,626 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:57,626 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 79 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:57,627 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:57,627 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21217 Browse test_combinatorial_test_browse_scroll_indices_78930838010136996436696723343197399723 (mediaCollection){
   id = "Show:zero:1991:1991-09-07:104148"
   itemType = "album"
   displayType = "list"
   title = "Close-Mic'd Mix by John H. [AUD]"
   summary = "<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Zero</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">w/ Merle Saunders</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">September 07, 1991</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Starry Plough</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Berkeley, Ca</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;"><br /></p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">~_~_~_~_~_~_~_~_~_~_~_~_~_~_~</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;"><br /></p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">I have no idea of the song list. Help Requested. Please and thanks.</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;"><br /></p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">~_~_~_~_~_~_~_~_~_~_~_~_~_~_~</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;"><br /></p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Close Mic’d Mix by John H.</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">2 - Sennheiser MD441’s on-stage ambient</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">1 - Senn MD441 on Kimock</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">1 - MD441 on vocal - drum monitor</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Ampex Tube Mixer</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Sony 75ES DAT 16.48</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">~then~</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Tascam DA20mkII 48khz -> Tascam CDRW7000 Audio CD-R 16.44 master</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Transfer to 16.44 by Mike French apprx. 2001/02’ish</p>"
   canPlay = True
 })
2018-03-02 18:59:57,627 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:57,627 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:57,627 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21217 Browse test_combinatorial_test_browse_scroll_indices_78930838010136996436696723343197399723
2018-03-02 18:59:57,628 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:57,628 [INFO] SONOS.sonos.workflow.result - End *test iteration* 79 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:57,628 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:57,628 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 80 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:57,628 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:57,628 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21218 Browse test_combinatorial_test_browse_scroll_indices_78930838010136996436696723343197399723 (mediaCollection){
   id = "Show:zero:1991:1991-09-07:104148"
   itemType = "album"
   displayType = "list"
   title = "Close-Mic'd Mix by John H. [AUD]"
   summary = "<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Zero</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">w/ Merle Saunders</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">September 07, 1991</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Starry Plough</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Berkeley, Ca</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;"><br /></p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">~_~_~_~_~_~_~_~_~_~_~_~_~_~_~</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;"><br /></p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">I have no idea of the song list. Help Requested. Please and thanks.</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;"><br /></p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">~_~_~_~_~_~_~_~_~_~_~_~_~_~_~</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;"><br /></p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Close Mic’d Mix by John H.</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">2 - Sennheiser MD441’s on-stage ambient</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">1 - Senn MD441 on Kimock</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">1 - MD441 on vocal - drum monitor</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Ampex Tube Mixer</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Sony 75ES DAT 16.48</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">~then~</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Tascam DA20mkII 48khz -> Tascam CDRW7000 Audio CD-R 16.44 master</p>
<p style="margin:0px;font-size:12px;line-height:normal;font-family:Helvetica;">Transfer to 16.44 by Mike French apprx. 2001/02’ish</p>"
   canPlay = True
 })
2018-03-02 18:59:57,629 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:57,629 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:57,629 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21218 Browse test_combinatorial_test_browse_scroll_indices_78930838010136996436696723343197399723
2018-03-02 18:59:57,629 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:57,629 [INFO] SONOS.sonos.workflow.result - End *test iteration* 80 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:57,629 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:57,630 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 81 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:57,630 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Show:zero:1991:1991-09-07:104148, 0, 10000, None)
2018-03-02 18:59:57,631 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Show:zero:1991:1991-09-07:104148</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:57,632 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:58,389 [DEBUG] SONOS.suds.client - waited 757 (ms) on server reply
2018-03-02 18:59:58,393 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>11</count>
            <total>11</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164488</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s1t01.flac 17:31</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>1051</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164489</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s1t02.flac 15:29</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>929</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164490</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s1t03.flac 18:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>1089</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164491</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s1t04.flac 15:11</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>911</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164492</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s1t05.flac 15:07</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>907</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164493</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s2t01.flac 15:37</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>937</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164494</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s2t02.flac 15:59</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>959</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164495</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s2t03.flac 12:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>723</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164496</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s2t04.flac 11:28</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>688</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164497</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s2t05.flac 14:11</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>851</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:104148:2164498</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-09-07_berkeley_1644_s2t06.flac 14:05</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:104148</albumId>
                  <duration>845</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:58,418 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:58,419 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21219 Browse test_combinatorial_test_browse_scroll_indices_39102817723295694892849126530192447690 (mediaCollection){
   id = "Show:zero:1991:1991-09-07:46149"
   itemType = "album"
   displayType = "list"
   title = "6 Mic Mix>Ampex MX10>Dat>CD [AUD]"
   summary = "Berm, Baby Baby, Tangled Hangers, Tongue 'n' Groove, Rigor Mortis, Boogie On Reggae Woman, Tear Tags Off Mattresses, ??blues tune??, Finders Keepers, Do I Move You, Golden Road"
   canPlay = True
 })
2018-03-02 18:59:58,419 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:58,419 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:58,419 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21219 Browse test_combinatorial_test_browse_scroll_indices_39102817723295694892849126530192447690
2018-03-02 18:59:58,419 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:58,419 [INFO] SONOS.sonos.workflow.result - End *test iteration* 81 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:58,420 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:58,420 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 82 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:58,420 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Show:zero:1991:1991-09-07:46149, 0, 10000, None)
2018-03-02 18:59:58,422 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Show:zero:1991:1991-09-07:46149</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:58,422 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:58,827 [DEBUG] SONOS.suds.client - waited 405 (ms) on server reply
2018-03-02 18:59:58,829 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>4</count>
            <total>4</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:46149:869044</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero91-09-07d1t01.shn 14:13</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:46149</albumId>
                  <duration>853</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:46149:869045</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero91-09-07d1t02.shn 29:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:46149</albumId>
                  <duration>1789</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:46149:869046</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero91-09-07d1t03.shn 13:29</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:46149</albumId>
                  <duration>809</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-09-07:46149:869047</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero91-09-07d1t04.shn 14:23</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-09-07:46149</albumId>
                  <duration>863</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/7/91 – The Starry Plough – Berkeley, Ca</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:58,839 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:58,840 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21220 Browse test_combinatorial_test_browse_scroll_indices_209584968496677553079055258134063361750 (mediaCollection){
   id = "Shows:zero:1991:1991-08-03"
   itemType = "container"
   displayType = "list"
   title = "1991-08-03 [1]"
   summary = "1991-08-03"
   canPlay = True
 })
2018-03-02 18:59:58,840 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:58,840 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:58,841 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21220 Browse test_combinatorial_test_browse_scroll_indices_209584968496677553079055258134063361750
2018-03-02 18:59:58,841 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:58,841 [INFO] SONOS.sonos.workflow.result - End *test iteration* 82 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:58,841 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:58,841 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 83 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:58,842 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-08-03, 0, 10000, None)
2018-03-02 18:59:58,843 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-08-03</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:58,843 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:59,383 [DEBUG] SONOS.suds.client - waited 539 (ms) on server reply
2018-03-02 18:59:59,389 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>14</count>
            <total>14</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166233</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s1t01.flac 14:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>874</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166234</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s1t02.flac 17:15</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>1035</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166235</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s1t03.flac 12:41</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>761</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166236</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s1t04.flac 12:29</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>749</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166237</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s1t05.flac 12:23</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>743</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166238</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s1t06.flac 17:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>1020</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166239</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s1t07.flac 11:06</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>666</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166240</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s1t08.flac 11:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>694</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166241</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s2t01.flac 12:38</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>758</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166242</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s2t02.flac 14:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>894</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166243</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s2t03.flac 12:31</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>751</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166244</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s2t04.flac 9:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>544</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166245</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s2t05.flac 11:01</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>661</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-08-03:104147:2166246</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1991-08-03_multi-mic-mix_1644_s2t06.flac 16:43</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-08-03:104147</albumId>
                  <duration>1003</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/3/91</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:59,416 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:59,416 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21221 Browse test_combinatorial_test_browse_scroll_indices_142049564059564355133977781725022271982 (mediaCollection){
   id = "Shows:zero:1991:1991-06-15"
   itemType = "container"
   displayType = "list"
   title = "1991-06-15 – Chestnut Cabaret – Philadelphia, PA [1]"
   summary = "1991-06-15"
   canPlay = True
 })
2018-03-02 18:59:59,417 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:59,417 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:59,417 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21221 Browse test_combinatorial_test_browse_scroll_indices_142049564059564355133977781725022271982
2018-03-02 18:59:59,417 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:59,417 [INFO] SONOS.sonos.workflow.result - End *test iteration* 83 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:59,417 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:59,417 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 84 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:59,418 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-06-15, 0, 10000, None)
2018-03-02 18:59:59,419 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-06-15</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:59,419 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 18:59:59,927 [DEBUG] SONOS.suds.client - waited 507 (ms) on server reply
2018-03-02 18:59:59,929 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-15:46141:868883</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Supersonic Transport &gt; 12:02</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-15:46141</albumId>
                  <duration>722</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/15/91 – Chestnut Cabaret – Philadelphia, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-15:46141:868884</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 12:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-15:46141</albumId>
                  <duration>775</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/15/91 – Chestnut Cabaret – Philadelphia, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-15:46141:868885</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Keeper Of The Flame 8:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-15:46141</albumId>
                  <duration>489</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/15/91 – Chestnut Cabaret – Philadelphia, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-15:46141:868886</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 11:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-15:46141</albumId>
                  <duration>681</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/15/91 – Chestnut Cabaret – Philadelphia, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-15:46141:868889</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>The Core 8:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-15:46141</albumId>
                  <duration>480</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/15/91 – Chestnut Cabaret – Philadelphia, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-15:46141:868891</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 14:05</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-15:46141</albumId>
                  <duration>845</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/15/91 – Chestnut Cabaret – Philadelphia, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-15:46141:868893</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 10:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-15:46141</albumId>
                  <duration>609</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/15/91 – Chestnut Cabaret – Philadelphia, PA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 18:59:59,975 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:59,976 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21222 Browse test_combinatorial_test_browse_scroll_indices_170140909201028230999700293729092914600 (mediaCollection){
   id = "Shows:zero:1991:1991-06-13"
   itemType = "container"
   displayType = "list"
   title = "1991-06-13 – The Bayou – Washington, DC [1]"
   summary = "1991-06-13"
   canPlay = True
 })
2018-03-02 18:59:59,976 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 18:59:59,976 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 18:59:59,976 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21222 Browse test_combinatorial_test_browse_scroll_indices_170140909201028230999700293729092914600
2018-03-02 18:59:59,976 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 18:59:59,976 [INFO] SONOS.sonos.workflow.result - End *test iteration* 84 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 




2018-03-02 18:59:59,977 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 18:59:59,977 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 85 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 06:59 PM 
2018-03-02 18:59:59,977 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-06-13, 0, 10000, None)
2018-03-02 18:59:59,978 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-06-13</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 18:59:59,978 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:00,591 [DEBUG] SONOS.suds.client - waited 612 (ms) on server reply
2018-03-02 19:00:00,595 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>12</count>
            <total>12</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869108</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Keeper Of The Flame 9:25</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>565</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869109</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 15:40</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>940</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869110</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 7:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>464</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869111</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut 12:45</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>765</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869112</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 11:59</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>719</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869113</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Godzilla 12:06</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>726</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869114</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Many Rivers To Cross 9:37</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>577</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869115</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Straight Jackets 8:18</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>498</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869116</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Supersonic Transport 10:22</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>622</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869117</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Smells Like Girls Drums 10:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>600</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869118</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 11:59</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>719</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-13:46153:869119</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Roll Me Over 13:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-13:46153</albumId>
                  <duration>824</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/13/91 – The Bayou – Washington, DC</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:00,619 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:00,620 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21223 Browse test_combinatorial_test_browse_scroll_indices_194330207595410128622684249088156930272 (mediaCollection){
   id = "Shows:zero:1991:1991-06-08"
   itemType = "container"
   displayType = "list"
   title = "1991-06-08 – Wetlands – New York City, NY [1] [SBD]"
   summary = "1991-06-08"
   canPlay = True
 })
2018-03-02 19:00:00,620 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:00,620 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:00,620 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21223 Browse test_combinatorial_test_browse_scroll_indices_194330207595410128622684249088156930272
2018-03-02 19:00:00,621 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:00,621 [INFO] SONOS.sonos.workflow.result - End *test iteration* 85 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:00,621 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:00,621 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 86 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:00,622 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-06-08, 0, 10000, None)
2018-03-02 19:00:00,624 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-06-08</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:00,625 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:02,475 [DEBUG] SONOS.suds.client - waited 1.849 (seconds) on server reply
2018-03-02 19:00:02,480 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>17</count>
            <total>17</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869198</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut 10:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>604</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869200</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 12:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>762</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869202</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Martin Interlude 0:20</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>20</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869205</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Keeper Of The Flame 8:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>510</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869206</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Martin 0:48</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>48</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869207</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;N&apos; Groove 11:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>663</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869210</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Martin 0:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>21</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869212</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>The Core 7:29</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>449</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869214</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 8:59</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>539</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869216</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Martin 2:10</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>130</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869218</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Smells Like Girls Drums 6:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>414</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869220</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Straight Jackets 8:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>501</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869222</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Martin 1:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>69</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869224</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 10:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>630</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869226</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 9:38</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>578</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869227</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 5:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>321</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-06-08:46159:869229</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 14:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-06-08:46159</albumId>
                  <duration>895</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/8/91 – Wetlands – New York City, NY</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:02,512 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:02,512 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21224 Browse test_combinatorial_test_browse_scroll_indices_312785896016087575827703158102460561049 (mediaCollection){
   id = "Shows:zero:1991:1991-03-30"
   itemType = "container"
   displayType = "list"
   title = "1991-03-30 – Starry Plough – Berkeley, CA [1]"
   summary = "1991-03-30"
   canPlay = True
 })
2018-03-02 19:00:02,513 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:02,513 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:02,513 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21224 Browse test_combinatorial_test_browse_scroll_indices_312785896016087575827703158102460561049
2018-03-02 19:00:02,513 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:02,513 [INFO] SONOS.sonos.workflow.result - End *test iteration* 86 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:02,513 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:02,513 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 87 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:02,514 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-03-30, 0, 10000, None)
2018-03-02 19:00:02,515 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-03-30</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:02,515 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:03,227 [DEBUG] SONOS.suds.client - waited 711 (ms) on server reply
2018-03-02 19:00:03,233 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>11</count>
            <total>11</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057296</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 14:40</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>880</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057297</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Riding With The King 7:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>454</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057298</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Wavy Gravy Song 5:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>309</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057299</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 10:52</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>652</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057300</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Like a Road 10:05</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>605</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057301</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 10:15</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>615</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057302</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Workin&apos; for the Master 18:58</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>1138</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057303</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Many Rivers to Cross 10:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>644</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057304</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 10:51</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>651</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057305</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home on the Range 9:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>584</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-03-30:100462:2057306</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Super Sonic Transport/Cut! 6:48</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-03-30:100462</albumId>
                  <duration>408</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>3/30/91 – Starry Plough – Berkeley, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:03,253 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:03,254 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21225 Browse test_combinatorial_test_browse_scroll_indices_40197353767863719351974096632704186285 (mediaCollection){
   id = "Shows:zero:1991:1991-01-23"
   itemType = "container"
   displayType = "list"
   title = "1991-01-23 – Johshas – Breckenridge Colorado [1]"
   summary = "1991-01-23"
   canPlay = True
 })
2018-03-02 19:00:03,254 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:03,254 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:03,254 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21225 Browse test_combinatorial_test_browse_scroll_indices_40197353767863719351974096632704186285
2018-03-02 19:00:03,254 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:03,255 [INFO] SONOS.sonos.workflow.result - End *test iteration* 87 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:03,255 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:03,255 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 88 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:03,255 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1991:1991-01-23, 0, 10000, None)
2018-03-02 19:00:03,256 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1991:1991-01-23</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:03,257 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:03,773 [DEBUG] SONOS.suds.client - waited 515 (ms) on server reply
2018-03-02 19:00:03,777 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>11</count>
            <total>11</total>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869165</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut 9:53</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>593</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869166</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 10:15</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>615</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869167</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home on the Range 13:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>784</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869168</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 14:21</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>861</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869169</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 10:17</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>617</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869170</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Many Rivers to Cross 9:57</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>597</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869171</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Berm 11:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>664</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869172</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 14:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>889</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869173</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Unknown Title 7:17</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>437</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869175</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 10:28</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>628</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1991:1991-01-23:46156:869177</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 11:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1991:1991-01-23:46156</albumId>
                  <duration>660</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>1/23/91 – Johshas – Breckenridge Colorado</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:03,798 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:03,798 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21226 Browse test_combinatorial_test_browse_scroll_indices_142946634826804382140352698304977509803 (mediaCollection){
   id = "Year:zero:1990"
   itemType = "container"
   displayType = "list"
   title = "1990"
   summary = "1990"
   canPlay = False
 })
2018-03-02 19:00:03,798 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:03,799 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:03,799 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21226 Browse test_combinatorial_test_browse_scroll_indices_142946634826804382140352698304977509803
2018-03-02 19:00:03,799 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:03,799 [INFO] SONOS.sonos.workflow.result - End *test iteration* 88 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:03,799 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:03,799 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 89 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:03,799 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1990, 0, 10000, None)
2018-03-02 19:00:03,801 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1990</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:03,801 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:04,138 [DEBUG] SONOS.suds.client - waited 337 (ms) on server reply
2018-03-02 19:00:04,141 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>6</count>
            <total>6</total>
            <mediaCollection>
               <id>Shows:zero:1990:1990-05-26</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-05-26 – Sweetwater Saloon – Mill Valley, CA [1]</title>
               <summary>1990-05-26</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-06-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-06-20 – 23 East Cabaret – Ardmore, PA [1] [SBD]</title>
               <summary>1990-06-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-06-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-06-21 – Acorn Club – Bethlehem, PA [1] [SBD]</title>
               <summary>1990-06-21</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-08-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-08-24 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1990-08-24</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-08-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-08-25 – River Festival at Midway Beach – Guerneville, CA [1] [SBD]</title>
               <summary>1990-08-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1990:1990-09-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990-09-15 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1990-09-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:04,151 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,151 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21227 Browse test_combinatorial_test_browse_scroll_indices_46383526060463135837045057738093429016 (mediaCollection){
   id = "Shows:zero:1990:1990-05-26"
   itemType = "container"
   displayType = "list"
   title = "1990-05-26 – Sweetwater Saloon – Mill Valley, CA [1]"
   summary = "1990-05-26"
   canPlay = True
 })
2018-03-02 19:00:04,152 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:04,152 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:04,152 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21227 Browse test_combinatorial_test_browse_scroll_indices_46383526060463135837045057738093429016
2018-03-02 19:00:04,152 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,152 [INFO] SONOS.sonos.workflow.result - End *test iteration* 89 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:04,152 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:04,152 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 90 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:04,153 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,153 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21228 Browse test_combinatorial_test_browse_scroll_indices_110921618229520672514403477612873599562 (mediaCollection){
   id = "Shows:zero:1990:1990-06-20"
   itemType = "container"
   displayType = "list"
   title = "1990-06-20 – 23 East Cabaret – Ardmore, PA [1] [SBD]"
   summary = "1990-06-20"
   canPlay = True
 })
2018-03-02 19:00:04,153 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:04,153 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:04,153 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21228 Browse test_combinatorial_test_browse_scroll_indices_110921618229520672514403477612873599562
2018-03-02 19:00:04,153 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,154 [INFO] SONOS.sonos.workflow.result - End *test iteration* 90 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:04,154 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:04,154 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 91 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:04,154 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,154 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21229 Browse test_combinatorial_test_browse_scroll_indices_66310439840376679898936471750307265734 (mediaCollection){
   id = "Shows:zero:1990:1990-06-21"
   itemType = "container"
   displayType = "list"
   title = "1990-06-21 – Acorn Club – Bethlehem, PA [1] [SBD]"
   summary = "1990-06-21"
   canPlay = True
 })
2018-03-02 19:00:04,154 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:04,155 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:04,155 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21229 Browse test_combinatorial_test_browse_scroll_indices_66310439840376679898936471750307265734
2018-03-02 19:00:04,155 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,155 [INFO] SONOS.sonos.workflow.result - End *test iteration* 91 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:04,155 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:04,155 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 92 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:04,155 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,156 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21230 Browse test_combinatorial_test_browse_scroll_indices_108111528840798647531213262181016184623 (mediaCollection){
   id = "Shows:zero:1990:1990-08-24"
   itemType = "container"
   displayType = "list"
   title = "1990-08-24 – Last Day Saloon – San Francisco, CA [1]"
   summary = "1990-08-24"
   canPlay = True
 })
2018-03-02 19:00:04,156 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:04,156 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:04,156 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21230 Browse test_combinatorial_test_browse_scroll_indices_108111528840798647531213262181016184623
2018-03-02 19:00:04,156 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,156 [INFO] SONOS.sonos.workflow.result - End *test iteration* 92 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:04,157 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:04,157 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 93 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:04,157 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,157 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21231 Browse test_combinatorial_test_browse_scroll_indices_9076098765462074510124463892620643545 (mediaCollection){
   id = "Shows:zero:1990:1990-08-25"
   itemType = "container"
   displayType = "list"
   title = "1990-08-25 – River Festival at Midway Beach – Guerneville, CA [1] [SBD]"
   summary = "1990-08-25"
   canPlay = True
 })
2018-03-02 19:00:04,157 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:04,157 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:04,158 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21231 Browse test_combinatorial_test_browse_scroll_indices_9076098765462074510124463892620643545
2018-03-02 19:00:04,158 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,158 [INFO] SONOS.sonos.workflow.result - End *test iteration* 93 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:04,158 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:04,158 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 94 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:04,158 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,159 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21232 Browse test_combinatorial_test_browse_scroll_indices_13252188673062552297333123153640516999 (mediaCollection){
   id = "Shows:zero:1990:1990-09-15"
   itemType = "container"
   displayType = "list"
   title = "1990-09-15 – Last Day Saloon – San Francisco, CA [1]"
   summary = "1990-09-15"
   canPlay = True
 })
2018-03-02 19:00:04,159 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:04,159 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:04,159 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21232 Browse test_combinatorial_test_browse_scroll_indices_13252188673062552297333123153640516999
2018-03-02 19:00:04,159 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,159 [INFO] SONOS.sonos.workflow.result - End *test iteration* 94 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:04,160 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:04,160 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 95 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:04,160 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,160 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21233 Browse test_combinatorial_test_browse_scroll_indices_13252188673062552297333123153640516999 (mediaCollection){
   id = "Shows:zero:1990:1990-09-15"
   itemType = "container"
   displayType = "list"
   title = "1990-09-15 – Last Day Saloon – San Francisco, CA [1]"
   summary = "1990-09-15"
   canPlay = True
 })
2018-03-02 19:00:04,160 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:04,160 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:04,160 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21233 Browse test_combinatorial_test_browse_scroll_indices_13252188673062552297333123153640516999
2018-03-02 19:00:04,161 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,161 [INFO] SONOS.sonos.workflow.result - End *test iteration* 95 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:04,161 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:04,161 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 96 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:04,161 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1990:1990-09-15, 0, 10000, None)
2018-03-02 19:00:04,163 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1990:1990-09-15</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:04,163 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:04,667 [DEBUG] SONOS.suds.client - waited 503 (ms) on server reply
2018-03-02 19:00:04,671 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>11</count>
            <total>11</total>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868628</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut 18:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>1135</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868629</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 15:08</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>908</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868630</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Riding With The King 9:33</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>573</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868631</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 10:47</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>647</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868632</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 11:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>686</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868633</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 13:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>835</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868634</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 13:38</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>818</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868635</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Severe Tire Damage 12:47</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>767</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868636</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 15:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>949</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868637</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 8:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>535</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-09-15:46124:868638</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>E: Golden Road 9:55</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-09-15:46124</albumId>
                  <duration>595</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>9/15/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:04,696 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,696 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21234 Browse test_combinatorial_test_browse_scroll_indices_9076098765462074510124463892620643545 (mediaCollection){
   id = "Shows:zero:1990:1990-08-25"
   itemType = "container"
   displayType = "list"
   title = "1990-08-25 – River Festival at Midway Beach – Guerneville, CA [1] [SBD]"
   summary = "1990-08-25"
   canPlay = True
 })
2018-03-02 19:00:04,696 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:04,697 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:04,697 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21234 Browse test_combinatorial_test_browse_scroll_indices_9076098765462074510124463892620643545
2018-03-02 19:00:04,697 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:04,697 [INFO] SONOS.sonos.workflow.result - End *test iteration* 96 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:04,697 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:04,697 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 97 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:04,697 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1990:1990-08-25, 0, 10000, None)
2018-03-02 19:00:04,700 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1990:1990-08-25</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:04,700 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:06,055 [DEBUG] SONOS.suds.client - waited 1.354 (seconds) on server reply
2018-03-02 19:00:06,059 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-25:46138:868839</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut 6:41</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-25:46138</albumId>
                  <duration>401</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/25/90 – River Festival at Midway Beach – Guerneville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-25:46138:868840</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 12:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-25:46138</albumId>
                  <duration>723</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/25/90 – River Festival at Midway Beach – Guerneville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-25:46138:868841</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Super Sonic Transport 7:39</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-25:46138</albumId>
                  <duration>459</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/25/90 – River Festival at Midway Beach – Guerneville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-25:46138:868843</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 10:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-25:46138</albumId>
                  <duration>644</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/25/90 – River Festival at Midway Beach – Guerneville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-25:46138:868846</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>The Core 8:43</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-25:46138</albumId>
                  <duration>523</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/25/90 – River Festival at Midway Beach – Guerneville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-25:46138:868849</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 7:50</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-25:46138</albumId>
                  <duration>470</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/25/90 – River Festival at Midway Beach – Guerneville, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-25:46138:868851</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 8:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-25:46138</albumId>
                  <duration>496</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/25/90 – River Festival at Midway Beach – Guerneville, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:06,076 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:06,077 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21235 Browse test_combinatorial_test_browse_scroll_indices_108111528840798647531213262181016184623 (mediaCollection){
   id = "Shows:zero:1990:1990-08-24"
   itemType = "container"
   displayType = "list"
   title = "1990-08-24 – Last Day Saloon – San Francisco, CA [1]"
   summary = "1990-08-24"
   canPlay = True
 })
2018-03-02 19:00:06,077 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:06,077 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:06,077 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21235 Browse test_combinatorial_test_browse_scroll_indices_108111528840798647531213262181016184623
2018-03-02 19:00:06,077 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:06,078 [INFO] SONOS.sonos.workflow.result - End *test iteration* 97 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:06,078 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:06,078 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 98 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:06,078 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1990:1990-08-24, 0, 10000, None)
2018-03-02 19:00:06,079 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1990:1990-08-24</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:06,080 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:07,559 [DEBUG] SONOS.suds.client - waited 1.479 (seconds) on server reply
2018-03-02 19:00:07,563 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>12</count>
            <total>12</total>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868758</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut 13:41</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>821</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868759</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 12:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>752</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868761</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 12:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>746</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868765</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Super Sonic Transport 10:56</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>656</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868769</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove 10:59</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>659</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868773</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 11:53</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>713</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868777</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Mattresses 12:02</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>722</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868781</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Youngbloods Intrumental 9:14</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>554</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868784</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 5:24</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>324</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868786</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 10:41</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>641</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868788</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>The Core 9:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>575</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-08-24:46132:868791</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 11:53</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-08-24:46132</albumId>
                  <duration>713</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>8/24/90 – Last Day Saloon – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:07,587 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:07,587 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21236 Browse test_combinatorial_test_browse_scroll_indices_66310439840376679898936471750307265734 (mediaCollection){
   id = "Shows:zero:1990:1990-06-21"
   itemType = "container"
   displayType = "list"
   title = "1990-06-21 – Acorn Club – Bethlehem, PA [1] [SBD]"
   summary = "1990-06-21"
   canPlay = True
 })
2018-03-02 19:00:07,588 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:07,588 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:07,588 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21236 Browse test_combinatorial_test_browse_scroll_indices_66310439840376679898936471750307265734
2018-03-02 19:00:07,588 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:07,588 [INFO] SONOS.sonos.workflow.result - End *test iteration* 98 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:07,588 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:07,588 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 99 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:07,589 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1990:1990-06-21, 0, 10000, None)
2018-03-02 19:00:07,590 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1990:1990-06-21</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:07,590 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:08,890 [DEBUG] SONOS.suds.client - waited 1.299 (seconds) on server reply
2018-03-02 19:00:08,892 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>7</count>
            <total>7</total>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-21:46130:868738</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cissy Strut &gt; 12:08</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-21:46130</albumId>
                  <duration>728</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/21/90 – Acorn Club – Bethlehem, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-21:46130:868739</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tongue &apos;n&apos; Groove &gt; 11:09</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-21:46130</albumId>
                  <duration>669</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/21/90 – Acorn Club – Bethlehem, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-21:46130:868740</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Rigor Mortis 11:10</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-21:46130</albumId>
                  <duration>670</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/21/90 – Acorn Club – Bethlehem, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-21:46130:868741</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Supersonic Transport 7:57</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-21:46130</albumId>
                  <duration>477</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/21/90 – Acorn Club – Bethlehem, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-21:46130:868742</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Theme From Nancy Germany 10:38</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-21:46130</albumId>
                  <duration>638</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/21/90 – Acorn Club – Bethlehem, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-21:46130:868743</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Many Rivers To Cross 11:45</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-21:46130</albumId>
                  <duration>705</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/21/90 – Acorn Club – Bethlehem, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-21:46130:868744</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tear Tags Off Matresses 13:12</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-21:46130</albumId>
                  <duration>792</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/21/90 – Acorn Club – Bethlehem, PA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:08,910 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:08,911 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21237 Browse test_combinatorial_test_browse_scroll_indices_110921618229520672514403477612873599562 (mediaCollection){
   id = "Shows:zero:1990:1990-06-20"
   itemType = "container"
   displayType = "list"
   title = "1990-06-20 – 23 East Cabaret – Ardmore, PA [1] [SBD]"
   summary = "1990-06-20"
   canPlay = True
 })
2018-03-02 19:00:08,911 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:08,911 [SKIP] SONOS.sonos.workflow.fixture.Browse - The returned container must support scrolling for this test to run. (expression is False)
2018-03-02 19:00:08,911 [SKIP] SONOS.sonos.workflow.fixture.Browse - 21237 Browse test_combinatorial_test_browse_scroll_indices_110921618229520672514403477612873599562
2018-03-02 19:00:08,911 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:08,912 [INFO] SONOS.sonos.workflow.result - End *test iteration* 99 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:08,912 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:08,912 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 100 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:08,912 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1990:1990-06-20, 0, 10000, None)
2018-03-02 19:00:08,913 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1990:1990-06-20</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:08,914 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:09,767 [DEBUG] SONOS.suds.client - waited 852 (ms) on server reply
2018-03-02 19:00:09,774 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>11</count>
            <total>11</total>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868674</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d1t01.shn 0:36</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>36</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868675</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d1t02.shn 10:06</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>606</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868676</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d1t03.shn 13:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>784</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868677</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d1t04.shn 9:28</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>568</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868678</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d1t05.shn 11:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>714</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868679</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d1t06.shn 0:16</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>16</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868680</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d1t07.shn 15:26</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>926</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868681</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d1t08.shn 10:33</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>633</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868682</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d2t01.shn 10:14</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>614</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868683</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d2t02.shn 9:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>543</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1990:1990-06-20:46127:868684</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1990-06-20d2t03.shn 10:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1990:1990-06-20:46127</albumId>
                  <duration>654</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>6/20/90 – 23 East Cabaret – Ardmore, PA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:09,799 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:09,799 [INFO] SONOS.sonos.workflow.result - End *test iteration* 100 of test case test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:09,800 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_test_browse_scroll_indices at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:09,800 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:09,800 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:09,800 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:09,800 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:09,800 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 19:00:09,802 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:09,802 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:11,086 [DEBUG] SONOS.suds.client - waited 1.283 (seconds) on server reply
2018-03-02 19:00:11,109 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:11,282 [PASS] SONOS.sonos.workflow.fixture.Browse - getMetdata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 1.283 (seconds)
 } is not None)
2018-03-02 19:00:11,282 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Artist:zero, 0, 10000, None)
2018-03-02 19:00:11,283 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Artist:zero</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:11,283 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:12,096 [DEBUG] SONOS.suds.client - waited 812 (ms) on server reply
2018-03-02 19:00:12,102 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>26</count>
            <total>26</total>
            <mediaCollection>
               <id>Year:zero:1984</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1984</title>
               <summary>1984</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1985</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1985</title>
               <summary>1985</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1986</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1986</title>
               <summary>1986</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1987</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1987</title>
               <summary>1987</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1988</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1988</title>
               <summary>1988</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1989</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1989</title>
               <summary>1989</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1990</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1990</title>
               <summary>1990</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1991</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1991</title>
               <summary>1991</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1992</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1992</title>
               <summary>1992</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1993</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993</title>
               <summary>1993</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1994</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1994</title>
               <summary>1994</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1995</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1995</title>
               <summary>1995</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1996</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1996</title>
               <summary>1996</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1997</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1997</title>
               <summary>1997</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1998</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1998</title>
               <summary>1998</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:1999</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1999</title>
               <summary>1999</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2000</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2000</title>
               <summary>2000</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2004</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2004</title>
               <summary>2004</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2005</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2005</title>
               <summary>2005</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2006</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2006</title>
               <summary>2006</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2007</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2007</title>
               <summary>2007</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2008</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2008</title>
               <summary>2008</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2011</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2011</title>
               <summary>2011</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2012</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2012</title>
               <summary>2012</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2013</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2013</title>
               <summary>2013</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Year:zero:2016</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>2016</title>
               <summary>2016</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:12,148 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Year:zero:1993, 0, 10000, None)
2018-03-02 19:00:12,149 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Year:zero:1993</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:12,150 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:12,589 [DEBUG] SONOS.suds.client - waited 439 (ms) on server reply
2018-03-02 19:00:12,597 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>39</count>
            <total>39</total>
            <mediaCollection>
               <id>Shows:zero:1993:1993-02-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-02-06 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1993-02-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-02-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-02-12 – Humpty&apos;s – Tahoe City, CA [1]</title>
               <summary>1993-02-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-02-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-02-13 – The Wherehouse – Stateline, NV [1] [SBD]</title>
               <summary>1993-02-13</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-02-20</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-02-20 – Parkway Theatre – Oakland CA [1]</title>
               <summary>1993-02-20</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-03-05</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-03-05 – EMU Ballroom – University of Oregon, OR [1] [SBD]</title>
               <summary>1993-03-05</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-03-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-03-06 – Fenix Underground – Seattle, WA [1]</title>
               <summary>1993-03-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-03-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-03-13 – Watsonville Vet Center – Watsonville, CA [1]</title>
               <summary>1993-03-13</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-03-19</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-03-19 – Sweetwater Saloon – Mill Valley, CA [1]</title>
               <summary>1993-03-19</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-04-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-04-02 – Great American Music Hall – San Francisco, CA [1] [SBD]</title>
               <summary>1993-04-02</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-04-22</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-04-22 – Fox Theatre – Boulder, CO [1]</title>
               <summary>1993-04-22</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-04-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-04-23 – The Fox Theater – Boulder, CO [3] [SBD]</title>
               <summary>1993-04-23</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-04-24</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-04-24 – Tangueray&apos;s – Fort Collins, CO [2]</title>
               <summary>1993-04-24</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-05-07</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-05-07 – Last Day Saloon – San Francisco, CA [1]</title>
               <summary>1993-05-07</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-05-14</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-05-14 – Aladdin Theatre – Las Vegas, NV [1]</title>
               <summary>1993-05-14</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-05-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-05-15 – Aladdin Theatre – Las Vegas, NV [1]</title>
               <summary>1993-05-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-06-19</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-06-19 – Woodacre Improvement Club –  Woodacre, CA [1] [SBD]</title>
               <summary>1993-06-19</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-07-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-07-03 – High Sierra Music Festival – Leland Meadows, CA [1]</title>
               <summary>1993-07-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-07-13</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-07-13 – WOW Hall – Eugene OR [2]</title>
               <summary>1993-07-13</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-07-16</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-07-16 – Sweetwater Saloon – Mill Valley, CA [1] [SBD]</title>
               <summary>1993-07-16</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-08-08</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-08-08 – Northboro Fish And Game – Northboro, MA [1]</title>
               <summary>1993-08-08</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-08-11</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-08-11 – Wetlands Preserve – New York, NY [1] [SBD]</title>
               <summary>1993-08-11</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-08-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-08-12 – Middle East – Cambridge, MA [1]</title>
               <summary>1993-08-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-08-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-08-21 – Hilton Ballroom – Eugene, OR [2]</title>
               <summary>1993-08-21</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-09-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-09-03 – Great American Music Hall – San Francisco, CA [1]</title>
               <summary>1993-09-03</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-09-15</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-09-15 – Center for the Arts – Crested Butte, CO [1]</title>
               <summary>1993-09-15</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-09-23</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-09-23 – The Rock – Tucson, AZ [1]</title>
               <summary>1993-09-23</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-09-25</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-09-25 – Monsoon&apos;s – Flagstaff, AZ [1] [SBD]</title>
               <summary>1993-09-25</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-10-02</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-10-02 – Great American Music Hall – San Francisco, CA [1] [SBD]</title>
               <summary>1993-10-02</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-10-21</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-10-21 – Kimball&apos;s Carnival – Emeryville, CA [1]</title>
               <summary>1993-10-21</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-10-29</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-10-29 – The Catalyst – Santa Cruz, CA [1]</title>
               <summary>1993-10-29</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-11-06</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-11-06 – New Georges – San Francisco, CA [1]</title>
               <summary>1993-11-06</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-11-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-11-12 – New George&apos;s – San Rafael, CA [1]</title>
               <summary>1993-11-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-11-19</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-11-19 – 3rd Street Bar – Santa Rosa, CA [1]</title>
               <summary>1993-11-19</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-03</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-03 – WOW Hall – Eugene OR [2]</title>
               <summary>1993-12-03</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-04</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-04 – Ballard Firehouse – Seattle, WA [1] [SBD]</title>
               <summary>1993-12-04</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-11</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-11 – Blue Star Café – Hartford, Connecticut [2] [SBD]</title>
               <summary>1993-12-11</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-12</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-12 – The Blue Star Cafe – Hartford, CT [1] [SBD]</title>
               <summary>1993-12-12</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-30</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-30 – Mystic Theater – Petaluma, CA [1]</title>
               <summary>1993-12-30</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Shows:zero:1993:1993-12-31</id>
               <itemType>container</itemType>
               <displayType>list</displayType>
               <title>1993-12-31 – Mystic Theatre – Petaluma, CA [1]</title>
               <summary>1993-12-31</summary>
               <canPlay>true</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:12,658 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-04-22, 0, 10000, None)
2018-03-02 19:00:12,660 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-04-22</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:12,660 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:13,136 [DEBUG] SONOS.suds.client - waited 475 (ms) on server reply
2018-03-02 19:00:13,144 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>15</count>
            <total>15</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870731</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tuning 1:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>95</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870732</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law 12:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>769</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870733</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tangled Hangers 15:08</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>908</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870734</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 Revisited 9:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>574</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870735</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home on the Range 16:13</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>973</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870736</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Spoken For 10:34</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>634</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870737</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 7:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>462</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870738</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Tuning 2:30</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>150</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870739</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End of the World Blues 13:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>812</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870740</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Chance in a Million 9:17</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>557</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870741</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Golden Road 15:00</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>900</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870742</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina 14:47</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>887</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870743</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Drums 2:35</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>155</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870744</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 14:38</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>878</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-22:46247:870745</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 8:42</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-22:46247</albumId>
                  <duration>522</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/22/93 – Fox Theatre – Boulder, CO</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:13,177 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:13,177 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21239 Browse test_combinatorial_test_browse_to_leaf_8188544039905786003942344918873500143 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870731"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Tuning 1:35"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 95
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:13,177 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:13,178 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870731,)
2018-03-02 19:00:13,179 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870731</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:13,179 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:13,611 [DEBUG] SONOS.suds.client - waited 431 (ms) on server reply
2018-03-02 19:00:13,612 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870731</id>
            <itemType>track</itemType>
            <title>Tuning</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>95</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:13,618 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870731"
   itemType = "track"
   title = "Tuning"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 95
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 431 (ms)
 } is not None)
2018-03-02 19:00:13,618 [PASS] SONOS.sonos.workflow.fixture.Browse - 21239 Browse test_combinatorial_test_browse_to_leaf_8188544039905786003942344918873500143
2018-03-02 19:00:13,618 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:13,618 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:13,619 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:13,619 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:13,619 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:13,619 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21240 Browse test_combinatorial_test_browse_to_leaf_113373951022049354288007136024107105166 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870732"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Cole's Law 12:49"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 769
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:13,620 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:13,621 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870732,)
2018-03-02 19:00:13,623 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870732</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:13,623 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:13,916 [DEBUG] SONOS.suds.client - waited 292 (ms) on server reply
2018-03-02 19:00:13,917 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870732</id>
            <itemType>track</itemType>
            <title>Cole&apos;s Law</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>769</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:13,922 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870732"
   itemType = "track"
   title = "Cole's Law"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 769
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 292 (ms)
 } is not None)
2018-03-02 19:00:13,922 [PASS] SONOS.sonos.workflow.fixture.Browse - 21240 Browse test_combinatorial_test_browse_to_leaf_113373951022049354288007136024107105166
2018-03-02 19:00:13,922 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:13,922 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:13,922 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:13,923 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:13,923 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:13,923 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21241 Browse test_combinatorial_test_browse_to_leaf_277877675983786716385047489875091328556 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870733"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Tangled Hangers 15:08"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 908
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:13,923 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:13,923 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870733,)
2018-03-02 19:00:13,924 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870733</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:13,925 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:14,276 [DEBUG] SONOS.suds.client - waited 351 (ms) on server reply
2018-03-02 19:00:14,278 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870733</id>
            <itemType>track</itemType>
            <title>Tangled Hangers</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>908</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:14,281 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870733"
   itemType = "track"
   title = "Tangled Hangers"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 908
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 351 (ms)
 } is not None)
2018-03-02 19:00:14,282 [PASS] SONOS.sonos.workflow.fixture.Browse - 21241 Browse test_combinatorial_test_browse_to_leaf_277877675983786716385047489875091328556
2018-03-02 19:00:14,282 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:14,282 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:14,282 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:14,282 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:14,282 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:14,283 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21242 Browse test_combinatorial_test_browse_to_leaf_50621750815785493248021581066962848477 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870734"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Highway 61 Revisited 9:34"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 574
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:14,283 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:14,283 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870734,)
2018-03-02 19:00:14,285 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870734</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:14,285 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:14,744 [DEBUG] SONOS.suds.client - waited 459 (ms) on server reply
2018-03-02 19:00:14,746 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870734</id>
            <itemType>track</itemType>
            <title>Highway 61 Revisited</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>574</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:14,749 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870734"
   itemType = "track"
   title = "Highway 61 Revisited"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 574
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 459 (ms)
 } is not None)
2018-03-02 19:00:14,749 [PASS] SONOS.sonos.workflow.fixture.Browse - 21242 Browse test_combinatorial_test_browse_to_leaf_50621750815785493248021581066962848477
2018-03-02 19:00:14,749 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:14,749 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:14,750 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:14,750 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:14,750 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:14,750 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21243 Browse test_combinatorial_test_browse_to_leaf_161405165760992760967989917473698099942 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870735"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Home on the Range 16:13"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 973
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:14,751 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:14,751 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870735,)
2018-03-02 19:00:14,752 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870735</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:14,753 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:15,219 [DEBUG] SONOS.suds.client - waited 466 (ms) on server reply
2018-03-02 19:00:15,220 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870735</id>
            <itemType>track</itemType>
            <title>Home on the Range</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>973</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:15,224 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870735"
   itemType = "track"
   title = "Home on the Range"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 973
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 466 (ms)
 } is not None)
2018-03-02 19:00:15,224 [PASS] SONOS.sonos.workflow.fixture.Browse - 21243 Browse test_combinatorial_test_browse_to_leaf_161405165760992760967989917473698099942
2018-03-02 19:00:15,224 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:15,224 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:15,225 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:15,225 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:15,225 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:15,225 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21244 Browse test_combinatorial_test_browse_to_leaf_319001708793088166440385986483077042974 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870736"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Spoken For 10:34"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 634
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:15,226 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:15,226 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870736,)
2018-03-02 19:00:15,227 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870736</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:15,227 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:16,659 [DEBUG] SONOS.suds.client - waited 1.431 (seconds) on server reply
2018-03-02 19:00:16,660 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870736</id>
            <itemType>track</itemType>
            <title>Spoken For</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>634</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:16,664 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870736"
   itemType = "track"
   title = "Spoken For"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 634
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 1.431 (seconds)
 } is not None)
2018-03-02 19:00:16,664 [PASS] SONOS.sonos.workflow.fixture.Browse - 21244 Browse test_combinatorial_test_browse_to_leaf_319001708793088166440385986483077042974
2018-03-02 19:00:16,664 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:16,665 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:16,665 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:16,665 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:16,665 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:16,665 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21245 Browse test_combinatorial_test_browse_to_leaf_244299147077388650342265821878055840429 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870737"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Mercury Blues 7:42"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 462
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:16,666 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:16,666 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870737,)
2018-03-02 19:00:16,667 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870737</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:16,667 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:17,159 [DEBUG] SONOS.suds.client - waited 492 (ms) on server reply
2018-03-02 19:00:17,161 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870737</id>
            <itemType>track</itemType>
            <title>Mercury Blues</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>462</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:17,164 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870737"
   itemType = "track"
   title = "Mercury Blues"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 462
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 492 (ms)
 } is not None)
2018-03-02 19:00:17,164 [PASS] SONOS.sonos.workflow.fixture.Browse - 21245 Browse test_combinatorial_test_browse_to_leaf_244299147077388650342265821878055840429
2018-03-02 19:00:17,164 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:17,165 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:17,165 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:17,165 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:17,165 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:17,165 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21246 Browse test_combinatorial_test_browse_to_leaf_300303099432570474475162526920861456643 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870738"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Tuning 2:30"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 150
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:17,166 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:17,166 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870738,)
2018-03-02 19:00:17,167 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870738</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:17,167 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:17,542 [DEBUG] SONOS.suds.client - waited 374 (ms) on server reply
2018-03-02 19:00:17,544 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870738</id>
            <itemType>track</itemType>
            <title>Tuning</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>150</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:17,547 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870738"
   itemType = "track"
   title = "Tuning"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 150
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 374 (ms)
 } is not None)
2018-03-02 19:00:17,547 [PASS] SONOS.sonos.workflow.fixture.Browse - 21246 Browse test_combinatorial_test_browse_to_leaf_300303099432570474475162526920861456643
2018-03-02 19:00:17,548 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:17,548 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:17,548 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:17,548 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:17,548 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:17,549 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21247 Browse test_combinatorial_test_browse_to_leaf_215416087365323989192550951333578862051 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870739"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "End of the World Blues 13:32"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 812
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:17,549 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:17,549 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870739,)
2018-03-02 19:00:17,550 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870739</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:17,551 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:17,956 [DEBUG] SONOS.suds.client - waited 405 (ms) on server reply
2018-03-02 19:00:17,959 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870739</id>
            <itemType>track</itemType>
            <title>End of the World Blues</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>812</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:17,963 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870739"
   itemType = "track"
   title = "End of the World Blues"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 812
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 405 (ms)
 } is not None)
2018-03-02 19:00:17,964 [PASS] SONOS.sonos.workflow.fixture.Browse - 21247 Browse test_combinatorial_test_browse_to_leaf_215416087365323989192550951333578862051
2018-03-02 19:00:17,964 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:17,964 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:17,964 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:17,964 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:17,965 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:17,965 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21248 Browse test_combinatorial_test_browse_to_leaf_67639509700079436920242196264273114887 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870740"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Chance in a Million 9:17"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 557
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:17,965 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:17,965 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870740,)
2018-03-02 19:00:17,967 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870740</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:17,967 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:18,265 [DEBUG] SONOS.suds.client - waited 297 (ms) on server reply
2018-03-02 19:00:18,266 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870740</id>
            <itemType>track</itemType>
            <title>Chance in a Million</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>557</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:18,269 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870740"
   itemType = "track"
   title = "Chance in a Million"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 557
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 297 (ms)
 } is not None)
2018-03-02 19:00:18,269 [PASS] SONOS.sonos.workflow.fixture.Browse - 21248 Browse test_combinatorial_test_browse_to_leaf_67639509700079436920242196264273114887
2018-03-02 19:00:18,270 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:18,270 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:18,270 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:18,270 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:18,270 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:18,271 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21249 Browse test_combinatorial_test_browse_to_leaf_67639509700079436920242196264273114887 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870740"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Chance in a Million 9:17"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 557
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:18,271 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:18,271 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870740,)
2018-03-02 19:00:18,272 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870740</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:18,273 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:18,690 [DEBUG] SONOS.suds.client - waited 416 (ms) on server reply
2018-03-02 19:00:18,692 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870740</id>
            <itemType>track</itemType>
            <title>Chance in a Million</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>557</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:18,696 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870740"
   itemType = "track"
   title = "Chance in a Million"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 557
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 416 (ms)
 } is not None)
2018-03-02 19:00:18,696 [PASS] SONOS.sonos.workflow.fixture.Browse - 21249 Browse test_combinatorial_test_browse_to_leaf_67639509700079436920242196264273114887
2018-03-02 19:00:18,697 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:18,697 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:18,697 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:18,697 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 11 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:18,698 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:18,698 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21250 Browse test_combinatorial_test_browse_to_leaf_215416087365323989192550951333578862051 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870739"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "End of the World Blues 13:32"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 812
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:18,698 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:18,699 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870739,)
2018-03-02 19:00:18,700 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870739</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:18,700 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:19,061 [DEBUG] SONOS.suds.client - waited 361 (ms) on server reply
2018-03-02 19:00:19,062 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870739</id>
            <itemType>track</itemType>
            <title>End of the World Blues</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>812</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:19,066 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870739"
   itemType = "track"
   title = "End of the World Blues"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 812
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 361 (ms)
 } is not None)
2018-03-02 19:00:19,066 [PASS] SONOS.sonos.workflow.fixture.Browse - 21250 Browse test_combinatorial_test_browse_to_leaf_215416087365323989192550951333578862051
2018-03-02 19:00:19,067 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:19,067 [INFO] SONOS.sonos.workflow.result - End *test iteration* 11 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:19,067 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:19,067 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 12 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:19,067 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:19,068 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21251 Browse test_combinatorial_test_browse_to_leaf_300303099432570474475162526920861456643 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870738"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Tuning 2:30"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 150
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:19,068 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:19,068 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870738,)
2018-03-02 19:00:19,069 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870738</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:19,070 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:19,421 [DEBUG] SONOS.suds.client - waited 351 (ms) on server reply
2018-03-02 19:00:19,422 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870738</id>
            <itemType>track</itemType>
            <title>Tuning</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>150</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:19,426 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870738"
   itemType = "track"
   title = "Tuning"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 150
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 351 (ms)
 } is not None)
2018-03-02 19:00:19,426 [PASS] SONOS.sonos.workflow.fixture.Browse - 21251 Browse test_combinatorial_test_browse_to_leaf_300303099432570474475162526920861456643
2018-03-02 19:00:19,426 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:19,426 [INFO] SONOS.sonos.workflow.result - End *test iteration* 12 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:19,427 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:19,427 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 13 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:19,427 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:19,427 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21252 Browse test_combinatorial_test_browse_to_leaf_244299147077388650342265821878055840429 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870737"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Mercury Blues 7:42"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 462
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:19,427 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:19,428 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870737,)
2018-03-02 19:00:19,429 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870737</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:19,429 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:19,818 [DEBUG] SONOS.suds.client - waited 388 (ms) on server reply
2018-03-02 19:00:19,819 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870737</id>
            <itemType>track</itemType>
            <title>Mercury Blues</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>462</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:19,824 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870737"
   itemType = "track"
   title = "Mercury Blues"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 462
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 388 (ms)
 } is not None)
2018-03-02 19:00:19,824 [PASS] SONOS.sonos.workflow.fixture.Browse - 21252 Browse test_combinatorial_test_browse_to_leaf_244299147077388650342265821878055840429
2018-03-02 19:00:19,825 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:19,825 [INFO] SONOS.sonos.workflow.result - End *test iteration* 13 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:19,825 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:19,825 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 14 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:19,826 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:19,826 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21253 Browse test_combinatorial_test_browse_to_leaf_319001708793088166440385986483077042974 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870736"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Spoken For 10:34"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 634
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:19,826 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:19,826 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870736,)
2018-03-02 19:00:19,828 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870736</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:19,829 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:20,241 [DEBUG] SONOS.suds.client - waited 411 (ms) on server reply
2018-03-02 19:00:20,244 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870736</id>
            <itemType>track</itemType>
            <title>Spoken For</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>634</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:20,247 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870736"
   itemType = "track"
   title = "Spoken For"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 634
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 411 (ms)
 } is not None)
2018-03-02 19:00:20,247 [PASS] SONOS.sonos.workflow.fixture.Browse - 21253 Browse test_combinatorial_test_browse_to_leaf_319001708793088166440385986483077042974
2018-03-02 19:00:20,247 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:20,247 [INFO] SONOS.sonos.workflow.result - End *test iteration* 14 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:20,248 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:20,248 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 15 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:20,248 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:20,248 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21254 Browse test_combinatorial_test_browse_to_leaf_161405165760992760967989917473698099942 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870735"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Home on the Range 16:13"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 973
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:20,249 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:20,249 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870735,)
2018-03-02 19:00:20,250 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870735</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:20,250 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:20,642 [DEBUG] SONOS.suds.client - waited 392 (ms) on server reply
2018-03-02 19:00:20,644 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870735</id>
            <itemType>track</itemType>
            <title>Home on the Range</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>973</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:20,647 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870735"
   itemType = "track"
   title = "Home on the Range"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 973
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 392 (ms)
 } is not None)
2018-03-02 19:00:20,647 [PASS] SONOS.sonos.workflow.fixture.Browse - 21254 Browse test_combinatorial_test_browse_to_leaf_161405165760992760967989917473698099942
2018-03-02 19:00:20,648 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:20,648 [INFO] SONOS.sonos.workflow.result - End *test iteration* 15 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:20,648 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:20,648 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 16 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:20,648 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:20,649 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21255 Browse test_combinatorial_test_browse_to_leaf_50621750815785493248021581066962848477 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870734"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Highway 61 Revisited 9:34"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 574
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:20,649 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:20,649 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870734,)
2018-03-02 19:00:20,650 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870734</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:20,651 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:21,035 [DEBUG] SONOS.suds.client - waited 384 (ms) on server reply
2018-03-02 19:00:21,036 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870734</id>
            <itemType>track</itemType>
            <title>Highway 61 Revisited</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>574</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:21,039 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870734"
   itemType = "track"
   title = "Highway 61 Revisited"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 574
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 384 (ms)
 } is not None)
2018-03-02 19:00:21,039 [PASS] SONOS.sonos.workflow.fixture.Browse - 21255 Browse test_combinatorial_test_browse_to_leaf_50621750815785493248021581066962848477
2018-03-02 19:00:21,039 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:21,040 [INFO] SONOS.sonos.workflow.result - End *test iteration* 16 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:21,040 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:21,040 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 17 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:21,040 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:21,040 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21256 Browse test_combinatorial_test_browse_to_leaf_277877675983786716385047489875091328556 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870733"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Tangled Hangers 15:08"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 908
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:21,041 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:21,041 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870733,)
2018-03-02 19:00:21,042 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870733</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:21,042 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:21,455 [DEBUG] SONOS.suds.client - waited 412 (ms) on server reply
2018-03-02 19:00:21,456 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870733</id>
            <itemType>track</itemType>
            <title>Tangled Hangers</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>908</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:21,461 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870733"
   itemType = "track"
   title = "Tangled Hangers"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 908
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 412 (ms)
 } is not None)
2018-03-02 19:00:21,461 [PASS] SONOS.sonos.workflow.fixture.Browse - 21256 Browse test_combinatorial_test_browse_to_leaf_277877675983786716385047489875091328556
2018-03-02 19:00:21,461 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:21,461 [INFO] SONOS.sonos.workflow.result - End *test iteration* 17 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:21,461 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:21,462 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 18 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:21,462 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:21,462 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21257 Browse test_combinatorial_test_browse_to_leaf_113373951022049354288007136024107105166 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870732"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Cole's Law 12:49"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 769
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:21,462 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:21,463 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870732,)
2018-03-02 19:00:21,464 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870732</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:21,464 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:22,076 [DEBUG] SONOS.suds.client - waited 611 (ms) on server reply
2018-03-02 19:00:22,077 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870732</id>
            <itemType>track</itemType>
            <title>Cole&apos;s Law</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>769</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:22,080 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870732"
   itemType = "track"
   title = "Cole's Law"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 769
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 611 (ms)
 } is not None)
2018-03-02 19:00:22,080 [PASS] SONOS.sonos.workflow.fixture.Browse - 21257 Browse test_combinatorial_test_browse_to_leaf_113373951022049354288007136024107105166
2018-03-02 19:00:22,080 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:22,080 [INFO] SONOS.sonos.workflow.result - End *test iteration* 18 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:22,081 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:22,081 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 19 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:22,081 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:22,081 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21258 Browse test_combinatorial_test_browse_to_leaf_8188544039905786003942344918873500143 (mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870731"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Tuning 1:35"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 95
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/22/93 – Fox Theatre – Boulder, CO"
      }
 })
2018-03-02 19:00:22,081 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:22,082 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-22:46247:870731,)
2018-03-02 19:00:22,083 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-22:46247:870731</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:22,083 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:22,489 [DEBUG] SONOS.suds.client - waited 405 (ms) on server reply
2018-03-02 19:00:22,490 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-22:46247:870731</id>
            <itemType>track</itemType>
            <title>Tuning</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-22:46247</albumId>
               <duration>95</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-22 Fox Theatre</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:22,495 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-22:46247:870731"
   itemType = "track"
   title = "Tuning"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-22:46247"
         duration = 95
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-22 Fox Theatre"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 405 (ms)
 } is not None)
2018-03-02 19:00:22,495 [PASS] SONOS.sonos.workflow.fixture.Browse - 21258 Browse test_combinatorial_test_browse_to_leaf_8188544039905786003942344918873500143
2018-03-02 19:00:22,495 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:22,495 [INFO] SONOS.sonos.workflow.result - End *test iteration* 19 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:22,496 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:22,496 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 20 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:22,496 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata(Shows:zero:1993:1993-04-02, 0, 10000, None)
2018-03-02 19:00:22,498 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>Shows:zero:1993:1993-04-02</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:22,498 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:23,073 [DEBUG] SONOS.suds.client - waited 574 (ms) on server reply
2018-03-02 19:00:23,077 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>13</count>
            <total>13</total>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871806</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Cole&apos;s Law 14:04</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>844</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871807</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Highway 61 10:31</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>631</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871808</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Home On The Range 12:03</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>723</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871809</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Baby Baby 12:45</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>765</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871810</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Mercury Blues 9:22</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>562</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871811</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>End Of The World Blues 11:44</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>704</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871812</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>zero1993-04-02d2t1.shn 6:27</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>387</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871813</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Did I Mention 9:08</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>548</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871814</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Horses 4:54</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>294</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871815</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Gregg&apos;s Eggs 20:07</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>1207</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871816</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Catalina* 11:32</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>692</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871817</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Little Wing 10:10</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>610</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
            <mediaMetadata>
               <id>Track:zero:1993:1993-04-02:46307:871818</id>
               <itemType>track</itemType>
               <mimeType>audio/mp3</mimeType>
               <title>Like A Rolling Stone 13:49</title>
               <trackMetadata>
                  <albumId>Show:zero:1993:1993-04-02:46307</albumId>
                  <duration>829</duration>
                  <artistId>Artist:zero</artistId>
                  <artist>Zero</artist>
                  <album>4/2/93 – Great American Music Hall – San Francisco, CA</album>
               </trackMetadata>
            </mediaMetadata>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:23,114 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:23,115 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21259 Browse test_combinatorial_test_browse_to_leaf_312584291688127371939205962381219992931 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871806"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Cole's Law 14:04"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 844
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:23,115 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:23,115 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871806,)
2018-03-02 19:00:23,117 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871806</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:23,119 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:23,486 [DEBUG] SONOS.suds.client - waited 366 (ms) on server reply
2018-03-02 19:00:23,487 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871806</id>
            <itemType>track</itemType>
            <title>Cole&apos;s Law</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>844</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:23,490 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871806"
   itemType = "track"
   title = "Cole's Law"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 844
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 366 (ms)
 } is not None)
2018-03-02 19:00:23,491 [PASS] SONOS.sonos.workflow.fixture.Browse - 21259 Browse test_combinatorial_test_browse_to_leaf_312584291688127371939205962381219992931
2018-03-02 19:00:23,491 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:23,491 [INFO] SONOS.sonos.workflow.result - End *test iteration* 20 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:23,491 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:23,491 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 21 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:23,491 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:23,492 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21260 Browse test_combinatorial_test_browse_to_leaf_245473839948420732912359193723582302503 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871807"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Highway 61 10:31"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 631
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:23,492 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:23,492 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871807,)
2018-03-02 19:00:23,493 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871807</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:23,494 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:23,867 [DEBUG] SONOS.suds.client - waited 372 (ms) on server reply
2018-03-02 19:00:23,868 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871807</id>
            <itemType>track</itemType>
            <title>Highway 61</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>631</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:23,871 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871807"
   itemType = "track"
   title = "Highway 61"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 631
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 372 (ms)
 } is not None)
2018-03-02 19:00:23,871 [PASS] SONOS.sonos.workflow.fixture.Browse - 21260 Browse test_combinatorial_test_browse_to_leaf_245473839948420732912359193723582302503
2018-03-02 19:00:23,871 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:23,871 [INFO] SONOS.sonos.workflow.result - End *test iteration* 21 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:23,872 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:23,872 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 22 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:23,872 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:23,872 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21261 Browse test_combinatorial_test_browse_to_leaf_100351950244156055466180490205224860123 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871808"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Home On The Range 12:03"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 723
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:23,872 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:23,873 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871808,)
2018-03-02 19:00:23,874 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871808</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:23,874 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:24,268 [DEBUG] SONOS.suds.client - waited 394 (ms) on server reply
2018-03-02 19:00:24,269 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871808</id>
            <itemType>track</itemType>
            <title>Home On The Range</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>723</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:24,273 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871808"
   itemType = "track"
   title = "Home On The Range"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 723
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 394 (ms)
 } is not None)
2018-03-02 19:00:24,273 [PASS] SONOS.sonos.workflow.fixture.Browse - 21261 Browse test_combinatorial_test_browse_to_leaf_100351950244156055466180490205224860123
2018-03-02 19:00:24,273 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:24,273 [INFO] SONOS.sonos.workflow.result - End *test iteration* 22 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:24,273 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:24,273 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 23 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:24,274 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:24,274 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21262 Browse test_combinatorial_test_browse_to_leaf_67023459623547686907826364925855253032 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871809"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Baby Baby 12:45"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 765
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:24,274 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:24,274 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871809,)
2018-03-02 19:00:24,276 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871809</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:24,276 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:24,691 [DEBUG] SONOS.suds.client - waited 414 (ms) on server reply
2018-03-02 19:00:24,692 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871809</id>
            <itemType>track</itemType>
            <title>Baby Baby</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>765</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:24,696 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871809"
   itemType = "track"
   title = "Baby Baby"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 765
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 414 (ms)
 } is not None)
2018-03-02 19:00:24,696 [PASS] SONOS.sonos.workflow.fixture.Browse - 21262 Browse test_combinatorial_test_browse_to_leaf_67023459623547686907826364925855253032
2018-03-02 19:00:24,696 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:24,696 [INFO] SONOS.sonos.workflow.result - End *test iteration* 23 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:24,696 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:24,697 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 24 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:24,697 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:24,698 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21263 Browse test_combinatorial_test_browse_to_leaf_187220913730283691342322885171750931316 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871810"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Mercury Blues 9:22"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 562
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:24,699 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:24,699 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871810,)
2018-03-02 19:00:24,700 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871810</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:24,702 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:25,131 [DEBUG] SONOS.suds.client - waited 429 (ms) on server reply
2018-03-02 19:00:25,133 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871810</id>
            <itemType>track</itemType>
            <title>Mercury Blues</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>562</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:25,138 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871810"
   itemType = "track"
   title = "Mercury Blues"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 562
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 429 (ms)
 } is not None)
2018-03-02 19:00:25,138 [PASS] SONOS.sonos.workflow.fixture.Browse - 21263 Browse test_combinatorial_test_browse_to_leaf_187220913730283691342322885171750931316
2018-03-02 19:00:25,138 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:25,138 [INFO] SONOS.sonos.workflow.result - End *test iteration* 24 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:25,139 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:25,139 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 25 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:25,139 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:25,139 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21264 Browse test_combinatorial_test_browse_to_leaf_163690483584751150026396870443096867039 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871811"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "End Of The World Blues 11:44"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 704
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:25,139 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:25,140 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871811,)
2018-03-02 19:00:25,141 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871811</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:25,141 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:26,950 [DEBUG] SONOS.suds.client - waited 1.808 (seconds) on server reply
2018-03-02 19:00:26,951 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871811</id>
            <itemType>track</itemType>
            <title>End Of The World Blues</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>704</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:26,955 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871811"
   itemType = "track"
   title = "End Of The World Blues"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 704
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 1.808 (seconds)
 } is not None)
2018-03-02 19:00:26,955 [PASS] SONOS.sonos.workflow.fixture.Browse - 21264 Browse test_combinatorial_test_browse_to_leaf_163690483584751150026396870443096867039
2018-03-02 19:00:26,955 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:26,955 [INFO] SONOS.sonos.workflow.result - End *test iteration* 25 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:26,955 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:26,955 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 26 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:26,956 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:26,956 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21265 Browse test_combinatorial_test_browse_to_leaf_339251940739989246381346205863695084958 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871812"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "zero1993-04-02d2t1.shn 6:27"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 387
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:26,956 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:26,956 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871812,)
2018-03-02 19:00:26,958 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871812</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:26,958 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:27,335 [DEBUG] SONOS.suds.client - waited 376 (ms) on server reply
2018-03-02 19:00:27,336 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871812</id>
            <itemType>track</itemType>
            <title>zero1993-04-02d2t1.shn</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>387</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:27,340 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871812"
   itemType = "track"
   title = "zero1993-04-02d2t1.shn"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 387
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 376 (ms)
 } is not None)
2018-03-02 19:00:27,340 [PASS] SONOS.sonos.workflow.fixture.Browse - 21265 Browse test_combinatorial_test_browse_to_leaf_339251940739989246381346205863695084958
2018-03-02 19:00:27,340 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:27,340 [INFO] SONOS.sonos.workflow.result - End *test iteration* 26 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:27,341 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:27,341 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 27 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:27,341 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:27,343 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21266 Browse test_combinatorial_test_browse_to_leaf_286434579099389951191587657000811190538 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871813"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Did I Mention 9:08"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 548
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:27,343 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:27,344 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871813,)
2018-03-02 19:00:27,345 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871813</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:27,345 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:27,807 [DEBUG] SONOS.suds.client - waited 461 (ms) on server reply
2018-03-02 19:00:27,810 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871813</id>
            <itemType>track</itemType>
            <title>Did I Mention</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>548</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:27,814 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871813"
   itemType = "track"
   title = "Did I Mention"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 548
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 461 (ms)
 } is not None)
2018-03-02 19:00:27,814 [PASS] SONOS.sonos.workflow.fixture.Browse - 21266 Browse test_combinatorial_test_browse_to_leaf_286434579099389951191587657000811190538
2018-03-02 19:00:27,814 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:27,814 [INFO] SONOS.sonos.workflow.result - End *test iteration* 27 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:27,815 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:27,815 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 28 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:27,815 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:27,815 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21267 Browse test_combinatorial_test_browse_to_leaf_107695753815674685634451570625291526684 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871814"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Horses 4:54"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 294
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:27,815 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:27,816 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871814,)
2018-03-02 19:00:27,817 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871814</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:27,817 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:28,305 [DEBUG] SONOS.suds.client - waited 488 (ms) on server reply
2018-03-02 19:00:28,307 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871814</id>
            <itemType>track</itemType>
            <title>Horses</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>294</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:28,310 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871814"
   itemType = "track"
   title = "Horses"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 294
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 488 (ms)
 } is not None)
2018-03-02 19:00:28,310 [PASS] SONOS.sonos.workflow.fixture.Browse - 21267 Browse test_combinatorial_test_browse_to_leaf_107695753815674685634451570625291526684
2018-03-02 19:00:28,310 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,311 [INFO] SONOS.sonos.workflow.result - End *test iteration* 28 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,311 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,311 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 29 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,311 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,311 [INFO] SONOS.sonos.workflow.fixture.Browse - Test Case: 21268 Browse test_combinatorial_test_browse_to_leaf_254472219074273152671166423802716934078 (mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871815"
   itemType = "track"
   mimeType = "audio/mp3"
   title = "Gregg's Eggs 20:07"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 1207
         artistId = "Artist:zero"
         artist = "Zero"
         album = "4/2/93 – Great American Music Hall – San Francisco, CA"
      }
 })
2018-03-02 19:00:28,312 [PASS] SONOS.sonos.workflow.fixture.Browse - Service must yield valid objects when browsing for this test to run. (expression is True)
2018-03-02 19:00:28,312 [DEBUG] SONOS.sonos.smapi.smapiclient - getMediaMetadata(Track:zero:1993:1993-04-02:46307:871815,)
2018-03-02 19:00:28,313 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMediaMetadata>
         <ns1:id>Track:zero:1993:1993-04-02:46307:871815</ns1:id>
      </ns1:getMediaMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:28,314 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMediaMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:28,929 [DEBUG] SONOS.suds.client - waited 615 (ms) on server reply
2018-03-02 19:00:28,931 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMediaMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMediaMetadataResult>
            <id>Track:zero:1993:1993-04-02:46307:871815</id>
            <itemType>track</itemType>
            <title>Gregg&apos;s Eggs</title>
            <genre/>
            <mimeType>audio/mp3</mimeType>
            <trackMetadata>
               <albumId>Show:zero:1993:1993-04-02:46307</albumId>
               <duration>1207</duration>
               <artistId>Artist:zero</artistId>
               <artist>Zero</artist>
               <album>1993-04-02 Great American Music Hall</album>
               <canPlay>true</canPlay>
               <canSkip>true</canSkip>
               <canAddToFavorites>false</canAddToFavorites>
            </trackMetadata>
         </getMediaMetadataResult>
      </getMediaMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:28,934 [PASS] SONOS.sonos.workflow.fixture.Browse - Requesting getMediaMetdata on a track ID should return something other than None. ((mediaMetadata){
   id = "Track:zero:1993:1993-04-02:46307:871815"
   itemType = "track"
   title = "Gregg's Eggs"
   genre = None
   mimeType = "audio/mp3"
   trackMetadata = 
      (trackMetadata){
         albumId = "Show:zero:1993:1993-04-02:46307"
         duration = 1207
         artistId = "Artist:zero"
         artist = "Zero"
         album = "1993-04-02 Great American Music Hall"
         canPlay = True
         canSkip = True
         canAddToFavorites = False
      }
   timer = 615 (ms)
 } is not None)
2018-03-02 19:00:28,934 [PASS] SONOS.sonos.workflow.fixture.Browse - 21268 Browse test_combinatorial_test_browse_to_leaf_254472219074273152671166423802716934078
2018-03-02 19:00:28,934 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,935 [INFO] SONOS.sonos.workflow.result - End *test iteration* 29 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,935 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,935 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 30 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,936 [INFO] SONOS.sonos.workflow.fixture.Browse - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,937 [INFO] SONOS.sonos.workflow.result - End *test iteration* 30 of test case test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,937 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_test_browse_to_leaf at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,937 [INFO] SONOS.sonos.workflow.result - End *test fixture* Browse at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,938 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:00:28,938 [INFO] SONOS.sonos.workflow.result - Start *test fixture* HTTPBasedTests at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,938 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,938 [INFO] SONOS.sonos.workflow.result - Start *test case* test_albumart_uri_valid at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,938 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,938 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - Start Test Case: 42379 HTTPBasedTests test_albumart_uri_valid
2018-03-02 19:00:28,938 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - Service must provide a valid track ID ([Test Content]:track in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,939 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - 42379 HTTPBasedTests test_albumart_uri_valid
2018-03-02 19:00:28,939 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,939 [INFO] SONOS.sonos.workflow.result - End *test case* test_albumart_uri_valid at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,939 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,939 [INFO] SONOS.sonos.workflow.result - Start *test case* test_artlogo_uri_valid at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,939 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,939 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - Start Test Case: 42380 HTTPBasedTests test_artlogo_uri_valid
2018-03-02 19:00:28,939 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,940 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - 42380 HTTPBasedTests test_artlogo_uri_valid
2018-03-02 19:00:28,940 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,940 [INFO] SONOS.sonos.workflow.result - End *test case* test_artlogo_uri_valid at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,940 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,940 [INFO] SONOS.sonos.workflow.result - Start *test case* test_artprog_uri_valid at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,940 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,940 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - Start Test Case: 42381 HTTPBasedTests test_artprog_uri_valid
2018-03-02 19:00:28,941 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,941 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - 42381 HTTPBasedTests test_artprog_uri_valid
2018-03-02 19:00:28,941 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,941 [INFO] SONOS.sonos.workflow.result - End *test case* test_artprog_uri_valid at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,941 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,942 [INFO] SONOS.sonos.workflow.result - Start *test case* test_byte_range_seeking_beginning_and_end_specified at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,942 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,943 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - Start Test Case: 42382 HTTPBasedTests test_byte_range_seeking_beginning_and_end_specified
2018-03-02 19:00:28,943 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - Service must provide a valid track ID ([Test Content]:track in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,944 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - 42382 HTTPBasedTests test_byte_range_seeking_beginning_and_end_specified
2018-03-02 19:00:28,944 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,944 [INFO] SONOS.sonos.workflow.result - End *test case* test_byte_range_seeking_beginning_and_end_specified at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,944 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,945 [INFO] SONOS.sonos.workflow.result - Start *test case* test_byte_range_seeking_no_end_specified at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,945 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,945 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - Start Test Case: 42383 HTTPBasedTests test_byte_range_seeking_no_end_specified
2018-03-02 19:00:28,945 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - Service must provide a valid track ID ([Test Content]:track in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,945 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - 42383 HTTPBasedTests test_byte_range_seeking_no_end_specified
2018-03-02 19:00:28,945 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,946 [INFO] SONOS.sonos.workflow.result - End *test case* test_byte_range_seeking_no_end_specified at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,946 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,946 [INFO] SONOS.sonos.workflow.result - Start *test case* test_implicit_explicit_actions at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,946 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,946 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - Start Test Case: 42384 HTTPBasedTests test_implicit_explicit_actions
2018-03-02 19:00:28,946 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - Service must provide a valid track ID ([Test Content]:track in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,946 [SKIP] SONOS.sonos.workflow.fixture.HTTPBasedTests - 42384 HTTPBasedTests test_implicit_explicit_actions
2018-03-02 19:00:28,946 [INFO] SONOS.sonos.workflow.fixture.HTTPBasedTests - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,947 [INFO] SONOS.sonos.workflow.result - End *test case* test_implicit_explicit_actions at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,947 [INFO] SONOS.sonos.workflow.result - End *test fixture* HTTPBasedTests at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,947 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:00:28,947 [INFO] SONOS.sonos.workflow.result - Start *test fixture* Search at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,947 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,947 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_item_types at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,947 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,947 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_item_types at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,947 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,948 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84763 Search test_combinatorial_item_types_129316834537479570751535345027097011000 itemType)
2018-03-02 19:00:28,948 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,948 [SKIP] SONOS.sonos.workflow.fixture.Search - 84763 Search test_combinatorial_item_types_129316834537479570751535345027097011000
2018-03-02 19:00:28,948 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,948 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_item_types at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,949 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,949 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_item_types at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,949 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,949 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84764 Search test_combinatorial_item_types_244638787362077305305759689222081875087 id)
2018-03-02 19:00:28,949 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,949 [SKIP] SONOS.sonos.workflow.fixture.Search - 84764 Search test_combinatorial_item_types_244638787362077305305759689222081875087
2018-03-02 19:00:28,949 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,949 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_item_types at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,950 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,950 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_item_types at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,950 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,950 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_item_types at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,950 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_item_types at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,950 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,950 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,950 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,951 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,951 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,951 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84766 Search test_combinatorial_search_all_incremental_search (u'', u''))
2018-03-02 19:00:28,951 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,951 [SKIP] SONOS.sonos.workflow.fixture.Search - 84766 Search test_combinatorial_search_all_incremental_search
2018-03-02 19:00:28,951 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,951 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,952 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,952 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,952 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,952 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84767 Search test_combinatorial_search_all_incremental_search (u'', u''))
2018-03-02 19:00:28,952 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,952 [SKIP] SONOS.sonos.workflow.fixture.Search - 84767 Search test_combinatorial_search_all_incremental_search
2018-03-02 19:00:28,952 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,952 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,953 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,953 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,953 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,953 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84768 Search test_combinatorial_search_all_incremental_search (u'', u''))
2018-03-02 19:00:28,953 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,953 [SKIP] SONOS.sonos.workflow.fixture.Search - 84768 Search test_combinatorial_search_all_incremental_search
2018-03-02 19:00:28,953 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,954 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,954 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,954 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,954 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,955 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84769 Search test_combinatorial_search_all_incremental_search (u'', u''))
2018-03-02 19:00:28,955 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,955 [SKIP] SONOS.sonos.workflow.fixture.Search - 84769 Search test_combinatorial_search_all_incremental_search
2018-03-02 19:00:28,955 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,955 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,956 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,956 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,956 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,956 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84770 Search test_combinatorial_search_all_incremental_search (u'', u''))
2018-03-02 19:00:28,956 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,956 [SKIP] SONOS.sonos.workflow.fixture.Search - 84770 Search test_combinatorial_search_all_incremental_search
2018-03-02 19:00:28,956 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,956 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,957 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,957 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,957 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,957 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84771 Search test_combinatorial_search_all_incremental_search (u'', u''))
2018-03-02 19:00:28,957 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,957 [SKIP] SONOS.sonos.workflow.fixture.Search - 84771 Search test_combinatorial_search_all_incremental_search
2018-03-02 19:00:28,957 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,957 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,958 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,958 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,958 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,958 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84772 Search test_combinatorial_search_all_incremental_search (u'', u''))
2018-03-02 19:00:28,958 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,958 [SKIP] SONOS.sonos.workflow.fixture.Search - 84772 Search test_combinatorial_search_all_incremental_search
2018-03-02 19:00:28,959 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,959 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,959 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,959 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,959 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,959 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,959 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_search_all_incremental_search at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,959 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,959 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,960 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,960 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,960 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,960 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84774 Search test_combinatorial_search_all_inputs_237829601409385550092399224542814219566 1234567890abcdefINVALID987654321)
2018-03-02 19:00:28,960 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,960 [SKIP] SONOS.sonos.workflow.fixture.Search - 84774 Search test_combinatorial_search_all_inputs_237829601409385550092399224542814219566
2018-03-02 19:00:28,961 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,961 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,961 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,961 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,961 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,961 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84775 Search test_combinatorial_search_all_inputs_241141155301681835121854327093132997124 911)
2018-03-02 19:00:28,961 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,962 [SKIP] SONOS.sonos.workflow.fixture.Search - 84775 Search test_combinatorial_search_all_inputs_241141155301681835121854327093132997124
2018-03-02 19:00:28,962 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,962 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,962 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,962 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,962 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,962 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84776 Search test_combinatorial_search_all_inputs_311060053710252238656424708343354944443 ??)
2018-03-02 19:00:28,963 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,963 [SKIP] SONOS.sonos.workflow.fixture.Search - 84776 Search test_combinatorial_search_all_inputs_311060053710252238656424708343354944443
2018-03-02 19:00:28,963 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,963 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,963 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,963 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,963 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,964 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84777 Search test_combinatorial_search_all_inputs_217492388849670131461884670065220263191 u'Los del R\xedo')
2018-03-02 19:00:28,964 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,964 [SKIP] SONOS.sonos.workflow.fixture.Search - 84777 Search test_combinatorial_search_all_inputs_217492388849670131461884670065220263191
2018-03-02 19:00:28,964 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,964 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,964 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,964 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,964 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,964 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,965 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_search_all_inputs at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,965 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:28,965 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:28,965 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,965 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,965 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,965 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84779 Search test_combinatorial_search_invalid_range_pagination_264537653533266056221724839780338177925 (u'self.smapiservice.get_search_container_track()', (-1, 10)))
2018-03-02 19:00:28,966 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,966 [SKIP] SONOS.sonos.workflow.fixture.Search - 84779 Search test_combinatorial_search_invalid_range_pagination_264537653533266056221724839780338177925
2018-03-02 19:00:28,966 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,966 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,966 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,966 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,966 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,966 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84780 Search test_combinatorial_search_invalid_range_pagination_83455970626036859195990579030458724143 (u'self.smapiservice.get_search_container_track()', (0, -1)))
2018-03-02 19:00:28,967 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,967 [SKIP] SONOS.sonos.workflow.fixture.Search - 84780 Search test_combinatorial_search_invalid_range_pagination_83455970626036859195990579030458724143
2018-03-02 19:00:28,967 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,967 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,967 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,967 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,967 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,968 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84781 Search test_combinatorial_search_invalid_range_pagination_26786378141606074206642698726517444120 (u'self.smapiservice.get_search_container_track()', (999999, 5)))
2018-03-02 19:00:28,968 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,968 [SKIP] SONOS.sonos.workflow.fixture.Search - 84781 Search test_combinatorial_search_invalid_range_pagination_26786378141606074206642698726517444120
2018-03-02 19:00:28,968 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,968 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,969 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,969 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,969 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,969 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84782 Search test_combinatorial_search_invalid_range_pagination_18272348131860973811126983983515949965 (u'self.smapiservice.get_search_container_track()', (0, 999999)))
2018-03-02 19:00:28,969 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,970 [SKIP] SONOS.sonos.workflow.fixture.Search - 84782 Search test_combinatorial_search_invalid_range_pagination_18272348131860973811126983983515949965
2018-03-02 19:00:28,971 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,971 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,971 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,971 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,971 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,972 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84783 Search test_combinatorial_search_invalid_range_pagination_334530859731280597001672966304419155678 (u'self.smapiservice.get_search_container_artist()', (-1, 10)))
2018-03-02 19:00:28,972 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,972 [SKIP] SONOS.sonos.workflow.fixture.Search - 84783 Search test_combinatorial_search_invalid_range_pagination_334530859731280597001672966304419155678
2018-03-02 19:00:28,972 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,972 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,972 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,973 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,973 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,973 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84784 Search test_combinatorial_search_invalid_range_pagination_266065354240924518505077155648932421758 (u'self.smapiservice.get_search_container_artist()', (0, -1)))
2018-03-02 19:00:28,973 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,973 [SKIP] SONOS.sonos.workflow.fixture.Search - 84784 Search test_combinatorial_search_invalid_range_pagination_266065354240924518505077155648932421758
2018-03-02 19:00:28,973 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,973 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,974 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,974 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,974 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,974 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84785 Search test_combinatorial_search_invalid_range_pagination_319667186650017896502691563660555807863 (u'self.smapiservice.get_search_container_artist()', (999999, 5)))
2018-03-02 19:00:28,974 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,975 [SKIP] SONOS.sonos.workflow.fixture.Search - 84785 Search test_combinatorial_search_invalid_range_pagination_319667186650017896502691563660555807863
2018-03-02 19:00:28,975 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,975 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,976 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,976 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,976 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,976 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84786 Search test_combinatorial_search_invalid_range_pagination_42763360555755396303487925759304198215 (u'self.smapiservice.get_search_container_artist()', (0, 999999)))
2018-03-02 19:00:28,977 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,977 [SKIP] SONOS.sonos.workflow.fixture.Search - 84786 Search test_combinatorial_search_invalid_range_pagination_42763360555755396303487925759304198215
2018-03-02 19:00:28,977 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,977 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,978 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,978 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,978 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,978 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84787 Search test_combinatorial_search_invalid_range_pagination_160287185336267421688008603043458452645 (u'self.smapiservice.get_search_container_album()', (-1, 10)))
2018-03-02 19:00:28,978 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,979 [SKIP] SONOS.sonos.workflow.fixture.Search - 84787 Search test_combinatorial_search_invalid_range_pagination_160287185336267421688008603043458452645
2018-03-02 19:00:28,979 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,979 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,979 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,979 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,979 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,979 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84788 Search test_combinatorial_search_invalid_range_pagination_158045885107802149641881153237242675952 (u'self.smapiservice.get_search_container_album()', (0, -1)))
2018-03-02 19:00:28,980 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,980 [SKIP] SONOS.sonos.workflow.fixture.Search - 84788 Search test_combinatorial_search_invalid_range_pagination_158045885107802149641881153237242675952
2018-03-02 19:00:28,980 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,980 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,980 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,980 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,980 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,981 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84789 Search test_combinatorial_search_invalid_range_pagination_308567961945112421038348417893487973595 (u'self.smapiservice.get_search_container_album()', (999999, 5)))
2018-03-02 19:00:28,981 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,981 [SKIP] SONOS.sonos.workflow.fixture.Search - 84789 Search test_combinatorial_search_invalid_range_pagination_308567961945112421038348417893487973595
2018-03-02 19:00:28,981 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,981 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,981 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,981 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 11 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,982 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,982 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84790 Search test_combinatorial_search_invalid_range_pagination_132753522923605847198530382715363134224 (u'self.smapiservice.get_search_container_album()', (0, 999999)))
2018-03-02 19:00:28,982 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,982 [SKIP] SONOS.sonos.workflow.fixture.Search - 84790 Search test_combinatorial_search_invalid_range_pagination_132753522923605847198530382715363134224
2018-03-02 19:00:28,982 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,982 [INFO] SONOS.sonos.workflow.result - End *test iteration* 11 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,982 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,982 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 12 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,983 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,983 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84791 Search test_combinatorial_search_invalid_range_pagination_209462945204014936616538471218686826401 (u'self.smapiservice.get_search_container_program()', (-1, 10)))
2018-03-02 19:00:28,983 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,983 [SKIP] SONOS.sonos.workflow.fixture.Search - 84791 Search test_combinatorial_search_invalid_range_pagination_209462945204014936616538471218686826401
2018-03-02 19:00:28,983 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,983 [INFO] SONOS.sonos.workflow.result - End *test iteration* 12 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,984 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,984 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 13 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,984 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,984 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84792 Search test_combinatorial_search_invalid_range_pagination_149987381252473566565581864027438564828 (u'self.smapiservice.get_search_container_program()', (0, -1)))
2018-03-02 19:00:28,984 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,984 [SKIP] SONOS.sonos.workflow.fixture.Search - 84792 Search test_combinatorial_search_invalid_range_pagination_149987381252473566565581864027438564828
2018-03-02 19:00:28,984 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,984 [INFO] SONOS.sonos.workflow.result - End *test iteration* 13 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,985 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,985 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 14 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,985 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,985 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84793 Search test_combinatorial_search_invalid_range_pagination_89441038082718721493776877875400977190 (u'self.smapiservice.get_search_container_program()', (999999, 5)))
2018-03-02 19:00:28,985 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,985 [SKIP] SONOS.sonos.workflow.fixture.Search - 84793 Search test_combinatorial_search_invalid_range_pagination_89441038082718721493776877875400977190
2018-03-02 19:00:28,985 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,985 [INFO] SONOS.sonos.workflow.result - End *test iteration* 14 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,986 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,986 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 15 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,986 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,986 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84794 Search test_combinatorial_search_invalid_range_pagination_138931247299842863487500287978439824215 (u'self.smapiservice.get_search_container_program()', (0, 999999)))
2018-03-02 19:00:28,986 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,986 [SKIP] SONOS.sonos.workflow.fixture.Search - 84794 Search test_combinatorial_search_invalid_range_pagination_138931247299842863487500287978439824215
2018-03-02 19:00:28,986 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,987 [INFO] SONOS.sonos.workflow.result - End *test iteration* 15 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,987 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,987 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 16 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,987 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,987 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84795 Search test_combinatorial_search_invalid_range_pagination_17284607116011952056454911940739310590 (u'self.smapiservice.get_search_container_stream()', (-1, 10)))
2018-03-02 19:00:28,988 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,988 [SKIP] SONOS.sonos.workflow.fixture.Search - 84795 Search test_combinatorial_search_invalid_range_pagination_17284607116011952056454911940739310590
2018-03-02 19:00:28,988 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,988 [INFO] SONOS.sonos.workflow.result - End *test iteration* 16 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,988 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,988 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 17 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,988 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,989 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84796 Search test_combinatorial_search_invalid_range_pagination_258895446293043835198947640211532784746 (u'self.smapiservice.get_search_container_stream()', (0, -1)))
2018-03-02 19:00:28,989 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,989 [SKIP] SONOS.sonos.workflow.fixture.Search - 84796 Search test_combinatorial_search_invalid_range_pagination_258895446293043835198947640211532784746
2018-03-02 19:00:28,989 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,989 [INFO] SONOS.sonos.workflow.result - End *test iteration* 17 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,989 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,990 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 18 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,990 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,990 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84797 Search test_combinatorial_search_invalid_range_pagination_293424647822230681938585950082267237492 (u'self.smapiservice.get_search_container_stream()', (999999, 5)))
2018-03-02 19:00:28,990 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,990 [SKIP] SONOS.sonos.workflow.fixture.Search - 84797 Search test_combinatorial_search_invalid_range_pagination_293424647822230681938585950082267237492
2018-03-02 19:00:28,990 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,990 [INFO] SONOS.sonos.workflow.result - End *test iteration* 18 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,991 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,991 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 19 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,991 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,991 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84798 Search test_combinatorial_search_invalid_range_pagination_218213401297178942473565770828915548795 (u'self.smapiservice.get_search_container_stream()', (0, 999999)))
2018-03-02 19:00:28,991 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,992 [SKIP] SONOS.sonos.workflow.fixture.Search - 84798 Search test_combinatorial_search_invalid_range_pagination_218213401297178942473565770828915548795
2018-03-02 19:00:28,992 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,992 [INFO] SONOS.sonos.workflow.result - End *test iteration* 19 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,992 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,992 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 20 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,992 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,993 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84799 Search test_combinatorial_search_invalid_range_pagination_270132571344129075915129866460334239215 (u'self.smapiservice.get_search_container_playlist()', (-1, 10)))
2018-03-02 19:00:28,993 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,993 [SKIP] SONOS.sonos.workflow.fixture.Search - 84799 Search test_combinatorial_search_invalid_range_pagination_270132571344129075915129866460334239215
2018-03-02 19:00:28,993 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,994 [INFO] SONOS.sonos.workflow.result - End *test iteration* 20 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,994 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,994 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 21 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,994 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,994 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84800 Search test_combinatorial_search_invalid_range_pagination_43154203856518217929907597780778799206 (u'self.smapiservice.get_search_container_playlist()', (0, -1)))
2018-03-02 19:00:28,994 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,995 [SKIP] SONOS.sonos.workflow.fixture.Search - 84800 Search test_combinatorial_search_invalid_range_pagination_43154203856518217929907597780778799206
2018-03-02 19:00:28,995 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,995 [INFO] SONOS.sonos.workflow.result - End *test iteration* 21 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,995 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,995 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 22 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,996 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,996 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84801 Search test_combinatorial_search_invalid_range_pagination_164024917032993374870730317377722364757 (u'self.smapiservice.get_search_container_playlist()', (999999, 5)))
2018-03-02 19:00:28,996 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,996 [SKIP] SONOS.sonos.workflow.fixture.Search - 84801 Search test_combinatorial_search_invalid_range_pagination_164024917032993374870730317377722364757
2018-03-02 19:00:28,996 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,997 [INFO] SONOS.sonos.workflow.result - End *test iteration* 22 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,997 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,997 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 23 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,997 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,997 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84802 Search test_combinatorial_search_invalid_range_pagination_201667911828600338241449220814772389443 (u'self.smapiservice.get_search_container_playlist()', (0, 999999)))
2018-03-02 19:00:28,998 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:28,998 [SKIP] SONOS.sonos.workflow.fixture.Search - 84802 Search test_combinatorial_search_invalid_range_pagination_201667911828600338241449220814772389443
2018-03-02 19:00:28,998 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,998 [INFO] SONOS.sonos.workflow.result - End *test iteration* 23 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:28,999 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:28,999 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 24 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:28,999 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:28,999 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84803 Search test_combinatorial_search_invalid_range_pagination_272352713155291220962010082964586278599 (u'self.smapiservice.get_search_container_other()', (-1, 10)))
2018-03-02 19:00:28,999 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,000 [SKIP] SONOS.sonos.workflow.fixture.Search - 84803 Search test_combinatorial_search_invalid_range_pagination_272352713155291220962010082964586278599
2018-03-02 19:00:29,000 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,000 [INFO] SONOS.sonos.workflow.result - End *test iteration* 24 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,000 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,000 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 25 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,000 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,001 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84804 Search test_combinatorial_search_invalid_range_pagination_167062887669263226594122632839589767337 (u'self.smapiservice.get_search_container_other()', (0, -1)))
2018-03-02 19:00:29,001 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,001 [SKIP] SONOS.sonos.workflow.fixture.Search - 84804 Search test_combinatorial_search_invalid_range_pagination_167062887669263226594122632839589767337
2018-03-02 19:00:29,001 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,001 [INFO] SONOS.sonos.workflow.result - End *test iteration* 25 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,002 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,003 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 26 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,003 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,004 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84805 Search test_combinatorial_search_invalid_range_pagination_42036009394812135596434466236481905239 (u'self.smapiservice.get_search_container_other()', (999999, 5)))
2018-03-02 19:00:29,004 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,004 [SKIP] SONOS.sonos.workflow.fixture.Search - 84805 Search test_combinatorial_search_invalid_range_pagination_42036009394812135596434466236481905239
2018-03-02 19:00:29,005 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,005 [INFO] SONOS.sonos.workflow.result - End *test iteration* 26 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,005 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,005 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 27 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,005 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,006 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84806 Search test_combinatorial_search_invalid_range_pagination_147247074643290735854476624404562638882 (u'self.smapiservice.get_search_container_other()', (0, 999999)))
2018-03-02 19:00:29,006 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,006 [SKIP] SONOS.sonos.workflow.fixture.Search - 84806 Search test_combinatorial_search_invalid_range_pagination_147247074643290735854476624404562638882
2018-03-02 19:00:29,006 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,006 [INFO] SONOS.sonos.workflow.result - End *test iteration* 27 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,007 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,007 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 28 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,007 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,007 [INFO] SONOS.sonos.workflow.result - End *test iteration* 28 of test case test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:29,007 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_search_invalid_range_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,008 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:29,008 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:29,008 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,008 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,008 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,008 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84808 Search test_combinatorial_search_results_pagination_117401825799608550929175902867506475040 (u'self.smapiservice.get_search_container_track()', u'track'))
2018-03-02 19:00:29,009 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,010 [SKIP] SONOS.sonos.workflow.fixture.Search - 84808 Search test_combinatorial_search_results_pagination_117401825799608550929175902867506475040
2018-03-02 19:00:29,011 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,011 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,011 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,011 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,012 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,012 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84809 Search test_combinatorial_search_results_pagination_72250471479804423971698754870633177409 (u'self.smapiservice.get_search_container_artist()', u'artist'))
2018-03-02 19:00:29,012 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,012 [SKIP] SONOS.sonos.workflow.fixture.Search - 84809 Search test_combinatorial_search_results_pagination_72250471479804423971698754870633177409
2018-03-02 19:00:29,013 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,013 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,013 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,013 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,013 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,013 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84810 Search test_combinatorial_search_results_pagination_134550899865791776783178273087962518258 (u'self.smapiservice.get_search_container_album()', u'album'))
2018-03-02 19:00:29,014 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,014 [SKIP] SONOS.sonos.workflow.fixture.Search - 84810 Search test_combinatorial_search_results_pagination_134550899865791776783178273087962518258
2018-03-02 19:00:29,014 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,014 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,014 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,014 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,014 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,015 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84811 Search test_combinatorial_search_results_pagination_10762275166207459049128714636068301087 (u'self.smapiservice.get_search_container_program()', u'program'))
2018-03-02 19:00:29,015 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,015 [SKIP] SONOS.sonos.workflow.fixture.Search - 84811 Search test_combinatorial_search_results_pagination_10762275166207459049128714636068301087
2018-03-02 19:00:29,015 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,015 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,015 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,015 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,016 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,016 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84812 Search test_combinatorial_search_results_pagination_316177369974656976951021721751280697481 (u'self.smapiservice.get_search_container_stream()', u'stream'))
2018-03-02 19:00:29,016 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,016 [SKIP] SONOS.sonos.workflow.fixture.Search - 84812 Search test_combinatorial_search_results_pagination_316177369974656976951021721751280697481
2018-03-02 19:00:29,016 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,016 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,016 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,017 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,017 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,017 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84813 Search test_combinatorial_search_results_pagination_44500065934814015221142863091387152338 (u'self.smapiservice.get_search_container_playlist()', u'playlist'))
2018-03-02 19:00:29,017 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,017 [SKIP] SONOS.sonos.workflow.fixture.Search - 84813 Search test_combinatorial_search_results_pagination_44500065934814015221142863091387152338
2018-03-02 19:00:29,017 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,017 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,018 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,018 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,018 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,018 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84814 Search test_combinatorial_search_results_pagination_128579282379569079453933826811390174660 (u'self.smapiservice.get_search_container_other()', u'other'))
2018-03-02 19:00:29,019 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,019 [SKIP] SONOS.sonos.workflow.fixture.Search - 84814 Search test_combinatorial_search_results_pagination_128579282379569079453933826811390174660
2018-03-02 19:00:29,019 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,019 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,019 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,019 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,019 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,020 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:29,020 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_search_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,020 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:29,020 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:29,020 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,020 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,020 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,021 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84816 Search test_combinatorial_search_verify_results_311625000606473378461707165079849691420 (u'self.smapiservice.get_search_container_track()', u'self.smapiservice.get_search_term_track()'))
2018-03-02 19:00:29,021 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,021 [SKIP] SONOS.sonos.workflow.fixture.Search - 84816 Search test_combinatorial_search_verify_results_311625000606473378461707165079849691420
2018-03-02 19:00:29,021 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,021 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,021 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,021 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,021 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,022 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84817 Search test_combinatorial_search_verify_results_82562769879428199658291423279774422817 (u'self.smapiservice.get_search_container_artist()', u'self.smapiservice.get_search_term_artist()'))
2018-03-02 19:00:29,022 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,022 [SKIP] SONOS.sonos.workflow.fixture.Search - 84817 Search test_combinatorial_search_verify_results_82562769879428199658291423279774422817
2018-03-02 19:00:29,022 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,022 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,022 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,023 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,023 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,023 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84818 Search test_combinatorial_search_verify_results_308421698798149044702311439500512778005 (u'self.smapiservice.get_search_container_album()', u'self.smapiservice.get_search_term_album() '))
2018-03-02 19:00:29,023 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,023 [SKIP] SONOS.sonos.workflow.fixture.Search - 84818 Search test_combinatorial_search_verify_results_308421698798149044702311439500512778005
2018-03-02 19:00:29,023 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,023 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,024 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,024 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,024 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,024 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84819 Search test_combinatorial_search_verify_results_47690338398456615725864930136346371230 (u'self.smapiservice.get_search_container_program()', u'self.smapiservice.get_search_term_program()'))
2018-03-02 19:00:29,024 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,024 [SKIP] SONOS.sonos.workflow.fixture.Search - 84819 Search test_combinatorial_search_verify_results_47690338398456615725864930136346371230
2018-03-02 19:00:29,024 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,025 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,025 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,025 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,025 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,025 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84820 Search test_combinatorial_search_verify_results_114494826903219142138604980466477410255 (u'self.smapiservice.get_search_container_stream()', u'self.smapiservice.get_search_term_stream()'))
2018-03-02 19:00:29,025 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,025 [SKIP] SONOS.sonos.workflow.fixture.Search - 84820 Search test_combinatorial_search_verify_results_114494826903219142138604980466477410255
2018-03-02 19:00:29,026 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,026 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,026 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,026 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,026 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,026 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84821 Search test_combinatorial_search_verify_results_97241749001654301238293253235692771497 (u'self.smapiservice.get_search_container_playlist()', u'self.smapiservice.get_search_term_playlist()'))
2018-03-02 19:00:29,026 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,027 [SKIP] SONOS.sonos.workflow.fixture.Search - 84821 Search test_combinatorial_search_verify_results_97241749001654301238293253235692771497
2018-03-02 19:00:29,027 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,027 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,027 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,027 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,028 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,028 [INFO] SONOS.sonos.workflow.fixture.Search - Test Case: 84822 Search test_combinatorial_search_verify_results_58060706069951884597027011072858286571 (u'self.smapiservice.get_search_container_other()', u'self.smapiservice.get_search_term_other()'))
2018-03-02 19:00:29,028 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,028 [SKIP] SONOS.sonos.workflow.fixture.Search - 84822 Search test_combinatorial_search_verify_results_58060706069951884597027011072858286571
2018-03-02 19:00:29,028 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,028 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,029 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,029 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,029 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,029 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:29,029 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_search_verify_results at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,029 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:29,029 [INFO] SONOS.sonos.workflow.result - Start *test case* test_train_ux_search_configuration at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,029 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,029 [INFO] SONOS.sonos.workflow.fixture.Search - Start Test Case: 84824 Search test_train_ux_search_configuration
2018-03-02 19:00:29,030 [SKIP] SONOS.sonos.workflow.fixture.Search - Service must support search ([Capabilities]:search in the config file) for this test to run. (expression is False)
2018-03-02 19:00:29,030 [SKIP] SONOS.sonos.workflow.fixture.Search - 84824 Search test_train_ux_search_configuration
2018-03-02 19:00:29,030 [INFO] SONOS.sonos.workflow.fixture.Search - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,030 [INFO] SONOS.sonos.workflow.result - End *test case* test_train_ux_search_configuration at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:29,030 [INFO] SONOS.sonos.workflow.result - End *test fixture* Search at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,030 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:00:29,030 [INFO] SONOS.sonos.workflow.result - Start *test fixture* Progvalidation at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:29,031 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:29,031 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:29,031 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,031 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,031 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 19:00:29,032 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:29,033 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:29,721 [DEBUG] SONOS.suds.client - waited 687 (ms) on server reply
2018-03-02 19:00:29,743 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:29,918 [PASS] SONOS.sonos.workflow.fixture.Progvalidation - getMetdata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 687 (ms)
 } is not None)
2018-03-02 19:00:29,918 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,919 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169587 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,919 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,919 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169587 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,919 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,919 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,919 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,919 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,920 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,920 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169588 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,920 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,920 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169588 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,920 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,920 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,920 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,921 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,921 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,921 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169589 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,921 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,921 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169589 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,921 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,921 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,922 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,922 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,922 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,922 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169590 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,922 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,922 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169590 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,922 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,923 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,923 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,923 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,923 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,923 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169591 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,923 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,923 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169591 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,924 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,924 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,924 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,924 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,924 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,924 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169592 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,924 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,924 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169592 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,924 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,925 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,925 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,925 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,925 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,925 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169593 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,925 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,925 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169593 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,925 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,925 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,926 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,926 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,926 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,926 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169594 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,926 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,926 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169594 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,926 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,926 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,927 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,927 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,927 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,927 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169595 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,927 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,927 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169595 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,927 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,927 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,928 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,928 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,928 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,928 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169596 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,928 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,928 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169596 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,928 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,928 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,928 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,929 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,929 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,929 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169597 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,929 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,929 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169597 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,929 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,929 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,929 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,929 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 11 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,930 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,930 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169598 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,930 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,930 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169598 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,930 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,930 [INFO] SONOS.sonos.workflow.result - End *test iteration* 11 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,930 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,930 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 12 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,930 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,931 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169599 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,931 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,931 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169599 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,931 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,931 [INFO] SONOS.sonos.workflow.result - End *test iteration* 12 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,931 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,931 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 13 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,931 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,932 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169600 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,932 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,932 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169600 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,932 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,932 [INFO] SONOS.sonos.workflow.result - End *test iteration* 13 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,932 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,932 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 14 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,932 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,932 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169601 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,933 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,933 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169601 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,933 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,933 [INFO] SONOS.sonos.workflow.result - End *test iteration* 14 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,933 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,933 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 15 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,933 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,933 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169602 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,934 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,934 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169602 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,934 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,934 [INFO] SONOS.sonos.workflow.result - End *test iteration* 15 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,934 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,934 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 16 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,934 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,934 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169603 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,934 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,935 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169603 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,935 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,935 [INFO] SONOS.sonos.workflow.result - End *test iteration* 16 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,935 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,935 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 17 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,935 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,935 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169604 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,935 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,935 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169604 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,936 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,936 [INFO] SONOS.sonos.workflow.result - End *test iteration* 17 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,936 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,936 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 18 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,936 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,937 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169605 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,937 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,937 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169605 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,938 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,938 [INFO] SONOS.sonos.workflow.result - End *test iteration* 18 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,938 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,938 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 19 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,938 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,939 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169606 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,939 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,939 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169606 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,939 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,939 [INFO] SONOS.sonos.workflow.result - End *test iteration* 19 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,939 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,939 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 20 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,940 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,940 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169607 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,940 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,940 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169607 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,940 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,940 [INFO] SONOS.sonos.workflow.result - End *test iteration* 20 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,940 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,940 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 21 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,940 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,941 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169608 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,941 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,941 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169608 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,941 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,941 [INFO] SONOS.sonos.workflow.result - End *test iteration* 21 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,941 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,941 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 22 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,941 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,942 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169609 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,942 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,942 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169609 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,942 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,943 [INFO] SONOS.sonos.workflow.result - End *test iteration* 22 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,943 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,943 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 23 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,944 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,944 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169610 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,944 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,945 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169610 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,945 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,945 [INFO] SONOS.sonos.workflow.result - End *test iteration* 23 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,945 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,945 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 24 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,946 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,946 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169611 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,946 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,946 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169611 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,946 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,946 [INFO] SONOS.sonos.workflow.result - End *test iteration* 24 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,946 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,947 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 25 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,947 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,947 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169612 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,947 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,947 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169612 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,947 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,947 [INFO] SONOS.sonos.workflow.result - End *test iteration* 25 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,947 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,948 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 26 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,948 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,948 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169613 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,948 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,948 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169613 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,948 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,948 [INFO] SONOS.sonos.workflow.result - End *test iteration* 26 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,948 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,948 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 27 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,949 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,949 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169614 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,949 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,949 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169614 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,949 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,949 [INFO] SONOS.sonos.workflow.result - End *test iteration* 27 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,949 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,949 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 28 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,949 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,950 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169615 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,950 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,950 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169615 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,950 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,950 [INFO] SONOS.sonos.workflow.result - End *test iteration* 28 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,950 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,950 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 29 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,950 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,951 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169616 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,951 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,951 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169616 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,951 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,951 [INFO] SONOS.sonos.workflow.result - End *test iteration* 29 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,951 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,951 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 30 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,951 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,951 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169617 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,952 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,952 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169617 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,952 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,952 [INFO] SONOS.sonos.workflow.result - End *test iteration* 30 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,952 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,952 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 31 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,952 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,952 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169618 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,953 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,953 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169618 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,953 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,953 [INFO] SONOS.sonos.workflow.result - End *test iteration* 31 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,953 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,953 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 32 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,953 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,953 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169619 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,953 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,954 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169619 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,954 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,954 [INFO] SONOS.sonos.workflow.result - End *test iteration* 32 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,954 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,954 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 33 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,954 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,954 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169620 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,955 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,955 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169620 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,955 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,955 [INFO] SONOS.sonos.workflow.result - End *test iteration* 33 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,955 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,955 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 34 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,955 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,956 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169621 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,956 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,956 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169621 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,956 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,956 [INFO] SONOS.sonos.workflow.result - End *test iteration* 34 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,956 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,956 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 35 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,956 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,957 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169622 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,957 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,957 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169622 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,957 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,957 [INFO] SONOS.sonos.workflow.result - End *test iteration* 35 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,957 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,957 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 36 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,957 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,958 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169623 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,958 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,958 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169623 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,958 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,958 [INFO] SONOS.sonos.workflow.result - End *test iteration* 36 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,958 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,958 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 37 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,958 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,959 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169624 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,959 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,959 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169624 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,959 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,959 [INFO] SONOS.sonos.workflow.result - End *test iteration* 37 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,959 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,959 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 38 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,959 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,960 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169625 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,960 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,960 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169625 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,960 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,960 [INFO] SONOS.sonos.workflow.result - End *test iteration* 38 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,960 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,960 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 39 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,961 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,961 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169626 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,961 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,961 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169626 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,961 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,961 [INFO] SONOS.sonos.workflow.result - End *test iteration* 39 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,961 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,962 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 40 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,962 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,962 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169627 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,962 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,962 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169627 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,962 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,962 [INFO] SONOS.sonos.workflow.result - End *test iteration* 40 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,962 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,963 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 41 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,963 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,963 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169628 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,963 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,963 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169628 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,963 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,963 [INFO] SONOS.sonos.workflow.result - End *test iteration* 41 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,964 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,964 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 42 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,964 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,964 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169629 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,964 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,964 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169629 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,964 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,964 [INFO] SONOS.sonos.workflow.result - End *test iteration* 42 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,965 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,965 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 43 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,965 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,965 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169630 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,965 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,965 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169630 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,965 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,965 [INFO] SONOS.sonos.workflow.result - End *test iteration* 43 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,966 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,966 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 44 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,966 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,966 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169631 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,966 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,966 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169631 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,966 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,966 [INFO] SONOS.sonos.workflow.result - End *test iteration* 44 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,966 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,967 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 45 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,967 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,967 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169632 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,967 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,967 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169632 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,967 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,967 [INFO] SONOS.sonos.workflow.result - End *test iteration* 45 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,967 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,967 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 46 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,968 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,968 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169633 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,968 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,968 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169633 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,968 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,968 [INFO] SONOS.sonos.workflow.result - End *test iteration* 46 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,968 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,968 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 47 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,969 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,969 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169634 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,969 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,969 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169634 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,969 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,969 [INFO] SONOS.sonos.workflow.result - End *test iteration* 47 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,970 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,970 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 48 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,970 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,971 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169635 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,971 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,971 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169635 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,972 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,972 [INFO] SONOS.sonos.workflow.result - End *test iteration* 48 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,972 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,972 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 49 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,972 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,972 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169636 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,972 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,972 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169636 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,973 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,973 [INFO] SONOS.sonos.workflow.result - End *test iteration* 49 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,973 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,973 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 50 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,973 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,973 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169637 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,973 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,973 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169637 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,974 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,974 [INFO] SONOS.sonos.workflow.result - End *test iteration* 50 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,974 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,974 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 51 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,974 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,974 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169638 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,974 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,974 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169638 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,975 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,975 [INFO] SONOS.sonos.workflow.result - End *test iteration* 51 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,975 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,975 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 52 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,976 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,976 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169639 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,976 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,977 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169639 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,977 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,977 [INFO] SONOS.sonos.workflow.result - End *test iteration* 52 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,977 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,977 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 53 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,978 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,978 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169640 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,978 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,978 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169640 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,978 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,979 [INFO] SONOS.sonos.workflow.result - End *test iteration* 53 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,979 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,979 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 54 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,979 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,979 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169641 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,979 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,980 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169641 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,980 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,980 [INFO] SONOS.sonos.workflow.result - End *test iteration* 54 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,980 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,980 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 55 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,980 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,980 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169642 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,980 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,981 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169642 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,981 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,981 [INFO] SONOS.sonos.workflow.result - End *test iteration* 55 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,981 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,981 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 56 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,981 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,981 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169643 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,981 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,981 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169643 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,982 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,982 [INFO] SONOS.sonos.workflow.result - End *test iteration* 56 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,982 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,982 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 57 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,982 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,982 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169644 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,982 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,982 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169644 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,983 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,983 [INFO] SONOS.sonos.workflow.result - End *test iteration* 57 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,983 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,983 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 58 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,983 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,983 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169645 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,983 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,983 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169645 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,983 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,984 [INFO] SONOS.sonos.workflow.result - End *test iteration* 58 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,984 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,984 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 59 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,984 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,984 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169646 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,984 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,984 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169646 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,984 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,984 [INFO] SONOS.sonos.workflow.result - End *test iteration* 59 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,985 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,985 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 60 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,985 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,985 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169647 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,985 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,985 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169647 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,985 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,985 [INFO] SONOS.sonos.workflow.result - End *test iteration* 60 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,986 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,986 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 61 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,986 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,986 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169648 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,986 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,986 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169648 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,986 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,986 [INFO] SONOS.sonos.workflow.result - End *test iteration* 61 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,987 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,987 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 62 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,987 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,987 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169649 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,987 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,987 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169649 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,987 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,987 [INFO] SONOS.sonos.workflow.result - End *test iteration* 62 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,988 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,988 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 63 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,988 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,988 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169650 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,988 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,988 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169650 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,988 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,988 [INFO] SONOS.sonos.workflow.result - End *test iteration* 63 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,988 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,988 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 64 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,989 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,989 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169651 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,989 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,989 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169651 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,990 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,990 [INFO] SONOS.sonos.workflow.result - End *test iteration* 64 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,990 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,990 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 65 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,990 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,991 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169652 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,991 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,991 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169652 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,991 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,991 [INFO] SONOS.sonos.workflow.result - End *test iteration* 65 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,992 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,992 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 66 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,992 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,992 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169653 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,992 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,992 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169653 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,992 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,992 [INFO] SONOS.sonos.workflow.result - End *test iteration* 66 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,993 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,993 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 67 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,993 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,993 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169654 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,993 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,993 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169654 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,994 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,994 [INFO] SONOS.sonos.workflow.result - End *test iteration* 67 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,994 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,994 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 68 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,994 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,994 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169655 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,994 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,995 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169655 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,995 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,995 [INFO] SONOS.sonos.workflow.result - End *test iteration* 68 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,995 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,995 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 69 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,995 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,995 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169656 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,996 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,996 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169656 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,996 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,996 [INFO] SONOS.sonos.workflow.result - End *test iteration* 69 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,996 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,996 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 70 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,996 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,996 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169657 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,997 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,997 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169657 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,997 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,997 [INFO] SONOS.sonos.workflow.result - End *test iteration* 70 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,997 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,997 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 71 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,997 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,997 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169658 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,998 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,998 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169658 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,998 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,998 [INFO] SONOS.sonos.workflow.result - End *test iteration* 71 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,998 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,998 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 72 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,998 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,998 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169659 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:29,999 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:29,999 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169659 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:29,999 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,999 [INFO] SONOS.sonos.workflow.result - End *test iteration* 72 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:29,999 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:29,999 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 73 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:29,999 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:29,999 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169660 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,000 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,000 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169660 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,000 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,000 [INFO] SONOS.sonos.workflow.result - End *test iteration* 73 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,000 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,000 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 74 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,000 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,000 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169661 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,001 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,001 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169661 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,001 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,001 [INFO] SONOS.sonos.workflow.result - End *test iteration* 74 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,001 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,001 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 75 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,001 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,002 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169662 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,002 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,002 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169662 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,002 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,003 [INFO] SONOS.sonos.workflow.result - End *test iteration* 75 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,003 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,003 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 76 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,004 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,004 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169663 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,004 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,004 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169663 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,004 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,005 [INFO] SONOS.sonos.workflow.result - End *test iteration* 76 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,005 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,005 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 77 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,005 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,005 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169664 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,005 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,005 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169664 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,005 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,006 [INFO] SONOS.sonos.workflow.result - End *test iteration* 77 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,006 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,006 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 78 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,006 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,006 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169665 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,006 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,006 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169665 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,006 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,006 [INFO] SONOS.sonos.workflow.result - End *test iteration* 78 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,007 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,007 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 79 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,007 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,007 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169666 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,007 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,007 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169666 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,007 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,007 [INFO] SONOS.sonos.workflow.result - End *test iteration* 79 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,008 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,008 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 80 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,008 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,008 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169667 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,008 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,008 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169667 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,008 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,008 [INFO] SONOS.sonos.workflow.result - End *test iteration* 80 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,009 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,009 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 81 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,009 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,009 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169668 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,009 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,010 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169668 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,010 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,010 [INFO] SONOS.sonos.workflow.result - End *test iteration* 81 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,010 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,010 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 82 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,011 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,011 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169669 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,011 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,011 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169669 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,012 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,012 [INFO] SONOS.sonos.workflow.result - End *test iteration* 82 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,012 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,012 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 83 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,012 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,013 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169670 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,013 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,013 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169670 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,013 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,013 [INFO] SONOS.sonos.workflow.result - End *test iteration* 83 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,013 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,013 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 84 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,014 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,014 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169671 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,014 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,014 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169671 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,014 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,014 [INFO] SONOS.sonos.workflow.result - End *test iteration* 84 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,014 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,014 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 85 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,014 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,015 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169672 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,015 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,015 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169672 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,015 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,015 [INFO] SONOS.sonos.workflow.result - End *test iteration* 85 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,015 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,015 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 86 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,015 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,016 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169673 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,016 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,016 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169673 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,016 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,016 [INFO] SONOS.sonos.workflow.result - End *test iteration* 86 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,016 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,016 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 87 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,016 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,016 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169674 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,017 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,017 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169674 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,017 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,017 [INFO] SONOS.sonos.workflow.result - End *test iteration* 87 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,017 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,017 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 88 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,017 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,017 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169675 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,018 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,018 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169675 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,018 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,018 [INFO] SONOS.sonos.workflow.result - End *test iteration* 88 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,018 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,018 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 89 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,018 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,018 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169676 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,018 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,019 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169676 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,019 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,019 [INFO] SONOS.sonos.workflow.result - End *test iteration* 89 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,019 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,019 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 90 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,019 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,019 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169677 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,019 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,020 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169677 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,020 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,020 [INFO] SONOS.sonos.workflow.result - End *test iteration* 90 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,020 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,020 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 91 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,020 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,020 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169678 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,020 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,020 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169678 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,021 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,021 [INFO] SONOS.sonos.workflow.result - End *test iteration* 91 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,021 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,021 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 92 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,021 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,021 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169679 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,021 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,021 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169679 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,022 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,022 [INFO] SONOS.sonos.workflow.result - End *test iteration* 92 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,022 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,022 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 93 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,022 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,022 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169680 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,022 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,022 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169680 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,023 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,023 [INFO] SONOS.sonos.workflow.result - End *test iteration* 93 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,023 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,023 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 94 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,023 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,023 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169681 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,024 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,024 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169681 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,024 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,024 [INFO] SONOS.sonos.workflow.result - End *test iteration* 94 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,024 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,024 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 95 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,024 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,024 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169682 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,025 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,025 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169682 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,025 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,025 [INFO] SONOS.sonos.workflow.result - End *test iteration* 95 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,025 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,025 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 96 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,026 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,026 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169683 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,026 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,026 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169683 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,026 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,026 [INFO] SONOS.sonos.workflow.result - End *test iteration* 96 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,027 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,027 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 97 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,027 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,027 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169684 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,027 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,027 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169684 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,027 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,028 [INFO] SONOS.sonos.workflow.result - End *test iteration* 97 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,028 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,028 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 98 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,028 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,028 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169685 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,028 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,029 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169685 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,029 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,029 [INFO] SONOS.sonos.workflow.result - End *test iteration* 98 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,029 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,029 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 99 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,029 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,029 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169686 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,030 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,030 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169686 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,030 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,030 [INFO] SONOS.sonos.workflow.result - End *test iteration* 99 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,030 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,030 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 100 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,030 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,031 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169687 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,031 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,031 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169687 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,031 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,031 [INFO] SONOS.sonos.workflow.result - End *test iteration* 100 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,032 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,032 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 101 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,032 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,032 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169688 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,032 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,032 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169688 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,033 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,033 [INFO] SONOS.sonos.workflow.result - End *test iteration* 101 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,033 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,033 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 102 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,033 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,033 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169689 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,034 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,034 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169689 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,034 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,034 [INFO] SONOS.sonos.workflow.result - End *test iteration* 102 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,034 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,034 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 103 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,034 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,035 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169690 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,035 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,035 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169690 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,035 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,035 [INFO] SONOS.sonos.workflow.result - End *test iteration* 103 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,036 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,036 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 104 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,036 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,036 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169691 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,037 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,037 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169691 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,038 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,038 [INFO] SONOS.sonos.workflow.result - End *test iteration* 104 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,038 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,038 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 105 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,038 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,039 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169692 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,039 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,039 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169692 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,039 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,039 [INFO] SONOS.sonos.workflow.result - End *test iteration* 105 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,039 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,039 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 106 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,039 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,040 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169693 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,040 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,040 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169693 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,040 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,040 [INFO] SONOS.sonos.workflow.result - End *test iteration* 106 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,040 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,040 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 107 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,041 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,041 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169694 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,041 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,041 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169694 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,041 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,041 [INFO] SONOS.sonos.workflow.result - End *test iteration* 107 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,042 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,042 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 108 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,042 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,042 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169695 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,043 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,043 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169695 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,044 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,044 [INFO] SONOS.sonos.workflow.result - End *test iteration* 108 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,045 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,045 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 109 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,045 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,045 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169696 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,046 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,046 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169696 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,046 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,046 [INFO] SONOS.sonos.workflow.result - End *test iteration* 109 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,047 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,047 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 110 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,047 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,047 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169697 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,047 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,048 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169697 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,048 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,048 [INFO] SONOS.sonos.workflow.result - End *test iteration* 110 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,048 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,048 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 111 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,049 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,049 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169698 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,049 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,049 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169698 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,049 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,049 [INFO] SONOS.sonos.workflow.result - End *test iteration* 111 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,049 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,049 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 112 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,050 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,050 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169699 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,050 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,050 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169699 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,050 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,050 [INFO] SONOS.sonos.workflow.result - End *test iteration* 112 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,051 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,051 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 113 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,051 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,051 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169700 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,051 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,051 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169700 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,051 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,052 [INFO] SONOS.sonos.workflow.result - End *test iteration* 113 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,052 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,052 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 114 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,052 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,053 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169701 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,053 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,053 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169701 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,053 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,053 [INFO] SONOS.sonos.workflow.result - End *test iteration* 114 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,054 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,054 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 115 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,054 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,054 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169702 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:30,054 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:30,055 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169702 Progvalidation test_combinatorial_browse_results_pagination_226630612844551532715398224208377833484
2018-03-02 19:00:30,055 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,055 [INFO] SONOS.sonos.workflow.result - End *test iteration* 115 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,055 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,056 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 116 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,056 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:30,056 [INFO] SONOS.sonos.workflow.result - End *test iteration* 116 of test case test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:30,056 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_browse_results_pagination at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:30,056 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:30,057 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:30,057 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:30,057 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:30,057 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 19:00:30,059 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:30,060 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:33,442 [DEBUG] SONOS.suds.client - waited 3.382 (seconds) on server reply
2018-03-02 19:00:33,463 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:33,655 [PASS] SONOS.sonos.workflow.fixture.Progvalidation - getMetdata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 3.382 (seconds)
 } is not None)
2018-03-02 19:00:33,655 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,655 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169704 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,656 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,656 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169704 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,656 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,656 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,656 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,656 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,656 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,657 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169705 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,657 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,657 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169705 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,657 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,657 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,657 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,657 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,657 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,658 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169706 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,658 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,658 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169706 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,658 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,658 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,658 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,658 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,658 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,658 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169707 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,659 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,659 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169707 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,659 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,659 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,659 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,659 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,659 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,659 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169708 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,660 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,660 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169708 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,660 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,660 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,660 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,660 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,660 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,660 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169709 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,660 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,661 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169709 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,661 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,661 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,661 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,661 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,661 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,661 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169710 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,661 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,661 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169710 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,662 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,662 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,662 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,662 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,662 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,662 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169711 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,663 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,663 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169711 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,663 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,663 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,664 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,664 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,664 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,664 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169712 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,664 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,664 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169712 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,664 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,664 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,665 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,665 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,665 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,665 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169713 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,665 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,665 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169713 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,666 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,666 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,666 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,666 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,666 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,666 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169714 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,666 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,666 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169714 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,666 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,667 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,667 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,667 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 11 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,667 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,667 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169715 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,667 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,667 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169715 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,667 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,667 [INFO] SONOS.sonos.workflow.result - End *test iteration* 11 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,668 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,668 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 12 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,668 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,668 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169716 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,668 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,668 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169716 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,668 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,668 [INFO] SONOS.sonos.workflow.result - End *test iteration* 12 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,669 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,669 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 13 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,669 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,669 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169717 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,669 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,669 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169717 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,669 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,669 [INFO] SONOS.sonos.workflow.result - End *test iteration* 13 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,670 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,670 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 14 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,670 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,670 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169718 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,670 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,670 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169718 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,670 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,670 [INFO] SONOS.sonos.workflow.result - End *test iteration* 14 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,671 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,671 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 15 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,671 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,671 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169719 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,672 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,672 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169719 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,672 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,672 [INFO] SONOS.sonos.workflow.result - End *test iteration* 15 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,673 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,673 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 16 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,673 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,674 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169720 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,674 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,674 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169720 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,674 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,674 [INFO] SONOS.sonos.workflow.result - End *test iteration* 16 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,675 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,675 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 17 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,675 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,675 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169721 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,675 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,675 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169721 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,675 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,675 [INFO] SONOS.sonos.workflow.result - End *test iteration* 17 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,676 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,676 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 18 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,676 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,676 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169722 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,676 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,676 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169722 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,676 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,676 [INFO] SONOS.sonos.workflow.result - End *test iteration* 18 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,677 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,677 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 19 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,677 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,677 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169723 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,677 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,677 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169723 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,677 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,677 [INFO] SONOS.sonos.workflow.result - End *test iteration* 19 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,677 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,678 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 20 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,678 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,678 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169724 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,678 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,678 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169724 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,678 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,678 [INFO] SONOS.sonos.workflow.result - End *test iteration* 20 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,679 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,679 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 21 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,679 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,679 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169725 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,680 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,680 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169725 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,680 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,680 [INFO] SONOS.sonos.workflow.result - End *test iteration* 21 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,680 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,680 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 22 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,680 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,680 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169726 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,681 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,681 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169726 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,681 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,681 [INFO] SONOS.sonos.workflow.result - End *test iteration* 22 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,682 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,682 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 23 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,682 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,682 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169727 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,682 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,683 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169727 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,683 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,683 [INFO] SONOS.sonos.workflow.result - End *test iteration* 23 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,683 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,683 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 24 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,684 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,684 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169728 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,684 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,684 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169728 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,684 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,684 [INFO] SONOS.sonos.workflow.result - End *test iteration* 24 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,685 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,685 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 25 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,685 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,685 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169729 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,685 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,685 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169729 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,685 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,685 [INFO] SONOS.sonos.workflow.result - End *test iteration* 25 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,686 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,686 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 26 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,686 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,686 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169730 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,686 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,686 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169730 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,686 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,686 [INFO] SONOS.sonos.workflow.result - End *test iteration* 26 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,687 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,687 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 27 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,687 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,687 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169731 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,688 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,688 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169731 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,688 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,688 [INFO] SONOS.sonos.workflow.result - End *test iteration* 27 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,688 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,688 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 28 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,688 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,688 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169732 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,689 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,689 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169732 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,689 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,689 [INFO] SONOS.sonos.workflow.result - End *test iteration* 28 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,689 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,689 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 29 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,689 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,689 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169733 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,689 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,690 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169733 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,690 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,690 [INFO] SONOS.sonos.workflow.result - End *test iteration* 29 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,690 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,690 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 30 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,690 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,690 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169734 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,690 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,691 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169734 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,691 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,691 [INFO] SONOS.sonos.workflow.result - End *test iteration* 30 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,691 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,691 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 31 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,691 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,691 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169735 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,691 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,691 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169735 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,692 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,692 [INFO] SONOS.sonos.workflow.result - End *test iteration* 31 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,692 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,692 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 32 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,692 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,692 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169736 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,692 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,692 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169736 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,693 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,693 [INFO] SONOS.sonos.workflow.result - End *test iteration* 32 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,693 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,693 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 33 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,693 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,693 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169737 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,693 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,693 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169737 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,693 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,694 [INFO] SONOS.sonos.workflow.result - End *test iteration* 33 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,694 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,694 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 34 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,694 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,694 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169738 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,694 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,694 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169738 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,694 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,695 [INFO] SONOS.sonos.workflow.result - End *test iteration* 34 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,695 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,695 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 35 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,695 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,696 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169739 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,696 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,696 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169739 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,696 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,696 [INFO] SONOS.sonos.workflow.result - End *test iteration* 35 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,696 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,696 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 36 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,697 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,697 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169740 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,697 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,697 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169740 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,697 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,697 [INFO] SONOS.sonos.workflow.result - End *test iteration* 36 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,697 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,697 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 37 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,698 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,698 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169741 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,698 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,698 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169741 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,698 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,698 [INFO] SONOS.sonos.workflow.result - End *test iteration* 37 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,698 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,698 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 38 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,699 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,699 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169742 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,699 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,699 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169742 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,699 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,699 [INFO] SONOS.sonos.workflow.result - End *test iteration* 38 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,699 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,700 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 39 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,700 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,700 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169743 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,700 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,700 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169743 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,700 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,700 [INFO] SONOS.sonos.workflow.result - End *test iteration* 39 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,700 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,700 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 40 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,701 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,701 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169744 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,701 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,701 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169744 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,701 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,701 [INFO] SONOS.sonos.workflow.result - End *test iteration* 40 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,701 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,701 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 41 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,702 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,702 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169745 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,702 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,702 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169745 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,702 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,702 [INFO] SONOS.sonos.workflow.result - End *test iteration* 41 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,702 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,702 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 42 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,703 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,703 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169746 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,703 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,703 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169746 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,703 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,704 [INFO] SONOS.sonos.workflow.result - End *test iteration* 42 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,704 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,704 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 43 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,704 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,704 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169747 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,704 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,704 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169747 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,705 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,705 [INFO] SONOS.sonos.workflow.result - End *test iteration* 43 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,705 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,705 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 44 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,705 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,705 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169748 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,706 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,706 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169748 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,707 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,707 [INFO] SONOS.sonos.workflow.result - End *test iteration* 44 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,707 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,707 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 45 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,707 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,708 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169749 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,708 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,708 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169749 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,708 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,708 [INFO] SONOS.sonos.workflow.result - End *test iteration* 45 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,708 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,708 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 46 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,708 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,709 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169750 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,709 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,709 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169750 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,709 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,709 [INFO] SONOS.sonos.workflow.result - End *test iteration* 46 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,709 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,709 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 47 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,709 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,710 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169751 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,710 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,710 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169751 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,710 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,710 [INFO] SONOS.sonos.workflow.result - End *test iteration* 47 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,710 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,710 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 48 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,710 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,710 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169752 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,711 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,711 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169752 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,711 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,711 [INFO] SONOS.sonos.workflow.result - End *test iteration* 48 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,712 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,712 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 49 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,712 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,712 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169753 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,712 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,712 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169753 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,712 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,713 [INFO] SONOS.sonos.workflow.result - End *test iteration* 49 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,713 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,713 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 50 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,713 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,713 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169754 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,713 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,713 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169754 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,714 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,714 [INFO] SONOS.sonos.workflow.result - End *test iteration* 50 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,714 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,714 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 51 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,715 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,715 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169755 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,715 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,716 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169755 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,716 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,716 [INFO] SONOS.sonos.workflow.result - End *test iteration* 51 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,716 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,716 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 52 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,717 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,717 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169756 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,717 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,717 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169756 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,717 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,717 [INFO] SONOS.sonos.workflow.result - End *test iteration* 52 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,718 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,718 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 53 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,718 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,718 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169757 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,718 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,718 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169757 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,719 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,719 [INFO] SONOS.sonos.workflow.result - End *test iteration* 53 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,719 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,719 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 54 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,719 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,720 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169758 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,720 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,720 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169758 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,720 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,720 [INFO] SONOS.sonos.workflow.result - End *test iteration* 54 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,720 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,720 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 55 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,721 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,721 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169759 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,721 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,721 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169759 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,721 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,721 [INFO] SONOS.sonos.workflow.result - End *test iteration* 55 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,721 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,722 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 56 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,722 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,722 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169760 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,722 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,722 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169760 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,722 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,722 [INFO] SONOS.sonos.workflow.result - End *test iteration* 56 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,722 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,723 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 57 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,723 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,723 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169761 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,723 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,723 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169761 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,723 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,723 [INFO] SONOS.sonos.workflow.result - End *test iteration* 57 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,723 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,724 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 58 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,724 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,724 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169762 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,724 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,724 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169762 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,724 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,724 [INFO] SONOS.sonos.workflow.result - End *test iteration* 58 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,725 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,725 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 59 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,725 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,725 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169763 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,725 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,725 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169763 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,725 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,725 [INFO] SONOS.sonos.workflow.result - End *test iteration* 59 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,726 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,726 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 60 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,726 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,726 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169764 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,726 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,726 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169764 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,726 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,726 [INFO] SONOS.sonos.workflow.result - End *test iteration* 60 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,727 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,727 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 61 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,727 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,727 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169765 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,728 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,728 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169765 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,728 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,728 [INFO] SONOS.sonos.workflow.result - End *test iteration* 61 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,728 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,728 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 62 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,728 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,729 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169766 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,729 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,729 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169766 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,729 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,729 [INFO] SONOS.sonos.workflow.result - End *test iteration* 62 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,729 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,729 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 63 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,729 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,730 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169767 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,730 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,730 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169767 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,730 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,730 [INFO] SONOS.sonos.workflow.result - End *test iteration* 63 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,730 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,730 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 64 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,730 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,730 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169768 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,731 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,731 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169768 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,731 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,731 [INFO] SONOS.sonos.workflow.result - End *test iteration* 64 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,731 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,731 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 65 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,731 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,731 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169769 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,732 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,732 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169769 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,732 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,732 [INFO] SONOS.sonos.workflow.result - End *test iteration* 65 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,732 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,732 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 66 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,732 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,733 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169770 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,733 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,733 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169770 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,733 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,733 [INFO] SONOS.sonos.workflow.result - End *test iteration* 66 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,734 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,734 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 67 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,734 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,734 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169771 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,735 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,735 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169771 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,735 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,735 [INFO] SONOS.sonos.workflow.result - End *test iteration* 67 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,736 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,736 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 68 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,736 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,736 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169772 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,736 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,736 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169772 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,736 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,737 [INFO] SONOS.sonos.workflow.result - End *test iteration* 68 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,737 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,737 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 69 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,737 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,737 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169773 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,737 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,737 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169773 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,737 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,738 [INFO] SONOS.sonos.workflow.result - End *test iteration* 69 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,738 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,738 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 70 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,738 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,738 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169774 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,739 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,739 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169774 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,739 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,739 [INFO] SONOS.sonos.workflow.result - End *test iteration* 70 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,739 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,739 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 71 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,740 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,740 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169775 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,740 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,740 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169775 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,740 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,740 [INFO] SONOS.sonos.workflow.result - End *test iteration* 71 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,741 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,741 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 72 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,741 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,741 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169776 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,741 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,741 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169776 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,741 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,741 [INFO] SONOS.sonos.workflow.result - End *test iteration* 72 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,742 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,742 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 73 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,742 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,742 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169777 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,742 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,742 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169777 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,742 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,742 [INFO] SONOS.sonos.workflow.result - End *test iteration* 73 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,743 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,743 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 74 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,743 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,743 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169778 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,743 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,743 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169778 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,743 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,743 [INFO] SONOS.sonos.workflow.result - End *test iteration* 74 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,744 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,744 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 75 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,744 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,744 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169779 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,744 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,744 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169779 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,744 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,744 [INFO] SONOS.sonos.workflow.result - End *test iteration* 75 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,745 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,745 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 76 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,745 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,745 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169780 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,745 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,745 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169780 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,745 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,745 [INFO] SONOS.sonos.workflow.result - End *test iteration* 76 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,746 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,746 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 77 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,746 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,747 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169781 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,747 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,747 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169781 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,748 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,748 [INFO] SONOS.sonos.workflow.result - End *test iteration* 77 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,748 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,748 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 78 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,748 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,748 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169782 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,749 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,749 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169782 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,749 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,749 [INFO] SONOS.sonos.workflow.result - End *test iteration* 78 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,749 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,749 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 79 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,749 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,750 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169783 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,750 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,750 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169783 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,750 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,750 [INFO] SONOS.sonos.workflow.result - End *test iteration* 79 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,750 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,750 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 80 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,751 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,751 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169784 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,751 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,751 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169784 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,752 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,752 [INFO] SONOS.sonos.workflow.result - End *test iteration* 80 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,752 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,753 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 81 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,753 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,753 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169785 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,753 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,753 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169785 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,754 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,754 [INFO] SONOS.sonos.workflow.result - End *test iteration* 81 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,754 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,754 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 82 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,754 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,755 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169786 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,755 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,755 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169786 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,755 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,755 [INFO] SONOS.sonos.workflow.result - End *test iteration* 82 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,756 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,756 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 83 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,756 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,756 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169787 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,756 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,756 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169787 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,756 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,757 [INFO] SONOS.sonos.workflow.result - End *test iteration* 83 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,757 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,757 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 84 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,757 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,757 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169788 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,757 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,758 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169788 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,758 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,758 [INFO] SONOS.sonos.workflow.result - End *test iteration* 84 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,758 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,758 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 85 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,759 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,759 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169789 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,759 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,759 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169789 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,760 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,760 [INFO] SONOS.sonos.workflow.result - End *test iteration* 85 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,760 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,760 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 86 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,760 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,761 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169790 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,761 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,761 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169790 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,761 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,761 [INFO] SONOS.sonos.workflow.result - End *test iteration* 86 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,762 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,762 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 87 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,762 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,762 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169791 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,763 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,763 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169791 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,763 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,763 [INFO] SONOS.sonos.workflow.result - End *test iteration* 87 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,763 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,764 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 88 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,764 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,764 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169792 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,764 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,764 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169792 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,765 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,765 [INFO] SONOS.sonos.workflow.result - End *test iteration* 88 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,765 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,765 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 89 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,765 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,765 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169793 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,766 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,766 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169793 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,766 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,766 [INFO] SONOS.sonos.workflow.result - End *test iteration* 89 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,767 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,767 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 90 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,767 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,767 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169794 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,767 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,768 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169794 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,768 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,768 [INFO] SONOS.sonos.workflow.result - End *test iteration* 90 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,769 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,769 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 91 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,769 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,769 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169795 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,770 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,770 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169795 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,770 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,770 [INFO] SONOS.sonos.workflow.result - End *test iteration* 91 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,770 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,771 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 92 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,771 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,771 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169796 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,771 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,771 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169796 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,772 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,772 [INFO] SONOS.sonos.workflow.result - End *test iteration* 92 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,772 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,772 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 93 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,772 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,772 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169797 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,773 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,773 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169797 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,773 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,773 [INFO] SONOS.sonos.workflow.result - End *test iteration* 93 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,773 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,773 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 94 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,773 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,774 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169798 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,774 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,774 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169798 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,774 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,774 [INFO] SONOS.sonos.workflow.result - End *test iteration* 94 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,774 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,774 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 95 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,774 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,775 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169799 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,775 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,775 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169799 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,775 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,775 [INFO] SONOS.sonos.workflow.result - End *test iteration* 95 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,776 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,776 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 96 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,776 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,776 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169800 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,777 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,777 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169800 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,777 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,777 [INFO] SONOS.sonos.workflow.result - End *test iteration* 96 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,777 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,777 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 97 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,777 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,778 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169801 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,778 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,778 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169801 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,778 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,778 [INFO] SONOS.sonos.workflow.result - End *test iteration* 97 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,778 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,778 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 98 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,778 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,779 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169802 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,779 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,779 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169802 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,779 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,779 [INFO] SONOS.sonos.workflow.result - End *test iteration* 98 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,779 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,779 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 99 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,779 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,780 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169803 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,780 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,780 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169803 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,780 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,780 [INFO] SONOS.sonos.workflow.result - End *test iteration* 99 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,780 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,780 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 100 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,781 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,781 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169804 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,781 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,781 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169804 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,781 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,781 [INFO] SONOS.sonos.workflow.result - End *test iteration* 100 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,782 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,782 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 101 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,782 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,782 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169805 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,782 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,782 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169805 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,782 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,782 [INFO] SONOS.sonos.workflow.result - End *test iteration* 101 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,783 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,783 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 102 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,783 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,783 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169806 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,783 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,783 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169806 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,784 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,784 [INFO] SONOS.sonos.workflow.result - End *test iteration* 102 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,784 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,784 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 103 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,785 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,785 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169807 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,785 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,785 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169807 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,785 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,785 [INFO] SONOS.sonos.workflow.result - End *test iteration* 103 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,786 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,786 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 104 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,786 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,786 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169808 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,786 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,787 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169808 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,787 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,787 [INFO] SONOS.sonos.workflow.result - End *test iteration* 104 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,787 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,787 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 105 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,787 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,788 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169809 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,788 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,788 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169809 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,788 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,788 [INFO] SONOS.sonos.workflow.result - End *test iteration* 105 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,789 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,789 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 106 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,789 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,789 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169810 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,789 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,789 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169810 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,790 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,790 [INFO] SONOS.sonos.workflow.result - End *test iteration* 106 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,790 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,790 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 107 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,790 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,790 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169811 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,790 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,790 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169811 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,791 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,791 [INFO] SONOS.sonos.workflow.result - End *test iteration* 107 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,791 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,791 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 108 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,791 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,791 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169812 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,792 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,792 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169812 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,792 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,792 [INFO] SONOS.sonos.workflow.result - End *test iteration* 108 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,793 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,793 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 109 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,793 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,793 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169813 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,793 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,793 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169813 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,793 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,794 [INFO] SONOS.sonos.workflow.result - End *test iteration* 109 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,794 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,794 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 110 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,794 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,794 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169814 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,795 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,795 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169814 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,795 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,795 [INFO] SONOS.sonos.workflow.result - End *test iteration* 110 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,795 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,795 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 111 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,795 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,795 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169815 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,796 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,796 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169815 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,796 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,796 [INFO] SONOS.sonos.workflow.result - End *test iteration* 111 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,796 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,796 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 112 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,796 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,796 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169816 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,796 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,797 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169816 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,797 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,797 [INFO] SONOS.sonos.workflow.result - End *test iteration* 112 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,797 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,797 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 113 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,797 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,797 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169817 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,797 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,797 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169817 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,798 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,798 [INFO] SONOS.sonos.workflow.result - End *test iteration* 113 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,798 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,798 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 114 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,798 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,798 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169818 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,798 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,798 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169818 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,798 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,799 [INFO] SONOS.sonos.workflow.result - End *test iteration* 114 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,799 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,799 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 115 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,799 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,799 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - Test Case: 169819 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:33,800 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - Service must provide a valid program ID ([Test Content]:program in the config file) for this test to run.
2018-03-02 19:00:33,800 [SKIP] SONOS.sonos.workflow.fixture.Progvalidation - 169819 Progvalidation test_combinatorial_test_program_radio_226630612844551532715398224208377833484
2018-03-02 19:00:33,800 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,800 [INFO] SONOS.sonos.workflow.result - End *test iteration* 115 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,800 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,800 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 116 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,800 [INFO] SONOS.sonos.workflow.fixture.Progvalidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:33,801 [INFO] SONOS.sonos.workflow.result - End *test iteration* 116 of test case test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:33,801 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_test_program_radio at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:33,801 [INFO] SONOS.sonos.workflow.result - End *test fixture* Progvalidation at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:33,801 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:00:33,801 [INFO] SONOS.sonos.workflow.result - Start *test fixture* StreamValidation at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:33,801 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:33,801 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:33,801 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:33,802 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:33,802 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', 0, 10000, None)
2018-03-02 19:00:33,803 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:33,804 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:35,609 [DEBUG] SONOS.suds.client - waited 1.805 (seconds) on server reply
2018-03-02 19:00:35,628 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:35,799 [PASS] SONOS.sonos.workflow.fixture.StreamValidation - getMetdata should return something other than None. ((mediaList){
   Items[] = 
      (mediaCollection){
         id = "Artist:dead-and-co"
         itemType = "artist"
         displayType = "list"
         title = "Dead and Company"
         summary = "Dead and Company"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grateful-dead"
         itemType = "artist"
         displayType = "list"
         title = "Grateful Dead"
         summary = "Grateful Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jrad"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo's Almost Dead"
         summary = "Joe Russo's Almost Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lotus"
         itemType = "artist"
         displayType = "list"
         title = "Lotus"
         summary = "Lotus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:oar"
         itemType = "artist"
         displayType = "list"
         title = "O.A.R."
         summary = "O.A.R."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phish"
         itemType = "artist"
         displayType = "list"
         title = "Phish"
         summary = "Phish"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:akron-family"
         itemType = "artist"
         displayType = "list"
         title = "Akron/Family"
         summary = "Akron/Family"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:american-babies"
         itemType = "artist"
         displayType = "list"
         title = "American Babies"
         summary = "American Babies"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:andrew-bird"
         itemType = "artist"
         displayType = "list"
         title = "Andrew Bird"
         summary = "Andrew Bird"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:animal-collective"
         itemType = "artist"
         displayType = "list"
         title = "Animal Collective"
         summary = "Animal Collective"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aru"
         itemType = "artist"
         displayType = "list"
         title = "Aquarium Rescue Unit"
         summary = "Aquarium Rescue Unit"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:aqueous"
         itemType = "artist"
         displayType = "list"
         title = "Aqueous"
         summary = "Aqueous"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:assembly-of-dust"
         itemType = "artist"
         displayType = "list"
         title = "Assembly of Dust"
         summary = "Assembly of Dust"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bela-fleck"
         itemType = "artist"
         displayType = "list"
         title = "Bela Fleck and the Flecktones"
         summary = "Bela Fleck and the Flecktones"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:duo"
         itemType = "artist"
         displayType = "list"
         title = "Benevento Russo Duo"
         summary = "Benevento Russo Duo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ben-kweller"
         itemType = "artist"
         displayType = "list"
         title = "Ben Kweller"
         summary = "Ben Kweller"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bernie-worrell"
         itemType = "artist"
         displayType = "list"
         title = "Bernie Worrell Orchestra"
         summary = "Bernie Worrell Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:billy-strings"
         itemType = "artist"
         displayType = "list"
         title = "Billy Strings"
         summary = "Billy Strings"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:blues-traveler"
         itemType = "artist"
         displayType = "list"
         title = "Blues Traveler"
         summary = "Blues Traveler"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:bob-weir"
         itemType = "artist"
         displayType = "list"
         title = "Bob Weir"
         summary = "Bob Weir"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:brothers-past"
         itemType = "artist"
         displayType = "list"
         title = "Brothers Past"
         summary = "Brothers Past"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:cabinet"
         itemType = "artist"
         displayType = "list"
         title = "Cabinet"
         summary = "Cabinet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:club-d-elf"
         itemType = "artist"
         displayType = "list"
         title = "Club d'Elf"
         summary = "Club d'Elf"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dark-star-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Dark Star Orchestra"
         summary = "Dark Star Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:disco-biscuits"
         itemType = "artist"
         displayType = "list"
         title = "Disco Biscuits"
         summary = "Disco Biscuits"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dispatch"
         itemType = "artist"
         displayType = "list"
         title = "Dispatch"
         summary = "Dispatch"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:donna-the-buffalo"
         itemType = "artist"
         displayType = "list"
         title = "Donna the Buffalo"
         summary = "Donna the Buffalo"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:dopapod"
         itemType = "artist"
         displayType = "list"
         title = "Dopapod"
         summary = "Dopapod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:drive-by-truckers"
         itemType = "artist"
         displayType = "list"
         title = "Drive-By Truckers"
         summary = "Drive-By Truckers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:egi"
         itemType = "artist"
         displayType = "list"
         title = "EGi"
         summary = "EGi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:elliott-smith"
         itemType = "artist"
         displayType = "list"
         title = "Elliott Smith"
         summary = "Elliott Smith"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:everyone-orchestra"
         itemType = "artist"
         displayType = "list"
         title = "Everyone Orchestra"
         summary = "Everyone Orchestra"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:formula-5"
         itemType = "artist"
         displayType = "list"
         title = "Formula 5"
         summary = "Formula 5"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fruition"
         itemType = "artist"
         displayType = "list"
         title = "Fruition"
         summary = "Fruition"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:fugazi"
         itemType = "artist"
         displayType = "list"
         title = "Fugazi"
         summary = "Fugazi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:furthur"
         itemType = "artist"
         displayType = "list"
         title = "Furthur"
         summary = "Furthur"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:garage-a-trois"
         itemType = "artist"
         displayType = "list"
         title = "Garage A Trois"
         summary = "Garage A Trois"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-love"
         itemType = "artist"
         displayType = "list"
         title = "G. Love and Special Sauce"
         summary = "G. Love and Special Sauce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:g-nome-project"
         itemType = "artist"
         displayType = "list"
         title = "G-Nome Project"
         summary = "G-Nome Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:godspeed-you-black-emperor"
         itemType = "artist"
         displayType = "list"
         title = "Godspeed You Black Emperor!"
         summary = "Godspeed You Black Emperor!"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:god-street-wine"
         itemType = "artist"
         displayType = "list"
         title = "God Street Wine"
         summary = "God Street Wine"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:grace-potter"
         itemType = "artist"
         displayType = "list"
         title = "Grace Potter"
         summary = "Grace Potter"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:greensky-bluegrass"
         itemType = "artist"
         displayType = "list"
         title = "Greensky Bluegrass"
         summary = "Greensky Bluegrass"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:guster"
         itemType = "artist"
         displayType = "list"
         title = "Guster"
         summary = "Guster"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:holly-bowling"
         itemType = "artist"
         displayType = "list"
         title = "Holly Bowling"
         summary = "Holly Bowling"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:stringdusters"
         itemType = "artist"
         displayType = "list"
         title = "Infamous Stringdusters"
         summary = "Infamous Stringdusters"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jack-johnson"
         itemType = "artist"
         displayType = "list"
         title = "Jack Johnson"
         summary = "Jack Johnson"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jazz-mandolin-project"
         itemType = "artist"
         displayType = "list"
         title = "Jazz Mandolin Project"
         summary = "Jazz Mandolin Project"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jerry-joseph"
         itemType = "artist"
         displayType = "list"
         title = "Jerry Joseph and the Jackmormons"
         summary = "Jerry Joseph and the Jackmormons"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:joe-russo-presents-hooteroll-plus"
         itemType = "artist"
         displayType = "list"
         title = "Joe Russo Presents: Hooteroll? + Plus"
         summary = "Joe Russo Presents: Hooteroll? + Plus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-kadlecik"
         itemType = "artist"
         displayType = "list"
         title = "John Kadlecik"
         summary = "John Kadlecik"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:john-popper"
         itemType = "artist"
         displayType = "list"
         title = "John Popper"
         summary = "John Popper"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:keller-williams"
         itemType = "artist"
         displayType = "list"
         title = "Keller Williams"
         summary = "Keller Williams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kitchen-dwellers"
         itemType = "artist"
         displayType = "list"
         title = "Kitchen Dwellers"
         summary = "Kitchen Dwellers"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kung-fu"
         itemType = "artist"
         displayType = "list"
         title = "Kung Fu"
         summary = "Kung Fu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:kvhw"
         itemType = "artist"
         displayType = "list"
         title = "KVHW"
         summary = "KVHW"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:leftover-salmon"
         itemType = "artist"
         displayType = "list"
         title = "Leftover Salmon"
         summary = "Leftover Salmon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:lettuce"
         itemType = "artist"
         displayType = "list"
         title = "Lettuce"
         summary = "Lettuce"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:little-feat"
         itemType = "artist"
         displayType = "list"
         title = "Little Feat"
         summary = "Little Feat"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:marco"
         itemType = "artist"
         displayType = "list"
         title = "Marco Benevento"
         summary = "Marco Benevento"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matisyahu"
         itemType = "artist"
         displayType = "list"
         title = "Matisyahu"
         summary = "Matisyahu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:matt-pond-pa"
         itemType = "artist"
         displayType = "list"
         title = "Matt Pond PA"
         summary = "Matt Pond PA"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:max-creek"
         itemType = "artist"
         displayType = "list"
         title = "Max Creek"
         summary = "Max Creek"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moe"
         itemType = "artist"
         displayType = "list"
         title = "moe."
         summary = "moe."
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mogwai"
         itemType = "artist"
         displayType = "list"
         title = "Mogwai"
         summary = "Mogwai"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:moon-taxi"
         itemType = "artist"
         displayType = "list"
         title = "Moon Taxi"
         summary = "Moon Taxi"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:mmj"
         itemType = "artist"
         displayType = "list"
         title = "My Morning Jacket"
         summary = "My Morning Jacket"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:nathan-moore"
         itemType = "artist"
         displayType = "list"
         title = "Nathan Moore"
         summary = "Nathan Moore"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:percy-hill"
         itemType = "artist"
         displayType = "list"
         title = "Percy Hill"
         summary = "Percy Hill"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:perpetual-groove"
         itemType = "artist"
         displayType = "list"
         title = "Perpetual Groove"
         summary = "Perpetual Groove"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:phil-lesh"
         itemType = "artist"
         displayType = "list"
         title = "Phil Lesh and Friends"
         summary = "Phil Lesh and Friends"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:pigeons-playing-ping-pong"
         itemType = "artist"
         displayType = "list"
         title = "Pigeons Playing Ping Pong"
         summary = "Pigeons Playing Ping Pong"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:railroad-earth"
         itemType = "artist"
         displayType = "list"
         title = "Railroad Earth"
         summary = "Railroad Earth"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:raq"
         itemType = "artist"
         displayType = "list"
         title = "Raq"
         summary = "Raq"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ratdog"
         itemType = "artist"
         displayType = "list"
         title = "Ratdog"
         summary = "Ratdog"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ryan-adams"
         itemType = "artist"
         displayType = "list"
         title = "Ryan Adams"
         summary = "Ryan Adams"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:scott-metzger"
         itemType = "artist"
         displayType = "list"
         title = "Scott Metzger"
         summary = "Scott Metzger"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:shafty"
         itemType = "artist"
         displayType = "list"
         title = "Shafty"
         summary = "Shafty"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:smashing-pumpkins"
         itemType = "artist"
         displayType = "list"
         title = "Smashing Pumpkins"
         summary = "Smashing Pumpkins"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sts9"
         itemType = "artist"
         displayType = "list"
         title = "Sound Tribe Sector 9"
         summary = "Sound Tribe Sector 9"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spafford"
         itemType = "artist"
         displayType = "list"
         title = "Spafford"
         summary = "Spafford"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:spoon"
         itemType = "artist"
         displayType = "list"
         title = "Spoon"
         summary = "Spoon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock"
         summary = "Steve Kimock"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:steve-kimock-band"
         itemType = "artist"
         displayType = "list"
         title = "Steve Kimock Band"
         summary = "Steve Kimock Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:strangefolk"
         itemType = "artist"
         displayType = "list"
         title = "Strangefolk"
         summary = "Strangefolk"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:sci"
         itemType = "artist"
         displayType = "list"
         title = "String Cheese Incident"
         summary = "String Cheese Incident"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:surprise-me-mr-davis"
         itemType = "artist"
         displayType = "list"
         title = "Surprise Me Mr. Davis"
         summary = "Surprise Me Mr. Davis"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tauk"
         itemType = "artist"
         displayType = "list"
         title = "TAUK"
         summary = "TAUK"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tea-leaf-green"
         itemType = "artist"
         displayType = "list"
         title = "Tea Leaf Green"
         summary = "Tea Leaf Green"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tedeschi-trucks"
         itemType = "artist"
         displayType = "list"
         title = "Tedeschi Trucks Band"
         summary = "Tedeschi Trucks Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ted-leo"
         itemType = "artist"
         displayType = "list"
         title = "Ted Leo and the Pharmacists"
         summary = "Ted Leo and the Pharmacists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:tenacious-d"
         itemType = "artist"
         displayType = "list"
         title = "Tenacious D"
         summary = "Tenacious D"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-big-wu"
         itemType = "artist"
         displayType = "list"
         title = "The Big Wu"
         summary = "The Big Wu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-breakfast"
         itemType = "artist"
         displayType = "list"
         title = "The Breakfast"
         summary = "The Breakfast"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-dead"
         itemType = "artist"
         displayType = "list"
         title = "The Dead"
         summary = "The Dead"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-decemberists"
         itemType = "artist"
         displayType = "list"
         title = "The Decemberists"
         summary = "The Decemberists"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-heavy-pets"
         itemType = "artist"
         displayType = "list"
         title = "The Heavy Pets"
         summary = "The Heavy Pets"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-hippocampus"
         itemType = "artist"
         displayType = "list"
         title = "The HippoCampus"
         summary = "The HippoCampus"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:jauntee"
         itemType = "artist"
         displayType = "list"
         title = "The Jauntee"
         summary = "The Jauntee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-motet"
         itemType = "artist"
         displayType = "list"
         title = "The Motet"
         summary = "The Motet"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-new-deal"
         itemType = "artist"
         displayType = "list"
         title = "The New Deal"
         summary = "The New Deal"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:new-mastersounds"
         itemType = "artist"
         displayType = "list"
         title = "The New Mastersounds"
         summary = "The New Mastersounds"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:radiators"
         itemType = "artist"
         displayType = "list"
         title = "The Radiators"
         summary = "The Radiators"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-walkmen"
         itemType = "artist"
         displayType = "list"
         title = "The Walkmen"
         summary = "The Walkmen"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:war-on-drugs"
         itemType = "artist"
         displayType = "list"
         title = "The War on Drugs"
         summary = "The War on Drugs"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:the-werks"
         itemType = "artist"
         displayType = "list"
         title = "The Werks"
         summary = "The Werks"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:trevor-garrod"
         itemType = "artist"
         displayType = "list"
         title = "Trevor Garrod"
         summary = "Trevor Garrod"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:twiddle"
         itemType = "artist"
         displayType = "list"
         title = "Twiddle"
         summary = "Twiddle"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:umphreys"
         itemType = "artist"
         displayType = "list"
         title = "Umphrey's McGee"
         summary = "Umphrey's McGee"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:vulfpeck"
         itemType = "artist"
         displayType = "list"
         title = "Vulfpeck"
         summary = "Vulfpeck"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:warren-zevon"
         itemType = "artist"
         displayType = "list"
         title = "Warren Zevon"
         summary = "Warren Zevon"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:ween"
         itemType = "artist"
         displayType = "list"
         title = "Ween"
         summary = "Ween"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:white-denim"
         itemType = "artist"
         displayType = "list"
         title = "White Denim"
         summary = "White Denim"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:yonder"
         itemType = "artist"
         displayType = "list"
         title = "Yonder Mountain String Band"
         summary = "Yonder Mountain String Band"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zebu"
         itemType = "artist"
         displayType = "list"
         title = "Zebu"
         summary = "Zebu"
         canPlay = False
      },
      (mediaCollection){
         id = "Artist:zero"
         itemType = "artist"
         displayType = "list"
         title = "Zero"
         summary = "Zero"
         canPlay = False
      },
   index = 0
   count = 116
   total = 116
   timer = 1.805 (seconds)
 } is not None)
2018-03-02 19:00:35,799 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,799 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339407 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,799 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,799 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339407 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,799 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,799 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,800 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,800 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,800 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,800 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339408 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,800 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,800 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339408 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,800 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,800 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,801 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,801 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,801 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,801 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339409 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,801 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,801 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339409 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,801 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,801 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,801 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,802 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,802 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,802 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339410 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,802 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,802 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339410 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,802 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,802 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,802 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,802 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,803 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,803 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339411 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,803 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,803 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339411 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,803 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,803 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,803 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,803 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,803 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,804 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339412 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,804 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,804 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339412 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,804 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,804 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,804 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,804 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,804 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,805 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339413 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,805 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,805 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339413 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,805 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,805 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,805 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,805 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,805 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,805 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339414 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,806 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,806 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339414 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,806 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,806 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,806 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,806 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,806 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,806 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339415 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,806 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,807 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339415 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,807 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,807 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,807 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,807 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,807 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,807 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339416 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,807 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,808 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339416 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,808 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,808 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,808 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,808 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,808 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,808 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339417 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,808 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,808 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339417 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,809 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,809 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,809 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,809 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 11 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,809 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,809 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339418 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,809 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,810 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339418 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,810 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,810 [INFO] SONOS.sonos.workflow.result - End *test iteration* 11 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,810 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,810 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 12 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,810 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,810 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339419 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,810 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,811 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339419 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,811 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,811 [INFO] SONOS.sonos.workflow.result - End *test iteration* 12 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,811 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,811 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 13 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,811 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,811 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339420 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,811 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,811 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339420 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,812 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,812 [INFO] SONOS.sonos.workflow.result - End *test iteration* 13 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,812 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,812 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 14 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,812 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,812 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339421 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,812 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,812 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339421 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,812 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,813 [INFO] SONOS.sonos.workflow.result - End *test iteration* 14 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,813 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,813 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 15 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,813 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,813 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339422 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,813 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,813 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339422 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,813 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,813 [INFO] SONOS.sonos.workflow.result - End *test iteration* 15 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,814 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,814 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 16 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,814 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,814 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339423 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,814 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,814 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339423 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,814 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,814 [INFO] SONOS.sonos.workflow.result - End *test iteration* 16 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,815 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,815 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 17 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,815 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,815 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339424 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,815 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,815 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339424 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,815 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,815 [INFO] SONOS.sonos.workflow.result - End *test iteration* 17 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,815 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,816 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 18 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,816 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,816 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339425 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,816 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,816 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339425 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,816 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,816 [INFO] SONOS.sonos.workflow.result - End *test iteration* 18 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,816 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,816 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 19 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,817 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,817 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339426 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,817 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,817 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339426 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,817 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,817 [INFO] SONOS.sonos.workflow.result - End *test iteration* 19 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,817 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,817 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 20 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,817 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,818 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339427 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,818 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,818 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339427 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,818 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,818 [INFO] SONOS.sonos.workflow.result - End *test iteration* 20 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,818 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,818 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 21 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,818 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,819 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339428 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,819 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,819 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339428 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,819 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,819 [INFO] SONOS.sonos.workflow.result - End *test iteration* 21 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,819 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,819 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 22 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,819 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,820 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339429 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,820 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,820 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339429 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,820 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,820 [INFO] SONOS.sonos.workflow.result - End *test iteration* 22 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,821 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,821 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 23 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,821 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,822 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339430 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,822 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,822 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339430 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,822 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,822 [INFO] SONOS.sonos.workflow.result - End *test iteration* 23 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,822 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,823 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 24 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,823 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,823 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339431 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,823 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,823 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339431 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,823 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,823 [INFO] SONOS.sonos.workflow.result - End *test iteration* 24 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,823 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,824 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 25 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,824 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,824 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339432 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,824 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,824 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339432 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,824 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,824 [INFO] SONOS.sonos.workflow.result - End *test iteration* 25 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,824 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,824 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 26 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,825 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,825 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339433 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,825 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,825 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339433 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,825 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,825 [INFO] SONOS.sonos.workflow.result - End *test iteration* 26 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,825 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,825 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 27 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,825 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,826 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339434 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,826 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,826 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339434 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,826 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,826 [INFO] SONOS.sonos.workflow.result - End *test iteration* 27 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,826 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,826 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 28 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,826 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,827 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339435 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,827 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,827 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339435 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,827 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,827 [INFO] SONOS.sonos.workflow.result - End *test iteration* 28 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,827 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,827 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 29 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,827 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,827 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339436 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,828 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,828 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339436 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,828 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,828 [INFO] SONOS.sonos.workflow.result - End *test iteration* 29 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,828 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,828 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 30 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,828 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,828 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339437 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,828 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,829 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339437 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,829 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,829 [INFO] SONOS.sonos.workflow.result - End *test iteration* 30 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,829 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,829 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 31 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,829 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,829 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339438 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,829 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,829 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339438 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,830 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,830 [INFO] SONOS.sonos.workflow.result - End *test iteration* 31 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,830 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,830 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 32 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,830 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,830 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339439 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,830 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,830 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339439 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,831 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,831 [INFO] SONOS.sonos.workflow.result - End *test iteration* 32 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,831 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,831 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 33 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,831 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,831 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339440 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,831 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,832 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339440 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,832 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,832 [INFO] SONOS.sonos.workflow.result - End *test iteration* 33 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,833 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,833 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 34 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,833 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,833 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339441 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,833 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,834 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339441 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,834 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,834 [INFO] SONOS.sonos.workflow.result - End *test iteration* 34 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,834 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,834 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 35 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,834 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,834 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339442 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,834 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,835 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339442 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,835 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,835 [INFO] SONOS.sonos.workflow.result - End *test iteration* 35 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,835 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,835 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 36 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,835 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,835 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339443 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,835 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,836 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339443 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,836 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,836 [INFO] SONOS.sonos.workflow.result - End *test iteration* 36 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,836 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,836 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 37 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,836 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,836 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339444 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,836 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,837 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339444 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,837 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,837 [INFO] SONOS.sonos.workflow.result - End *test iteration* 37 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,837 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,837 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 38 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,837 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,837 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339445 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,837 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,837 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339445 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,838 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,838 [INFO] SONOS.sonos.workflow.result - End *test iteration* 38 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,838 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,838 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 39 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,838 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,838 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339446 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,838 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,838 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339446 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,838 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,839 [INFO] SONOS.sonos.workflow.result - End *test iteration* 39 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,839 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,839 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 40 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,839 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,839 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339447 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,839 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,839 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339447 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,839 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,839 [INFO] SONOS.sonos.workflow.result - End *test iteration* 40 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,840 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,840 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 41 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,840 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,840 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339448 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,840 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,840 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339448 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,841 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,841 [INFO] SONOS.sonos.workflow.result - End *test iteration* 41 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,841 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,841 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 42 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,841 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,841 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339449 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,841 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,841 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339449 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,841 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,842 [INFO] SONOS.sonos.workflow.result - End *test iteration* 42 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,842 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,842 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 43 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,842 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,842 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339450 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,842 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,842 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339450 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,842 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,842 [INFO] SONOS.sonos.workflow.result - End *test iteration* 43 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,843 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,843 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 44 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,843 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,843 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339451 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,843 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,843 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339451 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,843 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,843 [INFO] SONOS.sonos.workflow.result - End *test iteration* 44 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,844 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,844 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 45 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,844 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,844 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339452 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,844 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,844 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339452 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,844 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,844 [INFO] SONOS.sonos.workflow.result - End *test iteration* 45 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,845 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,845 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 46 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,845 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,845 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339453 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,845 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,845 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339453 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,845 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,845 [INFO] SONOS.sonos.workflow.result - End *test iteration* 46 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,845 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,846 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 47 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,846 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,846 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339454 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,846 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,846 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339454 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,846 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,846 [INFO] SONOS.sonos.workflow.result - End *test iteration* 47 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,846 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,846 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 48 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,847 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,847 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339455 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,847 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,847 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339455 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,847 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,847 [INFO] SONOS.sonos.workflow.result - End *test iteration* 48 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,847 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,847 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 49 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,848 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,848 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339456 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,848 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,848 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339456 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,848 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,848 [INFO] SONOS.sonos.workflow.result - End *test iteration* 49 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,848 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,848 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 50 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,848 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,849 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339457 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,849 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,849 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339457 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,849 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,849 [INFO] SONOS.sonos.workflow.result - End *test iteration* 50 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,849 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,849 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 51 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,849 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,850 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339458 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,850 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,850 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339458 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,850 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,850 [INFO] SONOS.sonos.workflow.result - End *test iteration* 51 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,850 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,850 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 52 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,850 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,851 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339459 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,851 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,851 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339459 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,851 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,851 [INFO] SONOS.sonos.workflow.result - End *test iteration* 52 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,851 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,851 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 53 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,851 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,852 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339460 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,852 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,852 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339460 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,852 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,852 [INFO] SONOS.sonos.workflow.result - End *test iteration* 53 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,852 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,852 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 54 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,852 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,852 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339461 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,853 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,853 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339461 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,853 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,853 [INFO] SONOS.sonos.workflow.result - End *test iteration* 54 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,853 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,853 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 55 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,853 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,853 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339462 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,854 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,854 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339462 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,854 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,854 [INFO] SONOS.sonos.workflow.result - End *test iteration* 55 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,854 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,854 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 56 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,854 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,854 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339463 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,854 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,855 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339463 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,855 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,855 [INFO] SONOS.sonos.workflow.result - End *test iteration* 56 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,855 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,855 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 57 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,855 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,855 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339464 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,855 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,855 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339464 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,856 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,856 [INFO] SONOS.sonos.workflow.result - End *test iteration* 57 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,856 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,856 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 58 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,856 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,856 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339465 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,856 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,856 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339465 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,857 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,857 [INFO] SONOS.sonos.workflow.result - End *test iteration* 58 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,857 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,857 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 59 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,857 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,857 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339466 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,857 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,857 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339466 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,857 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,858 [INFO] SONOS.sonos.workflow.result - End *test iteration* 59 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,858 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,858 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 60 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,858 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,858 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339467 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,858 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,858 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339467 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,858 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,858 [INFO] SONOS.sonos.workflow.result - End *test iteration* 60 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,859 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,859 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 61 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,859 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,859 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339468 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,859 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,859 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339468 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,859 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,859 [INFO] SONOS.sonos.workflow.result - End *test iteration* 61 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,860 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,860 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 62 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,860 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,860 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339469 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,860 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,860 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339469 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,860 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,860 [INFO] SONOS.sonos.workflow.result - End *test iteration* 62 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,861 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,861 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 63 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,861 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,861 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339470 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,861 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,861 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339470 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,861 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,861 [INFO] SONOS.sonos.workflow.result - End *test iteration* 63 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,862 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,862 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 64 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,862 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,862 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339471 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,862 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,862 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339471 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,862 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,862 [INFO] SONOS.sonos.workflow.result - End *test iteration* 64 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,863 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,863 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 65 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,863 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,863 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339472 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,863 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,863 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339472 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,863 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,863 [INFO] SONOS.sonos.workflow.result - End *test iteration* 65 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,863 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,864 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 66 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,864 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,864 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339473 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,864 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,864 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339473 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,864 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,864 [INFO] SONOS.sonos.workflow.result - End *test iteration* 66 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,864 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,864 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 67 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,865 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,865 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339474 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,865 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,865 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339474 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,865 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,865 [INFO] SONOS.sonos.workflow.result - End *test iteration* 67 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,865 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,865 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 68 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,865 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,866 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339475 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,866 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,866 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339475 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,866 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,866 [INFO] SONOS.sonos.workflow.result - End *test iteration* 68 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,866 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,866 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 69 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,866 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,866 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339476 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,867 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,867 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339476 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,867 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,867 [INFO] SONOS.sonos.workflow.result - End *test iteration* 69 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,867 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,867 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 70 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,867 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,868 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339477 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,868 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,868 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339477 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,868 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,868 [INFO] SONOS.sonos.workflow.result - End *test iteration* 70 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,868 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,868 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 71 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,868 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,869 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339478 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,869 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,869 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339478 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,869 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,869 [INFO] SONOS.sonos.workflow.result - End *test iteration* 71 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,869 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,869 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 72 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,869 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,869 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339479 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,870 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,870 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339479 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,870 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,870 [INFO] SONOS.sonos.workflow.result - End *test iteration* 72 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,870 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,870 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 73 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,870 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,870 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339480 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,870 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,871 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339480 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,871 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,871 [INFO] SONOS.sonos.workflow.result - End *test iteration* 73 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,871 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,871 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 74 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,871 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,871 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339481 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,871 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,872 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339481 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,872 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,872 [INFO] SONOS.sonos.workflow.result - End *test iteration* 74 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,872 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,872 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 75 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,872 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,872 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339482 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,872 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,872 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339482 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,873 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,873 [INFO] SONOS.sonos.workflow.result - End *test iteration* 75 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,873 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,873 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 76 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,873 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,873 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339483 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,873 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,874 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339483 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,874 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,874 [INFO] SONOS.sonos.workflow.result - End *test iteration* 76 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,874 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,874 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 77 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,874 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,874 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339484 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,875 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,875 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339484 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,875 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,875 [INFO] SONOS.sonos.workflow.result - End *test iteration* 77 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,875 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,875 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 78 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,875 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,875 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339485 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,876 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,876 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339485 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,876 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,876 [INFO] SONOS.sonos.workflow.result - End *test iteration* 78 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,876 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,876 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 79 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,876 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,876 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339486 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,877 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,877 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339486 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,877 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,877 [INFO] SONOS.sonos.workflow.result - End *test iteration* 79 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,877 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,877 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 80 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,877 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,877 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339487 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,878 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,878 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339487 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,878 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,878 [INFO] SONOS.sonos.workflow.result - End *test iteration* 80 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,878 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,878 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 81 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,878 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,878 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339488 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,879 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,879 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339488 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,879 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,879 [INFO] SONOS.sonos.workflow.result - End *test iteration* 81 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,879 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,879 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 82 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,879 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,880 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339489 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,880 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,880 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339489 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,880 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,880 [INFO] SONOS.sonos.workflow.result - End *test iteration* 82 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,880 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,880 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 83 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,880 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,881 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339490 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,881 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,881 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339490 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,881 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,881 [INFO] SONOS.sonos.workflow.result - End *test iteration* 83 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,881 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,881 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 84 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,881 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,882 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339491 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,882 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,882 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339491 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,882 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,882 [INFO] SONOS.sonos.workflow.result - End *test iteration* 84 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,882 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,882 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 85 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,882 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,883 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339492 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,883 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,883 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339492 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,883 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,883 [INFO] SONOS.sonos.workflow.result - End *test iteration* 85 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,883 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,883 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 86 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,883 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,884 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339493 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,884 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,884 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339493 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,884 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,884 [INFO] SONOS.sonos.workflow.result - End *test iteration* 86 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,884 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,884 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 87 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,885 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,885 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339494 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,885 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,885 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339494 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,885 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,885 [INFO] SONOS.sonos.workflow.result - End *test iteration* 87 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,885 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,885 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 88 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,885 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,886 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339495 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,886 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,886 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339495 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,886 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,886 [INFO] SONOS.sonos.workflow.result - End *test iteration* 88 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,886 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,886 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 89 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,886 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,887 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339496 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,887 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,887 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339496 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,887 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,887 [INFO] SONOS.sonos.workflow.result - End *test iteration* 89 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,887 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,887 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 90 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,887 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,888 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339497 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,888 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,888 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339497 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,888 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,888 [INFO] SONOS.sonos.workflow.result - End *test iteration* 90 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,888 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,888 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 91 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,888 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,888 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339498 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,889 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,889 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339498 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,889 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,889 [INFO] SONOS.sonos.workflow.result - End *test iteration* 91 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,889 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,889 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 92 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,889 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,889 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339499 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,890 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,890 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339499 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,890 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,890 [INFO] SONOS.sonos.workflow.result - End *test iteration* 92 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,890 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,890 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 93 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,890 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,890 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339500 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,890 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,891 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339500 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,891 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,891 [INFO] SONOS.sonos.workflow.result - End *test iteration* 93 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,891 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,891 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 94 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,891 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,891 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339501 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,891 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,892 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339501 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,892 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,892 [INFO] SONOS.sonos.workflow.result - End *test iteration* 94 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,892 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,892 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 95 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,892 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,892 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339502 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,892 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,892 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339502 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,893 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,893 [INFO] SONOS.sonos.workflow.result - End *test iteration* 95 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,893 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,893 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 96 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,893 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,893 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339503 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,893 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,893 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339503 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,893 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,894 [INFO] SONOS.sonos.workflow.result - End *test iteration* 96 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,894 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,894 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 97 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,894 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,894 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339504 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,894 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,894 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339504 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,894 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,894 [INFO] SONOS.sonos.workflow.result - End *test iteration* 97 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,895 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,895 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 98 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,895 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,895 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339505 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,895 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,895 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339505 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,895 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,895 [INFO] SONOS.sonos.workflow.result - End *test iteration* 98 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,896 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,896 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 99 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,896 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,896 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339506 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,896 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,896 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339506 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,896 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,896 [INFO] SONOS.sonos.workflow.result - End *test iteration* 99 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,897 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,897 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 100 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,897 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,897 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339507 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,897 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,897 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339507 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,897 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,897 [INFO] SONOS.sonos.workflow.result - End *test iteration* 100 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,897 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,897 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 101 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,898 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,898 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339508 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,898 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,898 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339508 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,898 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,898 [INFO] SONOS.sonos.workflow.result - End *test iteration* 101 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,898 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,898 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 102 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,899 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,899 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339509 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,899 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,899 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339509 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,899 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,899 [INFO] SONOS.sonos.workflow.result - End *test iteration* 102 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,899 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,899 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 103 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,899 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,900 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339510 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,900 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,900 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339510 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,900 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,900 [INFO] SONOS.sonos.workflow.result - End *test iteration* 103 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,900 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,900 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 104 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,900 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,901 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339511 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,901 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,901 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339511 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,901 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,901 [INFO] SONOS.sonos.workflow.result - End *test iteration* 104 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,901 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,901 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 105 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,901 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,901 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339512 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,902 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,902 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339512 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,902 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,902 [INFO] SONOS.sonos.workflow.result - End *test iteration* 105 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,902 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,902 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 106 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,902 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,902 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339513 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,902 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,903 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339513 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,903 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,903 [INFO] SONOS.sonos.workflow.result - End *test iteration* 106 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,903 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,903 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 107 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,903 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,903 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339514 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,903 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,904 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339514 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,904 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,904 [INFO] SONOS.sonos.workflow.result - End *test iteration* 107 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,904 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,904 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 108 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,904 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,904 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339515 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,904 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,905 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339515 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,905 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,905 [INFO] SONOS.sonos.workflow.result - End *test iteration* 108 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,905 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,905 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 109 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,905 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,905 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339516 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,905 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,906 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339516 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,906 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,906 [INFO] SONOS.sonos.workflow.result - End *test iteration* 109 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,906 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,906 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 110 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,907 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,907 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339517 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,907 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,907 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339517 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,907 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,907 [INFO] SONOS.sonos.workflow.result - End *test iteration* 110 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,908 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,908 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 111 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,908 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,908 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339518 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,908 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,908 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339518 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,908 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,908 [INFO] SONOS.sonos.workflow.result - End *test iteration* 111 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,909 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,909 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 112 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,909 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,909 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339519 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,909 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,909 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339519 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,909 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,910 [INFO] SONOS.sonos.workflow.result - End *test iteration* 112 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,910 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,910 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 113 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,910 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,910 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339520 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,910 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,910 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339520 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,911 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,911 [INFO] SONOS.sonos.workflow.result - End *test iteration* 113 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,911 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,911 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 114 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,911 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,911 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339521 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,911 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,912 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339521 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,912 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,912 [INFO] SONOS.sonos.workflow.result - End *test iteration* 114 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,912 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,912 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 115 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,912 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,912 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Test Case: 339522 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484 Not supported)
2018-03-02 19:00:35,912 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run.
2018-03-02 19:00:35,913 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339522 StreamValidation test_combinatorial_test_stream_radio_226630612844551532715398224208377833484
2018-03-02 19:00:35,913 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,913 [INFO] SONOS.sonos.workflow.result - End *test iteration* 115 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,913 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:35,913 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 116 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,913 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,913 [INFO] SONOS.sonos.workflow.result - End *test iteration* 116 of test case test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:35,913 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_test_stream_radio at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,914 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:35,914 [INFO] SONOS.sonos.workflow.result - Start *test case* test_validate_content_key at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,914 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,914 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Start Test Case: 339524 StreamValidation test_validate_content_key
2018-03-02 19:00:35,914 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service must provide a valid stream ID ([Test Content]:stream in the config file) for this test to run. (expression is False)
2018-03-02 19:00:35,914 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339524 StreamValidation test_validate_content_key
2018-03-02 19:00:35,914 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,914 [INFO] SONOS.sonos.workflow.result - End *test case* test_validate_content_key at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,915 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:35,915 [INFO] SONOS.sonos.workflow.result - Start *test case* test_validate_getStreamingMetadata at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,915 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,915 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - Start Test Case: 339525 StreamValidation test_validate_getStreamingMetadata
2018-03-02 19:00:35,915 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - Service should support streaming or this test will not run. (expression is False)
2018-03-02 19:00:35,915 [SKIP] SONOS.sonos.workflow.fixture.StreamValidation - 339525 StreamValidation test_validate_getStreamingMetadata
2018-03-02 19:00:35,915 [INFO] SONOS.sonos.workflow.fixture.StreamValidation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,915 [INFO] SONOS.sonos.workflow.result - End *test case* test_validate_getStreamingMetadata at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:35,915 [INFO] SONOS.sonos.workflow.result - End *test fixture* StreamValidation at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:35,916 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:00:35,916 [INFO] SONOS.sonos.workflow.result - Start *test fixture* Stringtable at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:35,916 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:35,916 [INFO] SONOS.sonos.workflow.result - Start *test case* test_against_xsd at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:35,916 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:35,916 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Start Test Case: 678932 Stringtable test_against_xsd
2018-03-02 19:00:35,916 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:35,916 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,151 [PASS] SONOS.sonos.workflow.fixture.Stringtable -  (expression is True)
2018-03-02 19:00:36,152 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678932 Stringtable test_against_xsd
2018-03-02 19:00:36,152 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,152 [INFO] SONOS.sonos.workflow.result - End *test case* test_against_xsd at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,153 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:36,153 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:36,153 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,153 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,153 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,153 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678933 Stringtable test_combinatorial_all_languages_272332973971497266456332647529075436780 en-US)
2018-03-02 19:00:36,153 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,153 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,153 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,153 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,154 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language en-US. (expression is True)
2018-03-02 19:00:36,154 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678933 Stringtable test_combinatorial_all_languages_272332973971497266456332647529075436780
2018-03-02 19:00:36,154 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,154 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,154 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,154 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,154 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,154 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678934 Stringtable test_combinatorial_all_languages_248343605611310727457301781344250627565 da-DK)
2018-03-02 19:00:36,155 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,155 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,155 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,155 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,155 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language da-DK. (expression is True)
2018-03-02 19:00:36,155 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678934 Stringtable test_combinatorial_all_languages_248343605611310727457301781344250627565
2018-03-02 19:00:36,155 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,155 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,155 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,156 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,156 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,156 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678935 Stringtable test_combinatorial_all_languages_23920949673594798714881610537253500994 de-DE)
2018-03-02 19:00:36,156 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,156 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,156 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,156 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,157 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language de-DE. (expression is True)
2018-03-02 19:00:36,157 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678935 Stringtable test_combinatorial_all_languages_23920949673594798714881610537253500994
2018-03-02 19:00:36,157 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,157 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,158 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,158 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,158 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,158 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678936 Stringtable test_combinatorial_all_languages_209558383677646239374853758766919986738 fr-FR)
2018-03-02 19:00:36,158 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,158 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,159 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,159 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,159 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language fr-FR. (expression is True)
2018-03-02 19:00:36,159 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678936 Stringtable test_combinatorial_all_languages_209558383677646239374853758766919986738
2018-03-02 19:00:36,159 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,159 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,159 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,159 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,159 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,159 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678937 Stringtable test_combinatorial_all_languages_283763661698541572169492979238300563943 it-IT)
2018-03-02 19:00:36,160 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,160 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,160 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,160 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,160 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language it-IT. (expression is True)
2018-03-02 19:00:36,160 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678937 Stringtable test_combinatorial_all_languages_283763661698541572169492979238300563943
2018-03-02 19:00:36,160 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,160 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,160 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,160 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,161 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,161 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678938 Stringtable test_combinatorial_all_languages_262623965426578793023677270906490735673 es-ES)
2018-03-02 19:00:36,161 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,161 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,161 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,161 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,161 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language es-ES. (expression is True)
2018-03-02 19:00:36,161 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678938 Stringtable test_combinatorial_all_languages_262623965426578793023677270906490735673
2018-03-02 19:00:36,161 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,161 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,161 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,162 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,162 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,162 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678939 Stringtable test_combinatorial_all_languages_150311247032165249806672952164343491982 pt-BR)
2018-03-02 19:00:36,162 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,162 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,162 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,162 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,162 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language pt-BR. (expression is True)
2018-03-02 19:00:36,162 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678939 Stringtable test_combinatorial_all_languages_150311247032165249806672952164343491982
2018-03-02 19:00:36,162 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,162 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,163 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,163 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,163 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,163 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678940 Stringtable test_combinatorial_all_languages_59569624563120496288969118986964151009 sv-SE)
2018-03-02 19:00:36,163 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,163 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,163 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,163 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,163 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language sv-SE. (expression is True)
2018-03-02 19:00:36,163 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678940 Stringtable test_combinatorial_all_languages_59569624563120496288969118986964151009
2018-03-02 19:00:36,164 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,164 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,164 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,164 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 8 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,164 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,164 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678941 Stringtable test_combinatorial_all_languages_163849088889100427437282293375901048097 nl-NL)
2018-03-02 19:00:36,165 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,165 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,165 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,165 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,165 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language nl-NL. (expression is True)
2018-03-02 19:00:36,165 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678941 Stringtable test_combinatorial_all_languages_163849088889100427437282293375901048097
2018-03-02 19:00:36,166 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,166 [INFO] SONOS.sonos.workflow.result - End *test iteration* 8 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,166 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,167 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 9 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,167 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,167 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678942 Stringtable test_combinatorial_all_languages_198827217835110272730223144502985916799 nb-NO)
2018-03-02 19:00:36,167 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,167 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,167 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,167 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,167 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language nb-NO. (expression is True)
2018-03-02 19:00:36,168 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678942 Stringtable test_combinatorial_all_languages_198827217835110272730223144502985916799
2018-03-02 19:00:36,168 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,168 [INFO] SONOS.sonos.workflow.result - End *test iteration* 9 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,168 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,168 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 10 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,168 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,169 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678943 Stringtable test_combinatorial_all_languages_283743995608291858621092154611422837437 ja-JP)
2018-03-02 19:00:36,169 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,169 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,169 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,169 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,169 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language ja-JP. (expression is True)
2018-03-02 19:00:36,169 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678943 Stringtable test_combinatorial_all_languages_283743995608291858621092154611422837437
2018-03-02 19:00:36,169 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,169 [INFO] SONOS.sonos.workflow.result - End *test iteration* 10 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,169 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,169 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 11 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,170 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,170 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Test Case: 678944 Stringtable test_combinatorial_all_languages_297248705437716225237911204102095587973 zh-CN)
2018-03-02 19:00:36,170 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,170 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,170 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,170 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,170 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain an entry for the language zh-CN. (expression is True)
2018-03-02 19:00:36,170 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678944 Stringtable test_combinatorial_all_languages_297248705437716225237911204102095587973
2018-03-02 19:00:36,170 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,170 [INFO] SONOS.sonos.workflow.result - End *test iteration* 11 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,171 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:36,171 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 12 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,171 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,171 [INFO] SONOS.sonos.workflow.result - End *test iteration* 12 of test case test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:36,171 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,171 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:36,171 [INFO] SONOS.sonos.workflow.result - Start *test case* test_equal_language_configuration at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,171 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,171 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Start Test Case: 678946 Stringtable test_equal_language_configuration
2018-03-02 19:00:36,171 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,172 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,172 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,172 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,172 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain identical configurations for each language listed. (expression is True)
2018-03-02 19:00:36,172 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678946 Stringtable test_equal_language_configuration
2018-03-02 19:00:36,172 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,172 [INFO] SONOS.sonos.workflow.result - End *test case* test_equal_language_configuration at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:36,173 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:36,173 [INFO] SONOS.sonos.workflow.result - Start *test case* test_getmetadata_all_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:36,173 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:36,173 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Start Test Case: 678947 Stringtable test_getmetadata_all_languages
2018-03-02 19:00:36,173 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:36,173 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,174 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:36,174 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:36,174 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:36,176 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:36,176 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'en-US', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:36,557 [DEBUG] SONOS.suds.client - waited 381 (ms) on server reply
2018-03-02 19:00:36,577 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:36,738 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:36,739 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:36,740 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'da-DK', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:37,115 [DEBUG] SONOS.suds.client - waited 374 (ms) on server reply
2018-03-02 19:00:37,137 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:37,294 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:37,295 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:37,295 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'de-DE', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:37,696 [DEBUG] SONOS.suds.client - waited 400 (ms) on server reply
2018-03-02 19:00:37,718 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:37,889 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:37,891 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:37,891 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'es-ES', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:38,252 [DEBUG] SONOS.suds.client - waited 360 (ms) on server reply
2018-03-02 19:00:38,276 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:38,441 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:38,443 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:38,444 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'fr-FR', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:38,863 [DEBUG] SONOS.suds.client - waited 418 (ms) on server reply
2018-03-02 19:00:38,885 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:39,186 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:39,188 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:39,189 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'it-IT', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:39,568 [DEBUG] SONOS.suds.client - waited 378 (ms) on server reply
2018-03-02 19:00:39,591 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:39,763 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:39,764 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:39,764 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'ja-JP', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:40,179 [DEBUG] SONOS.suds.client - waited 414 (ms) on server reply
2018-03-02 19:00:40,261 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:40,471 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:40,472 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:40,472 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'nb-NO', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:40,850 [DEBUG] SONOS.suds.client - waited 377 (ms) on server reply
2018-03-02 19:00:40,880 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:41,136 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:41,137 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:41,137 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'nl-NL', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:41,558 [DEBUG] SONOS.suds.client - waited 420 (ms) on server reply
2018-03-02 19:00:41,580 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:41,769 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:41,771 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:41,771 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'pt-BR', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:42,150 [DEBUG] SONOS.suds.client - waited 378 (ms) on server reply
2018-03-02 19:00:42,177 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:42,364 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:42,365 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:42,366 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': 'sv-SE', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:43,222 [DEBUG] SONOS.suds.client - waited 856 (ms) on server reply
2018-03-02 19:00:43,244 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:43,436 [DEBUG] SONOS.sonos.smapi.smapiclient - getMetadata('root', '0', 10000, None)
2018-03-02 19:00:43,437 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getMetadata>
         <ns1:id>root</ns1:id>
         <ns1:index>0</ns1:index>
         <ns1:count>10000</ns1:count>
      </ns1:getMetadata>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:43,437 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getMetadata"', 'Accept-Language': ' zh-CN', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:44,564 [DEBUG] SONOS.suds.client - waited 1.126 (seconds) on server reply
2018-03-02 19:00:44,586 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getMetadataResponse xmlns="http://www.sonos.com/Services/1.1">
         <getMetadataResult>
            <index>0</index>
            <count>116</count>
            <total>116</total>
            <mediaCollection>
               <id>Artist:dead-and-co</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dead and Company</title>
               <summary>Dead and Company</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grateful-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grateful Dead</title>
               <summary>Grateful Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jrad</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo&apos;s Almost Dead</title>
               <summary>Joe Russo&apos;s Almost Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lotus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lotus</title>
               <summary>Lotus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:oar</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>O.A.R.</title>
               <summary>O.A.R.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phish</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phish</title>
               <summary>Phish</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:akron-family</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Akron/Family</title>
               <summary>Akron/Family</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:american-babies</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>American Babies</title>
               <summary>American Babies</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:andrew-bird</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Andrew Bird</title>
               <summary>Andrew Bird</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:animal-collective</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Animal Collective</title>
               <summary>Animal Collective</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aru</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aquarium Rescue Unit</title>
               <summary>Aquarium Rescue Unit</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:aqueous</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Aqueous</title>
               <summary>Aqueous</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:assembly-of-dust</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Assembly of Dust</title>
               <summary>Assembly of Dust</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bela-fleck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bela Fleck and the Flecktones</title>
               <summary>Bela Fleck and the Flecktones</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:duo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Benevento Russo Duo</title>
               <summary>Benevento Russo Duo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ben-kweller</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ben Kweller</title>
               <summary>Ben Kweller</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bernie-worrell</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bernie Worrell Orchestra</title>
               <summary>Bernie Worrell Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:billy-strings</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Billy Strings</title>
               <summary>Billy Strings</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:blues-traveler</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Blues Traveler</title>
               <summary>Blues Traveler</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:bob-weir</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Bob Weir</title>
               <summary>Bob Weir</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:brothers-past</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Brothers Past</title>
               <summary>Brothers Past</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:cabinet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Cabinet</title>
               <summary>Cabinet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:club-d-elf</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Club d&apos;Elf</title>
               <summary>Club d&apos;Elf</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dark-star-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dark Star Orchestra</title>
               <summary>Dark Star Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:disco-biscuits</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Disco Biscuits</title>
               <summary>Disco Biscuits</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dispatch</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dispatch</title>
               <summary>Dispatch</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:donna-the-buffalo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Donna the Buffalo</title>
               <summary>Donna the Buffalo</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:dopapod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Dopapod</title>
               <summary>Dopapod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:drive-by-truckers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Drive-By Truckers</title>
               <summary>Drive-By Truckers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:egi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>EGi</title>
               <summary>EGi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:elliott-smith</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Elliott Smith</title>
               <summary>Elliott Smith</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:everyone-orchestra</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Everyone Orchestra</title>
               <summary>Everyone Orchestra</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:formula-5</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Formula 5</title>
               <summary>Formula 5</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fruition</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fruition</title>
               <summary>Fruition</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:fugazi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Fugazi</title>
               <summary>Fugazi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:furthur</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Furthur</title>
               <summary>Furthur</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:garage-a-trois</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Garage A Trois</title>
               <summary>Garage A Trois</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-love</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G. Love and Special Sauce</title>
               <summary>G. Love and Special Sauce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:g-nome-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>G-Nome Project</title>
               <summary>G-Nome Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:godspeed-you-black-emperor</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Godspeed You Black Emperor!</title>
               <summary>Godspeed You Black Emperor!</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:god-street-wine</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>God Street Wine</title>
               <summary>God Street Wine</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:grace-potter</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Grace Potter</title>
               <summary>Grace Potter</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:greensky-bluegrass</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Greensky Bluegrass</title>
               <summary>Greensky Bluegrass</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:guster</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Guster</title>
               <summary>Guster</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:holly-bowling</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Holly Bowling</title>
               <summary>Holly Bowling</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:stringdusters</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Infamous Stringdusters</title>
               <summary>Infamous Stringdusters</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jack-johnson</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jack Johnson</title>
               <summary>Jack Johnson</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jazz-mandolin-project</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jazz Mandolin Project</title>
               <summary>Jazz Mandolin Project</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jerry-joseph</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Jerry Joseph and the Jackmormons</title>
               <summary>Jerry Joseph and the Jackmormons</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:joe-russo-presents-hooteroll-plus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Joe Russo Presents: Hooteroll? + Plus</title>
               <summary>Joe Russo Presents: Hooteroll? + Plus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-kadlecik</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Kadlecik</title>
               <summary>John Kadlecik</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:john-popper</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>John Popper</title>
               <summary>John Popper</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:keller-williams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Keller Williams</title>
               <summary>Keller Williams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kitchen-dwellers</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kitchen Dwellers</title>
               <summary>Kitchen Dwellers</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kung-fu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Kung Fu</title>
               <summary>Kung Fu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:kvhw</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>KVHW</title>
               <summary>KVHW</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:leftover-salmon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Leftover Salmon</title>
               <summary>Leftover Salmon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:lettuce</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Lettuce</title>
               <summary>Lettuce</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:little-feat</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Little Feat</title>
               <summary>Little Feat</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:marco</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Marco Benevento</title>
               <summary>Marco Benevento</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matisyahu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matisyahu</title>
               <summary>Matisyahu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:matt-pond-pa</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Matt Pond PA</title>
               <summary>Matt Pond PA</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:max-creek</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Max Creek</title>
               <summary>Max Creek</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moe</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>moe.</title>
               <summary>moe.</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mogwai</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Mogwai</title>
               <summary>Mogwai</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:moon-taxi</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Moon Taxi</title>
               <summary>Moon Taxi</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:mmj</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>My Morning Jacket</title>
               <summary>My Morning Jacket</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:nathan-moore</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Nathan Moore</title>
               <summary>Nathan Moore</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:percy-hill</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Percy Hill</title>
               <summary>Percy Hill</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:perpetual-groove</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Perpetual Groove</title>
               <summary>Perpetual Groove</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:phil-lesh</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Phil Lesh and Friends</title>
               <summary>Phil Lesh and Friends</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:pigeons-playing-ping-pong</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Pigeons Playing Ping Pong</title>
               <summary>Pigeons Playing Ping Pong</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:railroad-earth</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Railroad Earth</title>
               <summary>Railroad Earth</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:raq</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Raq</title>
               <summary>Raq</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ratdog</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ratdog</title>
               <summary>Ratdog</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ryan-adams</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ryan Adams</title>
               <summary>Ryan Adams</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:scott-metzger</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Scott Metzger</title>
               <summary>Scott Metzger</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:shafty</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Shafty</title>
               <summary>Shafty</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:smashing-pumpkins</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Smashing Pumpkins</title>
               <summary>Smashing Pumpkins</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sts9</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Sound Tribe Sector 9</title>
               <summary>Sound Tribe Sector 9</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spafford</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spafford</title>
               <summary>Spafford</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:spoon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Spoon</title>
               <summary>Spoon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock</title>
               <summary>Steve Kimock</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:steve-kimock-band</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Steve Kimock Band</title>
               <summary>Steve Kimock Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:strangefolk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Strangefolk</title>
               <summary>Strangefolk</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:sci</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>String Cheese Incident</title>
               <summary>String Cheese Incident</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:surprise-me-mr-davis</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Surprise Me Mr. Davis</title>
               <summary>Surprise Me Mr. Davis</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tauk</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>TAUK</title>
               <summary>TAUK</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tea-leaf-green</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tea Leaf Green</title>
               <summary>Tea Leaf Green</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tedeschi-trucks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tedeschi Trucks Band</title>
               <summary>Tedeschi Trucks Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ted-leo</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ted Leo and the Pharmacists</title>
               <summary>Ted Leo and the Pharmacists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:tenacious-d</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Tenacious D</title>
               <summary>Tenacious D</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-big-wu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Big Wu</title>
               <summary>The Big Wu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-breakfast</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Breakfast</title>
               <summary>The Breakfast</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-dead</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Dead</title>
               <summary>The Dead</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-decemberists</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Decemberists</title>
               <summary>The Decemberists</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-heavy-pets</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Heavy Pets</title>
               <summary>The Heavy Pets</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-hippocampus</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The HippoCampus</title>
               <summary>The HippoCampus</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:jauntee</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Jauntee</title>
               <summary>The Jauntee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-motet</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Motet</title>
               <summary>The Motet</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-new-deal</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Deal</title>
               <summary>The New Deal</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:new-mastersounds</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The New Mastersounds</title>
               <summary>The New Mastersounds</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:radiators</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Radiators</title>
               <summary>The Radiators</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-walkmen</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Walkmen</title>
               <summary>The Walkmen</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:war-on-drugs</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The War on Drugs</title>
               <summary>The War on Drugs</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:the-werks</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>The Werks</title>
               <summary>The Werks</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:trevor-garrod</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Trevor Garrod</title>
               <summary>Trevor Garrod</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:twiddle</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Twiddle</title>
               <summary>Twiddle</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:umphreys</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Umphrey&apos;s McGee</title>
               <summary>Umphrey&apos;s McGee</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:vulfpeck</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Vulfpeck</title>
               <summary>Vulfpeck</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:warren-zevon</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Warren Zevon</title>
               <summary>Warren Zevon</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:ween</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Ween</title>
               <summary>Ween</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:white-denim</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>White Denim</title>
               <summary>White Denim</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:yonder</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Yonder Mountain String Band</title>
               <summary>Yonder Mountain String Band</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zebu</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zebu</title>
               <summary>Zebu</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
            <mediaCollection>
               <id>Artist:zero</id>
               <itemType>artist</itemType>
               <displayType>list</displayType>
               <title>Zero</title>
               <summary>Zero</summary>
               <canPlay>false</canPlay>
            </mediaCollection>
         </getMetadataResult>
      </getMetadataResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:44,757 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678947 Stringtable test_getmetadata_all_languages
2018-03-02 19:00:44,757 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:44,757 [INFO] SONOS.sonos.workflow.result - End *test case* test_getmetadata_all_languages at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:44,757 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:44,757 [INFO] SONOS.sonos.workflow.result - Start *test case* test_minimum_config at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:44,758 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:44,758 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Start Test Case: 678948 Stringtable test_minimum_config
2018-03-02 19:00:44,758 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:44,758 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:44,758 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:44,758 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:44,759 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file must contain a 'ServicePromo' for this test to run. (expression is False)
2018-03-02 19:00:44,759 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should contain a 'ServicePromo' for each language listed. (expected 12 == actual 12)
2018-03-02 19:00:44,759 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678948 Stringtable test_minimum_config
2018-03-02 19:00:44,759 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:44,759 [INFO] SONOS.sonos.workflow.result - End *test case* test_minimum_config at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:44,759 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:44,759 [INFO] SONOS.sonos.workflow.result - Start *test case* test_unsupported_languages at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:44,759 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:44,760 [INFO] SONOS.sonos.workflow.fixture.Stringtable - Start Test Case: 678949 Stringtable test_unsupported_languages
2018-03-02 19:00:44,760 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is False)
2018-03-02 19:00:44,760 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:44,760 [PASS] SONOS.sonos.workflow.fixture.Stringtable - Service must provide a strings file URI ([Strings File]:stringsLocation in the config file). (expression is True)
2018-03-02 19:00:44,760 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file URI (https://sonos.relisten.net/static/strings.xml) should point to a valid file. (expression is True)
2018-03-02 19:00:44,760 [PASS] SONOS.sonos.workflow.fixture.Stringtable - The strings file should only contain supported languages. (expression is True)
2018-03-02 19:00:44,760 [PASS] SONOS.sonos.workflow.fixture.Stringtable - 678949 Stringtable test_unsupported_languages
2018-03-02 19:00:44,760 [INFO] SONOS.sonos.workflow.fixture.Stringtable - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:44,760 [INFO] SONOS.sonos.workflow.result - End *test case* test_unsupported_languages at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:44,761 [INFO] SONOS.sonos.workflow.result - End *test fixture* Stringtable at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:44,761 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:00:44,761 [INFO] SONOS.sonos.workflow.result - Start *test fixture* Presentationmap at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:44,761 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:44,761 [INFO] SONOS.sonos.workflow.result - Start *test case* test_presentation_map at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:44,761 [INFO] SONOS.sonos.workflow.fixture.Presentationmap - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:44,761 [INFO] SONOS.sonos.workflow.fixture.Presentationmap - Start Test Case: 1357881 Presentationmap test_presentation_map
2018-03-02 19:00:44,762 [PASS] SONOS.sonos.workflow.fixture.Presentationmap - Service must provide a presentation map URI ([Presentation Map File]:pmapLocation in the config file) for this test to run. (expression is True)
2018-03-02 19:00:45,731 [PASS] SONOS.sonos.workflow.fixture.Presentationmap - Attempting to open the presentation map URI (https://sonos.relisten.net/static/presentationmap.xml) should return an HTTP 200 status. (expected 200 == actual 200)
2018-03-02 19:00:45,735 [INFO] SONOS.sonos.workflow.fixture.Presentationmap - Found a valid choice node for the match node.
2018-03-02 19:00:45,735 [PASS] SONOS.sonos.workflow.fixture.Presentationmap -  (expression is True)
2018-03-02 19:00:45,735 [PASS] SONOS.sonos.workflow.fixture.Presentationmap - Presentation map should contain a valid Match node. (expression is True)
2018-03-02 19:00:45,736 [PASS] SONOS.sonos.workflow.fixture.Presentationmap - 1357881 Presentationmap test_presentation_map
2018-03-02 19:00:45,736 [INFO] SONOS.sonos.workflow.fixture.Presentationmap - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,736 [INFO] SONOS.sonos.workflow.result - End *test case* test_presentation_map at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:45,736 [INFO] SONOS.sonos.workflow.result - End *test fixture* Presentationmap at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:45,736 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:00:45,736 [INFO] SONOS.sonos.workflow.result - Start *test fixture* ExtendedMetadataValidations at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:45,737 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:45,737 [INFO] SONOS.sonos.workflow.result - Start *test case* test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:45,737 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:45,737 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 0 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:45,737 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,737 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Test Case: 2715762 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_79910549971598818613911631068757139742 (u'track', u'self.smapiservice.get_test_track_id()'))
2018-03-02 19:00:45,737 [PASS] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Service must support extended metadata ([Capabilities]:extendedMetadata in the config file) for this test to run. (expression is True)
2018-03-02 19:00:45,738 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Content ID must be provided in configuration in order for this test to run. (expression is False)
2018-03-02 19:00:45,738 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - 2715762 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_79910549971598818613911631068757139742
2018-03-02 19:00:45,738 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,738 [INFO] SONOS.sonos.workflow.result - End *test iteration* 0 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:45,738 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:45,738 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 1 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:45,738 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,739 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Test Case: 2715763 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_202287592570443149333576301501150690606 (u'artist', u'self.smapiservice.get_test_artist_id()'))
2018-03-02 19:00:45,739 [PASS] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Service must support extended metadata ([Capabilities]:extendedMetadata in the config file) for this test to run. (expression is True)
2018-03-02 19:00:45,739 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Content ID must be provided in configuration in order for this test to run. (expression is False)
2018-03-02 19:00:45,739 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - 2715763 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_202287592570443149333576301501150690606
2018-03-02 19:00:45,739 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,739 [INFO] SONOS.sonos.workflow.result - End *test iteration* 1 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:45,740 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:45,740 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 2 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:45,740 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,740 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Test Case: 2715764 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_226766092429267197794400786235382192888 (u'album', u'self.smapiservice.get_test_album_id()'))
2018-03-02 19:00:45,740 [PASS] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Service must support extended metadata ([Capabilities]:extendedMetadata in the config file) for this test to run. (expression is True)
2018-03-02 19:00:45,740 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Content ID must be provided in configuration in order for this test to run. (expression is False)
2018-03-02 19:00:45,740 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - 2715764 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_226766092429267197794400786235382192888
2018-03-02 19:00:45,740 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,740 [INFO] SONOS.sonos.workflow.result - End *test iteration* 2 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:45,741 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:45,741 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 3 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:45,741 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,741 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Test Case: 2715765 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_303494449562366627567694895518968386839 (u'program', u'self.smapiservice.get_test_prog_id()'))
2018-03-02 19:00:45,741 [PASS] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Service must support extended metadata ([Capabilities]:extendedMetadata in the config file) for this test to run. (expression is True)
2018-03-02 19:00:45,741 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Content ID must be provided in configuration in order for this test to run. (expression is False)
2018-03-02 19:00:45,741 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - 2715765 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_303494449562366627567694895518968386839
2018-03-02 19:00:45,742 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,742 [INFO] SONOS.sonos.workflow.result - End *test iteration* 3 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:45,742 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:45,742 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 4 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:45,742 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,742 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Test Case: 2715766 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_106231269325407458334543765211541715437 (u'stream', u'self.smapiservice.get_test_stream_id()'))
2018-03-02 19:00:45,742 [PASS] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Service must support extended metadata ([Capabilities]:extendedMetadata in the config file) for this test to run. (expression is True)
2018-03-02 19:00:45,742 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Content ID must be provided in configuration in order for this test to run. (expression is False)
2018-03-02 19:00:45,743 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - 2715766 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_106231269325407458334543765211541715437
2018-03-02 19:00:45,743 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,743 [INFO] SONOS.sonos.workflow.result - End *test iteration* 4 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:45,743 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:45,743 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 5 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:45,743 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,743 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Test Case: 2715767 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_42611123999516502198009414353466294246 (u'playlist', u'self.smapiservice.get_test_playlist_id()'))
2018-03-02 19:00:45,744 [PASS] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Service must support extended metadata ([Capabilities]:extendedMetadata in the config file) for this test to run. (expression is True)
2018-03-02 19:00:45,744 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Content ID must be provided in configuration in order for this test to run. (expression is False)
2018-03-02 19:00:45,744 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - 2715767 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_42611123999516502198009414353466294246
2018-03-02 19:00:45,744 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,744 [INFO] SONOS.sonos.workflow.result - End *test iteration* 5 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:45,744 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:45,744 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 6 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:45,744 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,744 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Test Case: 2715768 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_286380630741177489163373456639541166848 (u'other', u'self.smapiservice.get_test_other_id()'))
2018-03-02 19:00:45,745 [PASS] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Service must support extended metadata ([Capabilities]:extendedMetadata in the config file) for this test to run. (expression is True)
2018-03-02 19:00:45,745 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - Content ID must be provided in configuration in order for this test to run. (expression is False)
2018-03-02 19:00:45,745 [SKIP] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - 2715768 ExtendedMetadataValidations test_combinatorial_get_extendedmetadata_286380630741177489163373456639541166848
2018-03-02 19:00:45,745 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,745 [INFO] SONOS.sonos.workflow.result - End *test iteration* 6 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:45,745 [INFO] SONOS.sonos.workflow.result - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2018-03-02 19:00:45,745 [INFO] SONOS.sonos.workflow.result - Start *test iteration* 7 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:45,745 [INFO] SONOS.sonos.workflow.fixture.ExtendedMetadataValidations - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,746 [INFO] SONOS.sonos.workflow.result - End *test iteration* 7 of test case test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:45,746 [INFO] SONOS.sonos.workflow.result - End *test case* test_combinatorial_get_extendedmetadata at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:45,746 [INFO] SONOS.sonos.workflow.result - End *test fixture* ExtendedMetadataValidations at Friday, March 02, 2018 07:00 PM 




2018-03-02 19:00:45,746 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:00:45,746 [INFO] SONOS.sonos.workflow.result - Start *test fixture* PollingIntervalTest at Friday, March 02, 2018 07:00 PM 


2018-03-02 19:00:45,746 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:00:45,746 [INFO] SONOS.sonos.workflow.result - Start *test case* test_getlastupdate_no_change at Friday, March 02, 2018 07:00 PM 
2018-03-02 19:00:45,747 [INFO] SONOS.sonos.workflow.fixture.PollingIntervalTest - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:00:45,747 [INFO] SONOS.sonos.workflow.fixture.PollingIntervalTest - Start Test Case: 5431531 PollingIntervalTest test_getlastupdate_no_change
2018-03-02 19:00:45,747 [DEBUG] SONOS.sonos.smapi.smapiclient - getLastUpdate()
2018-03-02 19:00:45,748 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getLastUpdate/>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:45,748 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getLastUpdate"', 'Accept-Language': 'en-US', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:46,887 [DEBUG] SONOS.suds.client - waited 1.138 (seconds) on server reply
2018-03-02 19:00:46,888 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getLastUpdateResponse xmlns="http://www.sonos.com/Services/1.1">
         <getLastUpdateResult>
            <favorites>0</favorites>
            <catalog>0</catalog>
            <pollInterval>60</pollInterval>
         </getLastUpdateResult>
      </getLastUpdateResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:46,889 [PASS] SONOS.sonos.workflow.fixture.PollingIntervalTest - getLastUpdate should return something other than None. ((lastUpdate){
   favorites = "0"
   catalog = "0"
   pollInterval = 60
   timer = 1.138 (seconds)
 } is not None)
2018-03-02 19:00:46,889 [DEBUG] SONOS.sonos.smapi.smapiclient - getLastUpdate()
2018-03-02 19:00:46,890 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getLastUpdate/>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:00:46,890 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getLastUpdate"', 'Accept-Language': 'en-US', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:00:47,603 [DEBUG] SONOS.suds.client - waited 712 (ms) on server reply
2018-03-02 19:00:47,604 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getLastUpdateResponse xmlns="http://www.sonos.com/Services/1.1">
         <getLastUpdateResult>
            <favorites>0</favorites>
            <catalog>0</catalog>
            <pollInterval>60</pollInterval>
         </getLastUpdateResult>
      </getLastUpdateResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:00:47,607 [PASS] SONOS.sonos.workflow.fixture.PollingIntervalTest - getLastUpdate should return something other than None. ((lastUpdate){
   favorites = "0"
   catalog = "0"
   pollInterval = 60
   timer = 712 (ms)
 } is not None)
2018-03-02 19:00:47,608 [PASS] SONOS.sonos.workflow.fixture.PollingIntervalTest - getLastUpdate checksum values should remain unchanged when no changes have been made to the favorites folder between two consecutive (rapid-fire) getlastupdate calls. (lists [0, 0] are the same)
2018-03-02 19:00:47,609 [PASS] SONOS.sonos.workflow.fixture.PollingIntervalTest - Service must provide valid polling interval for this test to run. (expression is True)
2018-03-02 19:00:47,609 [PASS] SONOS.sonos.workflow.fixture.PollingIntervalTest - Polling interval ([Polling Interval]:interval must be 5 minutes (300 seconds) or shorter to run this test. (expression is True)
2018-03-02 19:01:47,617 [DEBUG] SONOS.sonos.smapi.smapiclient - getLastUpdate()
2018-03-02 19:01:47,618 [DEBUG] SONOS.suds.client - sending to (https://sonos.relisten.net/mp3) with timeout (30), message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://www.sonos.com/Services/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.sonos.com/Services/1.1" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header>
      <tns:credentials>
         <tns:deviceId>00-00-00-00-00-00:Z</tns:deviceId>
         <tns:deviceProvider>Sonos</tns:deviceProvider>
      </tns:credentials>
   </SOAP-ENV:Header>
   <ns0:Body>
      <ns1:getLastUpdate/>
   </ns0:Body>
</SOAP-ENV:Envelope>
2018-03-02 19:01:47,619 [DEBUG] SONOS.suds.client - headers = {'SOAPAction': '"http://www.sonos.com/Services/1.1#getLastUpdate"', 'Accept-Language': 'en-US', 'Content-Type': 'text/xml; charset=utf-8', 'User-Agent': 'Linux UPnP/1.0 Sonos/33.12-29310 (Self-Test)'}
2018-03-02 19:01:47,878 [DEBUG] SONOS.suds.client - waited 258 (ms) on server reply
2018-03-02 19:01:47,879 [DEBUG] SONOS.suds.binding - Reply:
 <?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://www.sonos.com/Services/1.1">
   <soap:Body>
      <getLastUpdateResponse xmlns="http://www.sonos.com/Services/1.1">
         <getLastUpdateResult>
            <favorites>0</favorites>
            <catalog>0</catalog>
            <pollInterval>60</pollInterval>
         </getLastUpdateResult>
      </getLastUpdateResponse>
   </soap:Body>
</soap:Envelope>
2018-03-02 19:01:47,880 [PASS] SONOS.sonos.workflow.fixture.PollingIntervalTest - getLastUpdate should return something other than None. ((lastUpdate){
   favorites = "0"
   catalog = "0"
   pollInterval = 60
   timer = 258 (ms)
 } is not None)
2018-03-02 19:01:47,880 [PASS] SONOS.sonos.workflow.fixture.PollingIntervalTest - getLastUpdate checksum values should remain unchanged when no changes have been made to the favorites folder during a polling interval. (lists [0, 0] are the same)
2018-03-02 19:01:47,880 [PASS] SONOS.sonos.workflow.fixture.PollingIntervalTest - 5431531 PollingIntervalTest test_getlastupdate_no_change
2018-03-02 19:01:47,880 [INFO] SONOS.sonos.workflow.fixture.PollingIntervalTest - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,880 [INFO] SONOS.sonos.workflow.result - End *test case* test_getlastupdate_no_change at Friday, March 02, 2018 07:01 PM 


2018-03-02 19:01:47,881 [INFO] SONOS.sonos.workflow.result - End *test fixture* PollingIntervalTest at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,881 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:01:47,881 [INFO] SONOS.sonos.workflow.result - Start *test fixture* Authentication at Friday, March 02, 2018 07:01 PM 


2018-03-02 19:01:47,881 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,881 [INFO] SONOS.sonos.workflow.result - Start *test case* test_expired_trial_account at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,881 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,881 [INFO] SONOS.sonos.workflow.fixture.Authentication - Start Test Case: 10863062 Authentication test_expired_trial_account
2018-03-02 19:01:47,882 [SKIP] SONOS.sonos.workflow.fixture.Authentication - Service must use session ID authentication ([Authentication Type]:sessionID in the config file) for this test to run. (expression is False)
2018-03-02 19:01:47,882 [SKIP] SONOS.sonos.workflow.fixture.Authentication - 10863062 Authentication test_expired_trial_account
2018-03-02 19:01:47,882 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,882 [INFO] SONOS.sonos.workflow.result - End *test case* test_expired_trial_account at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,882 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,882 [INFO] SONOS.sonos.workflow.result - Start *test case* test_invalid_credentials at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,882 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,882 [INFO] SONOS.sonos.workflow.fixture.Authentication - Start Test Case: 10863063 Authentication test_invalid_credentials
2018-03-02 19:01:47,883 [SKIP] SONOS.sonos.workflow.fixture.Authentication - Service must use session ID authentication ([Authentication Type]:sessionID in the config file) for this test to run. (expression is False)
2018-03-02 19:01:47,883 [SKIP] SONOS.sonos.workflow.fixture.Authentication - 10863063 Authentication test_invalid_credentials
2018-03-02 19:01:47,883 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,883 [INFO] SONOS.sonos.workflow.result - End *test case* test_invalid_credentials at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,883 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,883 [INFO] SONOS.sonos.workflow.result - Start *test case* test_migration_to_deviceLink at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,883 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,883 [INFO] SONOS.sonos.workflow.fixture.Authentication - Start Test Case: 10863064 Authentication test_migration_to_deviceLink
2018-03-02 19:01:47,883 [SKIP] SONOS.sonos.workflow.fixture.Authentication - Service must use devicelink authentication ([Authentication Type]:oauth in the config file) for this test to run. (expression is False)
2018-03-02 19:01:47,884 [SKIP] SONOS.sonos.workflow.fixture.Authentication - 10863064 Authentication test_migration_to_deviceLink
2018-03-02 19:01:47,884 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,884 [INFO] SONOS.sonos.workflow.result - End *test case* test_migration_to_deviceLink at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,884 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,884 [INFO] SONOS.sonos.workflow.result - Start *test case* test_refreshAuthToken at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,884 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,884 [INFO] SONOS.sonos.workflow.fixture.Authentication - Start Test Case: 10863065 Authentication test_refreshAuthToken
2018-03-02 19:01:47,884 [SKIP] SONOS.sonos.workflow.fixture.Authentication - Service must use devicelink authentication ([Authentication Type]:oauth in the config file) for this test to run. (expression is False)
2018-03-02 19:01:47,885 [SKIP] SONOS.sonos.workflow.fixture.Authentication - 10863065 Authentication test_refreshAuthToken
2018-03-02 19:01:47,885 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,885 [INFO] SONOS.sonos.workflow.result - End *test case* test_refreshAuthToken at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,885 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,885 [INFO] SONOS.sonos.workflow.result - Start *test case* test_supported_account at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,885 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,885 [INFO] SONOS.sonos.workflow.fixture.Authentication - Start Test Case: 10863066 Authentication test_supported_account
2018-03-02 19:01:47,885 [SKIP] SONOS.sonos.workflow.fixture.Authentication - Service must use session ID authentication ([Authentication Type]:sessionID in the config file) for this test to run. (expression is False)
2018-03-02 19:01:47,886 [SKIP] SONOS.sonos.workflow.fixture.Authentication - 10863066 Authentication test_supported_account
2018-03-02 19:01:47,886 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,886 [INFO] SONOS.sonos.workflow.result - End *test case* test_supported_account at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,886 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,886 [INFO] SONOS.sonos.workflow.result - Start *test case* test_unsupported_account at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,886 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,886 [INFO] SONOS.sonos.workflow.fixture.Authentication - Start Test Case: 10863067 Authentication test_unsupported_account
2018-03-02 19:01:47,886 [SKIP] SONOS.sonos.workflow.fixture.Authentication - Service must use session ID authentication ([Authentication Type]:sessionID in the config file) for this test to run. (expression is False)
2018-03-02 19:01:47,886 [SKIP] SONOS.sonos.workflow.fixture.Authentication - 10863067 Authentication test_unsupported_account
2018-03-02 19:01:47,887 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,887 [INFO] SONOS.sonos.workflow.result - End *test case* test_unsupported_account at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,887 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,887 [INFO] SONOS.sonos.workflow.result - Start *test case* test_unsupported_territory_account at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,887 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,887 [INFO] SONOS.sonos.workflow.fixture.Authentication - Start Test Case: 10863068 Authentication test_unsupported_territory_account
2018-03-02 19:01:47,887 [SKIP] SONOS.sonos.workflow.fixture.Authentication - Service must use session ID authentication ([Authentication Type]:sessionID in the config file) for this test to run. (expression is False)
2018-03-02 19:01:47,887 [SKIP] SONOS.sonos.workflow.fixture.Authentication - 10863068 Authentication test_unsupported_territory_account
2018-03-02 19:01:47,888 [INFO] SONOS.sonos.workflow.fixture.Authentication - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,888 [INFO] SONOS.sonos.workflow.result - End *test case* test_unsupported_territory_account at Friday, March 02, 2018 07:01 PM 


2018-03-02 19:01:47,888 [INFO] SONOS.sonos.workflow.result - End *test fixture* Authentication at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,888 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:01:47,888 [INFO] SONOS.sonos.workflow.result - Start *test fixture* SMAPIReporting at Friday, March 02, 2018 07:01 PM 


2018-03-02 19:01:47,888 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,888 [INFO] SONOS.sonos.workflow.result - Start *test case* test_report_account_action at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,888 [INFO] SONOS.sonos.workflow.fixture.SMAPIReporting - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,888 [INFO] SONOS.sonos.workflow.fixture.SMAPIReporting - Start Test Case: 21726130 SMAPIReporting test_report_account_action
2018-03-02 19:01:47,889 [SKIP] SONOS.sonos.workflow.fixture.SMAPIReporting - Service must support account logging ([Capabilities]:accountLogging in the config file) for this test to run. (expression is False)
2018-03-02 19:01:47,889 [SKIP] SONOS.sonos.workflow.fixture.SMAPIReporting - 21726130 SMAPIReporting test_report_account_action
2018-03-02 19:01:47,889 [INFO] SONOS.sonos.workflow.fixture.SMAPIReporting - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,889 [INFO] SONOS.sonos.workflow.result - End *test case* test_report_account_action at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,889 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,889 [INFO] SONOS.sonos.workflow.result - Start *test case* test_report_play_seconds at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,889 [INFO] SONOS.sonos.workflow.fixture.SMAPIReporting - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,889 [INFO] SONOS.sonos.workflow.fixture.SMAPIReporting - Start Test Case: 21726131 SMAPIReporting test_report_play_seconds
2018-03-02 19:01:47,890 [PASS] SONOS.sonos.workflow.fixture.SMAPIReporting - Service must support playback duration and event logging during track play ([Capabilities]:eventAndDurationLoggingDuringPlayback in the config file) for this test to run. (expression is True)
2018-03-02 19:01:47,890 [SKIP] SONOS.sonos.workflow.fixture.SMAPIReporting - Service must provide a valid track ID ([Test Content]: track in the config file) for this test to run.
2018-03-02 19:01:47,890 [SKIP] SONOS.sonos.workflow.fixture.SMAPIReporting - 21726131 SMAPIReporting test_report_play_seconds
2018-03-02 19:01:47,890 [INFO] SONOS.sonos.workflow.fixture.SMAPIReporting - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,890 [INFO] SONOS.sonos.workflow.result - End *test case* test_report_play_seconds at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,890 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,890 [INFO] SONOS.sonos.workflow.result - Start *test case* test_report_play_status at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,890 [INFO] SONOS.sonos.workflow.fixture.SMAPIReporting - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,890 [INFO] SONOS.sonos.workflow.fixture.SMAPIReporting - Start Test Case: 21726132 SMAPIReporting test_report_play_status
2018-03-02 19:01:47,890 [PASS] SONOS.sonos.workflow.fixture.SMAPIReporting - Service must support playback duration and event logging during track play ([Capabilities]:eventAndDurationLoggingDuringPlayback in the config file) for this test to run. (expression is True)
2018-03-02 19:01:47,891 [SKIP] SONOS.sonos.workflow.fixture.SMAPIReporting - Service must provide a valid track ID ([Test Content]: track in the config file) for this test to run.
2018-03-02 19:01:47,891 [SKIP] SONOS.sonos.workflow.fixture.SMAPIReporting - 21726132 SMAPIReporting test_report_play_status
2018-03-02 19:01:47,891 [INFO] SONOS.sonos.workflow.fixture.SMAPIReporting - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,891 [INFO] SONOS.sonos.workflow.result - End *test case* test_report_play_status at Friday, March 02, 2018 07:01 PM 


2018-03-02 19:01:47,891 [INFO] SONOS.sonos.workflow.result - End *test fixture* SMAPIReporting at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:47,891 [INFO] SONOS.sonos.workflow.result - ++++++++++++++++++++++++++++++++++++++++++++++++++
2018-03-02 19:01:47,891 [INFO] SONOS.sonos.workflow.result - Start *test fixture* ssl_validation at Friday, March 02, 2018 07:01 PM 


2018-03-02 19:01:47,891 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:47,892 [INFO] SONOS.sonos.workflow.result - Start *test case* test_DNS_has_valid_x509_certificate at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:47,892 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:47,892 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - Start Test Case: 43452262 ssl_validation test_DNS_has_valid_x509_certificate
2018-03-02 19:01:47,892 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - The partner should have at least one secure domain. (expression is True)
2018-03-02 19:01:49,647 [STOP] SONOS.sonos.workflow.fixture.ssl_validation - A X.509_certificate element should be returned, indicating that sonos.relisten.net has a valid X.509 certificate for the DNS name (expression is False)
2018-03-02 19:01:49,648 [STOP] SONOS.sonos.workflow.fixture.ssl_validation - 43452262 ssl_validation test_DNS_has_valid_x509_certificate
2018-03-02 19:01:49,648 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:49,648 [INFO] SONOS.sonos.workflow.result - End *test case* test_DNS_has_valid_x509_certificate at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:49,648 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:49,648 [INFO] SONOS.sonos.workflow.result - Start *test case* test_certificate_chain at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:49,648 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:49,648 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - Start Test Case: 43452263 ssl_validation test_certificate_chain
2018-03-02 19:01:49,649 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - The partner should have at least one secure domain. (expression is True)
2018-03-02 19:01:51,125 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - Requesting certificate chain should not return errors:
 (expression is False)
2018-03-02 19:01:51,759 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - The SSL certificate chain should be valid. Received status code 0: OK (expression is True)
2018-03-02 19:01:51,759 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - 43452263 ssl_validation test_certificate_chain
2018-03-02 19:01:51,760 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,760 [INFO] SONOS.sonos.workflow.result - End *test case* test_certificate_chain at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:51,760 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:51,760 [INFO] SONOS.sonos.workflow.result - Start *test case* test_certificate_expiration at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:51,760 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,761 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - Start Test Case: 43452264 ssl_validation test_certificate_expiration
2018-03-02 19:01:51,761 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - The partner should have at least one secure domain. (expression is True)
2018-03-02 19:01:51,762 [FAIL] SONOS.sonos.workflow.fixture.ssl_validation - A notBefore and notAfter element should be returned, indicating that sonos.relisten.net has a date range for validity.
2018-03-02 19:01:51,762 [FAIL] SONOS.sonos.workflow.fixture.ssl_validation - 43452264 ssl_validation test_certificate_expiration
2018-03-02 19:01:51,762 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,762 [INFO] SONOS.sonos.workflow.result - End *test case* test_certificate_expiration at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:51,762 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:51,762 [INFO] SONOS.sonos.workflow.result - Start *test case* test_support_secure_renegotiation at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:51,762 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,763 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - Start Test Case: 43452265 ssl_validation test_support_secure_renegotiation
2018-03-02 19:01:51,763 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - The partner should have at least one secure domain. (expression is True)
2018-03-02 19:01:51,763 [FAIL] SONOS.sonos.workflow.fixture.ssl_validation - There was an exception while scanning the domain (sonos.relisten.net) for secure session renegotiation: sslyze.utils.SSLyzeSSLConnection.SSLHandshakeRejected - TCP - Received RST
2018-03-02 19:01:51,764 [FAIL] SONOS.sonos.workflow.fixture.ssl_validation - 43452265 ssl_validation test_support_secure_renegotiation
2018-03-02 19:01:51,764 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,764 [INFO] SONOS.sonos.workflow.result - End *test case* test_support_secure_renegotiation at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:51,764 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:51,764 [INFO] SONOS.sonos.workflow.result - Start *test case* test_support_tls_10 at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:51,764 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,764 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - Start Test Case: 43452266 ssl_validation test_support_tls_10
2018-03-02 19:01:51,765 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - The partner should have at least one secure domain. (expression is True)
2018-03-02 19:01:51,765 [FAIL] SONOS.sonos.workflow.fixture.ssl_validation - The partner domain sonos.relisten.net must support at least one of the following TLS 1.0 cipher suites: AES128-SHA, AES256-SHA (expression is False)
2018-03-02 19:01:51,765 [FAIL] SONOS.sonos.workflow.fixture.ssl_validation - 43452266 ssl_validation test_support_tls_10
2018-03-02 19:01:51,766 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,766 [INFO] SONOS.sonos.workflow.result - End *test case* test_support_tls_10 at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:51,766 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:51,766 [INFO] SONOS.sonos.workflow.result - Start *test case* test_support_tls_12 at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:51,766 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,766 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - Start Test Case: 43452267 ssl_validation test_support_tls_12
2018-03-02 19:01:51,766 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - The partner should have at least one secure domain. (expression is True)
2018-03-02 19:01:51,767 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - 43452267 ssl_validation test_support_tls_12
2018-03-02 19:01:51,767 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,767 [INFO] SONOS.sonos.workflow.result - End *test case* test_support_tls_12 at Friday, March 02, 2018 07:01 PM 




2018-03-02 19:01:51,768 [INFO] SONOS.sonos.workflow.result - --------------------------------------------------
2018-03-02 19:01:51,768 [INFO] SONOS.sonos.workflow.result - Start *test case* test_use_secure_endpoint at Friday, March 02, 2018 07:01 PM 
2018-03-02 19:01:51,768 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,768 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - Start Test Case: 43452268 ssl_validation test_use_secure_endpoint
2018-03-02 19:01:51,768 [PASS] SONOS.sonos.workflow.fixture.ssl_validation - 43452268 ssl_validation test_use_secure_endpoint
2018-03-02 19:01:51,768 [INFO] SONOS.sonos.workflow.fixture.ssl_validation - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
2018-03-02 19:01:51,768 [INFO] SONOS.sonos.workflow.result - End *test case* test_use_secure_endpoint at Friday, March 02, 2018 07:01 PM 


2018-03-02 19:01:51,769 [INFO] SONOS.sonos.workflow.result - End *test fixture* ssl_validation at Friday, March 02, 2018 07:01 PM 


2018-03-02 19:01:51,769 [FAIL] SONOS.sonos.workflow.result - Summary: Failed. Passed: 59, Warnings: 0, Failed: 4.
2018-03-02 19:01:51,769 [INFO] SONOS.sonos.workflow.result - Test Ran for 0:03:07.687193
2018-03-02 19:01:51,769 [INFO] SONOS.sonos.workflow.result - End *test suite* 'smapiConfig' at Friday, March 02, 2018 07:01 PM 


2018-03-02 19:01:51,771 [WARNING] SONOS.sonos.workflow.result - No baseline file of white-listed failures found. This check will be skipped.
2018-03-02 19:01:51,808 [DEBUG] SONOS.sonos.workflow.result - HTML result written to log_files/smapiConfig/SummaryReport.html
